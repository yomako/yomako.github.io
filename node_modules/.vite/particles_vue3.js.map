{
  "version": 3,
  "sources": ["../vue-class-component/dist/vue-class-component.esm-bundler.js", "../tsparticles/esm/Utils/NumberUtils.js", "../tsparticles/esm/Utils/Utils.js", "../tsparticles/esm/Utils/ColorUtils.js", "../tsparticles/esm/Utils/CanvasUtils.js", "../tsparticles/esm/Core/Utils/Range.js", "../tsparticles/esm/Core/Utils/Circle.js", "../tsparticles/esm/Core/Utils/Rectangle.js", "../tsparticles/esm/Core/Utils/CircleWarp.js", "../tsparticles/esm/Core/Utils/Constants.js", "../tsparticles/esm/Core/Utils/EventListeners.js", "../tsparticles/esm/Core/Utils/ExternalInteractorBase.js", "../tsparticles/esm/Core/Utils/FrameManager.js", "../tsparticles/esm/Core/Utils/InteractionManager.js", "../tsparticles/esm/Core/Utils/ParticlesInteractorBase.js", "../tsparticles/esm/Core/Utils/ParticlesMover.js", "../tsparticles/esm/Core/Utils/Plugins.js", "../tsparticles/esm/Core/Utils/Point.js", "../tsparticles/esm/Core/Utils/QuadTree.js", "../tsparticles/esm/Core/Utils/Vector.js", "../tsparticles/esm/Core/Utils/Vector3d.js", "../tsparticles/esm/Core/Canvas.js", "../tsparticles/esm/Options/Classes/OptionsColor.js", "../tsparticles/esm/Options/Classes/Background/Background.js", "../tsparticles/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js", "../tsparticles/esm/Options/Classes/BackgroundMask/BackgroundMask.js", "../tsparticles/esm/Options/Classes/FullScreen/FullScreen.js", "../tsparticles/esm/Options/Classes/Interactivity/Events/ClickEvent.js", "../tsparticles/esm/Options/Classes/Interactivity/Events/DivEvent.js", "../tsparticles/esm/Options/Classes/Interactivity/Events/Parallax.js", "../tsparticles/esm/Options/Classes/Interactivity/Events/HoverEvent.js", "../tsparticles/esm/Options/Classes/Interactivity/Events/Events.js", "../tsparticles/esm/Options/Classes/Interactivity/Modes/Attract.js", "../tsparticles/esm/Options/Classes/Interactivity/Modes/Bounce.js", "../tsparticles/esm/Options/Classes/Interactivity/Modes/BubbleBase.js", "../tsparticles/esm/Options/Classes/Interactivity/Modes/BubbleDiv.js", "../tsparticles/esm/Options/Classes/Interactivity/Modes/Bubble.js", "../tsparticles/esm/Options/Classes/Interactivity/Modes/ConnectLinks.js", "../tsparticles/esm/Options/Classes/Interactivity/Modes/Connect.js", "../tsparticles/esm/Options/Classes/Interactivity/Modes/GrabLinks.js", "../tsparticles/esm/Options/Classes/Interactivity/Modes/Grab.js", "../tsparticles/esm/Options/Classes/Interactivity/Modes/LightGradient.js", "../tsparticles/esm/Options/Classes/Interactivity/Modes/LightArea.js", "../tsparticles/esm/Options/Classes/Interactivity/Modes/LightShadow.js", "../tsparticles/esm/Options/Classes/Interactivity/Modes/Light.js", "../tsparticles/esm/Options/Classes/Interactivity/Modes/Push.js", "../tsparticles/esm/Options/Classes/Interactivity/Modes/Remove.js", "../tsparticles/esm/Options/Classes/Interactivity/Modes/RepulseBase.js", "../tsparticles/esm/Options/Classes/Interactivity/Modes/RepulseDiv.js", "../tsparticles/esm/Options/Classes/Interactivity/Modes/Repulse.js", "../tsparticles/esm/Options/Classes/Interactivity/Modes/Slow.js", "../tsparticles/esm/Options/Classes/Interactivity/Modes/Trail.js", "../tsparticles/esm/Options/Classes/Interactivity/Modes/Modes.js", "../tsparticles/esm/Options/Classes/Interactivity/Interactivity.js", "../tsparticles/esm/Options/Classes/ManualParticle.js", "../tsparticles/esm/Options/Classes/Motion/MotionReduce.js", "../tsparticles/esm/Options/Classes/Motion/Motion.js", "../tsparticles/esm/Options/Classes/ColorAnimation.js", "../tsparticles/esm/Options/Classes/HslAnimation.js", "../tsparticles/esm/Options/Classes/AnimatableColor.js", "../tsparticles/esm/Options/Classes/AnimatableGradient.js", "../tsparticles/esm/Options/Classes/Random.js", "../tsparticles/esm/Options/Classes/ValueWithRandom.js", "../tsparticles/esm/Options/Classes/Particles/Bounce/BounceFactor.js", "../tsparticles/esm/Options/Classes/Particles/Bounce/Bounce.js", "../tsparticles/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js", "../tsparticles/esm/Options/Classes/Particles/Collisions/Collisions.js", "../tsparticles/esm/Options/Classes/Particles/Destroy/SplitFactor.js", "../tsparticles/esm/Options/Classes/Particles/Destroy/SplitRate.js", "../tsparticles/esm/Options/Classes/Particles/Destroy/Split.js", "../tsparticles/esm/Options/Classes/Particles/Destroy/Destroy.js", "../tsparticles/esm/Options/Classes/Particles/Life/LifeDelay.js", "../tsparticles/esm/Options/Classes/Particles/Life/LifeDuration.js", "../tsparticles/esm/Options/Classes/Particles/Life/Life.js", "../tsparticles/esm/Options/Classes/Particles/Links/LinksShadow.js", "../tsparticles/esm/Options/Classes/Particles/Links/LinksTriangle.js", "../tsparticles/esm/Options/Classes/Particles/Links/Links.js", "../tsparticles/esm/Options/Classes/Particles/Move/Attract.js", "../tsparticles/esm/Options/Classes/Particles/Move/MoveAngle.js", "../tsparticles/esm/Options/Classes/Particles/Move/MoveGravity.js", "../tsparticles/esm/Options/Classes/Particles/Move/OutModes.js", "../tsparticles/esm/Options/Classes/Particles/Move/Path/PathDelay.js", "../tsparticles/esm/Options/Classes/Particles/Move/Path/Path.js", "../tsparticles/esm/Options/Classes/Particles/Move/Spin.js", "../tsparticles/esm/Options/Classes/Particles/Move/Trail.js", "../tsparticles/esm/Options/Classes/Particles/Move/Move.js", "../tsparticles/esm/Options/Classes/AnimationOptions.js", "../tsparticles/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js", "../tsparticles/esm/Options/Classes/Particles/Opacity/Opacity.js", "../tsparticles/esm/Options/Classes/Particles/Orbit/OrbitRotation.js", "../tsparticles/esm/Options/Classes/Particles/Orbit/Orbit.js", "../tsparticles/esm/Options/Classes/Particles/Number/Density.js", "../tsparticles/esm/Options/Classes/Particles/Number/ParticlesNumber.js", "../tsparticles/esm/Options/Classes/Particles/Repulse/Repulse.js", "../tsparticles/esm/Options/Classes/Particles/Roll/RollLight.js", "../tsparticles/esm/Options/Classes/Particles/Roll/Roll.js", "../tsparticles/esm/Options/Classes/Particles/Rotate/RotateAnimation.js", "../tsparticles/esm/Options/Classes/Particles/Rotate/Rotate.js", "../tsparticles/esm/Options/Classes/Particles/Shadow.js", "../tsparticles/esm/Options/Classes/Particles/Shape/Shape.js", "../tsparticles/esm/Options/Classes/Particles/Size/SizeAnimation.js", "../tsparticles/esm/Options/Classes/Particles/Size/Size.js", "../tsparticles/esm/Options/Classes/Particles/Stroke.js", "../tsparticles/esm/Options/Classes/Particles/Tilt/TiltAnimation.js", "../tsparticles/esm/Options/Classes/Particles/Tilt/Tilt.js", "../tsparticles/esm/Options/Classes/Particles/Twinkle/TwinkleValues.js", "../tsparticles/esm/Options/Classes/Particles/Twinkle/Twinkle.js", "../tsparticles/esm/Options/Classes/Particles/Wobble/Wobble.js", "../tsparticles/esm/Options/Classes/Particles/ZIndex/ZIndex.js", "../tsparticles/esm/Options/Classes/Particles/ParticlesOptions.js", "../tsparticles/esm/Options/Classes/Responsive.js", "../tsparticles/esm/Options/Classes/Theme/ThemeDefault.js", "../tsparticles/esm/Options/Classes/Theme/Theme.js", "../tsparticles/esm/Options/Classes/Options.js", "../tsparticles/esm/Core/Particle.js", "../tsparticles/esm/Core/Particles.js", "../tsparticles/esm/Core/Retina.js", "../tsparticles/esm/Core/Container.js", "../tsparticles/esm/Core/Loader.js", "../tsparticles/esm/engine.js", "../tsparticles/esm/pjs.js", "../tsparticles/esm/Plugins/Absorbers/Options/Classes/AbsorberSizeLimit.js", "../tsparticles/esm/Plugins/Absorbers/Options/Classes/AbsorberSize.js", "../tsparticles/esm/Plugins/Absorbers/Options/Classes/Absorber.js", "../tsparticles/esm/Plugins/Absorbers/AbsorberInstance.js", "../tsparticles/esm/Plugins/Absorbers/Absorbers.js", "../tsparticles/esm/Plugins/Absorbers/index.js", "../tsparticles/esm/Plugins/Emitters/Shapes/Circle/CircleShape.js", "../tsparticles/esm/Plugins/Emitters/Options/Classes/EmitterLife.js", "../tsparticles/esm/Plugins/Emitters/Options/Classes/EmitterRate.js", "../tsparticles/esm/Plugins/Emitters/Options/Classes/EmitterSize.js", "../tsparticles/esm/Plugins/Emitters/Options/Classes/Emitter.js", "../tsparticles/esm/Plugins/Emitters/EmitterInstance.js", "../tsparticles/esm/Plugins/Emitters/Emitters.js", "../tsparticles/esm/Plugins/Emitters/ShapeManager.js", "../tsparticles/esm/Plugins/Emitters/Shapes/Square/SquareShape.js", "../tsparticles/esm/Plugins/Emitters/index.js", "../tsparticles/esm/Interactions/External/Trail/TrailMaker.js", "../tsparticles/esm/Interactions/External/Trail/index.js", "../tsparticles/esm/Plugins/PolygonMask/Options/Classes/PolygonMaskDrawStroke.js", "../tsparticles/esm/Plugins/PolygonMask/Options/Classes/PolygonMaskDraw.js", "../tsparticles/esm/Plugins/PolygonMask/Options/Classes/PolygonMaskInline.js", "../tsparticles/esm/Plugins/PolygonMask/Options/Classes/PolygonMaskLocalSvg.js", "../tsparticles/esm/Plugins/PolygonMask/Options/Classes/PolygonMaskMove.js", "../tsparticles/esm/Plugins/PolygonMask/Options/Classes/PolygonMask.js", "../tsparticles/esm/Plugins/PolygonMask/Utils.js", "../tsparticles/esm/Plugins/PolygonMask/PolygonMaskInstance.js", "../tsparticles/esm/Plugins/PolygonMask/index.js", "../tsparticles/esm/Updaters/Roll/RollUpdater.js", "../tsparticles/esm/Updaters/Roll/index.js", "../tsparticles/esm/Updaters/Angle/AngleUpdater.js", "../tsparticles/esm/Updaters/Angle/index.js", "../tsparticles/esm/Shapes/Circle/CircleDrawer.js", "../tsparticles/esm/Shapes/Circle/index.js", "../tsparticles/esm/Updaters/Color/ColorUpdater.js", "../tsparticles/esm/Updaters/Color/index.js", "../tsparticles/esm/Interactions/External/Attract/Attractor.js", "../tsparticles/esm/Interactions/External/Attract/index.js", "../tsparticles/esm/Interactions/External/Bounce/Bouncer.js", "../tsparticles/esm/Interactions/External/Bounce/index.js", "../tsparticles/esm/Interactions/External/Bubble/Bubbler.js", "../tsparticles/esm/Interactions/External/Bubble/index.js", "../tsparticles/esm/Interactions/External/Connect/Connector.js", "../tsparticles/esm/Interactions/External/Connect/index.js", "../tsparticles/esm/Interactions/External/Grab/Grabber.js", "../tsparticles/esm/Interactions/External/Grab/index.js", "../tsparticles/esm/Interactions/External/Repulse/Repulser.js", "../tsparticles/esm/Interactions/External/Repulse/index.js", "../tsparticles/esm/Shapes/Image/Utils.js", "../tsparticles/esm/Shapes/Image/ImageDrawer.js", "../tsparticles/esm/Shapes/Image/index.js", "../tsparticles/esm/Updaters/Life/LifeUpdater.js", "../tsparticles/esm/Updaters/Life/index.js", "../tsparticles/esm/Shapes/Line/LineDrawer.js", "../tsparticles/esm/Shapes/Line/index.js", "../tsparticles/esm/Updaters/Opacity/OpacityUpdater.js", "../tsparticles/esm/Updaters/Opacity/index.js", "../tsparticles/esm/Updaters/OutModes/Utils.js", "../tsparticles/esm/Updaters/OutModes/OutOfCanvasUpdater.js", "../tsparticles/esm/Updaters/OutModes/index.js", "../tsparticles/esm/Interactions/Particles/Attract/Attractor.js", "../tsparticles/esm/Interactions/Particles/Attract/index.js", "../tsparticles/esm/Interactions/Particles/Collisions/Collider.js", "../tsparticles/esm/Interactions/Particles/Collisions/index.js", "../tsparticles/esm/Interactions/Particles/Links/Linker.js", "../tsparticles/esm/Interactions/Particles/Links/interaction.js", "../tsparticles/esm/Interactions/Particles/Links/LinkInstance.js", "../tsparticles/esm/Interactions/Particles/Links/plugin.js", "../tsparticles/esm/Interactions/Particles/Links/index.js", "../tsparticles/esm/Shapes/Polygon/PolygonDrawerBase.js", "../tsparticles/esm/Shapes/Polygon/PolygonDrawer.js", "../tsparticles/esm/Shapes/Polygon/TriangleDrawer.js", "../tsparticles/esm/Shapes/Polygon/index.js", "../tsparticles/esm/Updaters/Size/SizeUpdater.js", "../tsparticles/esm/Updaters/Size/index.js", "../tsparticles/esm/Shapes/Square/SquareDrawer.js", "../tsparticles/esm/Shapes/Square/index.js", "../tsparticles/esm/Shapes/Star/StarDrawer.js", "../tsparticles/esm/Shapes/Star/index.js", "../tsparticles/esm/Updaters/StrokeColor/StrokeColorUpdater.js", "../tsparticles/esm/Updaters/StrokeColor/index.js", "../tsparticles/esm/Shapes/Text/TextDrawer.js", "../tsparticles/esm/Shapes/Text/index.js", "../tsparticles/esm/slim.js", "../tsparticles/esm/Updaters/Tilt/TiltUpdater.js", "../tsparticles/esm/Updaters/Tilt/index.js", "../tsparticles/esm/Updaters/Wobble/WobbleUpdater.js", "../tsparticles/esm/Updaters/Wobble/index.js", "../tsparticles/esm/full.js", "../tsparticles/esm/index.js", "../particles.vue3/dist/particles.vue.js", "dep:particles_vue3"],
  "sourcesContent": ["/**\n  * vue-class-component v8.0.0-rc.1\n  * (c) 2015-present Evan You\n  * @license MIT\n  */\nimport { ref, proxyRefs } from 'vue';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction defineGetter(obj, key, getter) {\n  Object.defineProperty(obj, key, {\n    get: getter,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nfunction defineProxy(proxy, key, target) {\n  Object.defineProperty(proxy, key, {\n    get: function get() {\n      return target[key].value;\n    },\n    set: function set(value) {\n      target[key].value = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nfunction getSuper(Ctor) {\n  var superProto = Object.getPrototypeOf(Ctor.prototype);\n\n  if (!superProto) {\n    return undefined;\n  }\n\n  return superProto.constructor;\n}\n\nfunction getOwn(value, key) {\n  return value.hasOwnProperty(key) ? value[key] : undefined;\n}\n\nvar VueImpl = /*#__PURE__*/function () {\n  function VueImpl(props, ctx) {\n    var _this = this;\n\n    _classCallCheck(this, VueImpl);\n\n    defineGetter(this, '$props', function () {\n      return props;\n    });\n    defineGetter(this, '$attrs', function () {\n      return ctx.attrs;\n    });\n    defineGetter(this, '$slots', function () {\n      return ctx.slots;\n    });\n    defineGetter(this, '$emit', function () {\n      return ctx.emit;\n    });\n    Object.keys(props).forEach(function (key) {\n      Object.defineProperty(_this, key, {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: props[key]\n      });\n    });\n  }\n\n  _createClass(VueImpl, null, [{\n    key: \"registerHooks\",\n    value: function registerHooks(keys) {\n      var _this$__h;\n\n      (_this$__h = this.__h).push.apply(_this$__h, _toConsumableArray(keys));\n    }\n  }, {\n    key: \"with\",\n    value: function _with(Props) {\n      var propsMeta = new Props();\n      var props = {};\n      Object.keys(propsMeta).forEach(function (key) {\n        var meta = propsMeta[key];\n        props[key] = meta !== null && meta !== void 0 ? meta : null;\n      });\n\n      var PropsMixin = /*#__PURE__*/function (_this2) {\n        _inherits(PropsMixin, _this2);\n\n        var _super = _createSuper(PropsMixin);\n\n        function PropsMixin() {\n          _classCallCheck(this, PropsMixin);\n\n          return _super.apply(this, arguments);\n        }\n\n        return PropsMixin;\n      }(this);\n\n      PropsMixin.__b = {\n        props: props\n      };\n      return PropsMixin;\n    }\n  }, {\n    key: \"__vccOpts\",\n    get: function get() {\n      // Early return if `this` is base class as it does not have any options\n      if (this === Vue) {\n        return {};\n      }\n\n      var Ctor = this;\n      var cache = getOwn(Ctor, '__c');\n\n      if (cache) {\n        return cache;\n      } // If the options are provided via decorator use it as a base\n\n\n      var options = _objectSpread2({}, getOwn(Ctor, '__o'));\n\n      Ctor.__c = options; // Handle super class options\n\n      var Super = getSuper(Ctor);\n\n      if (Super) {\n        options[\"extends\"] = Super.__vccOpts;\n      } // Inject base options as a mixin\n\n\n      var base = getOwn(Ctor, '__b');\n\n      if (base) {\n        options.mixins = options.mixins || [];\n        options.mixins.unshift(base);\n      }\n\n      options.methods = _objectSpread2({}, options.methods);\n      options.computed = _objectSpread2({}, options.computed);\n      var proto = Ctor.prototype;\n      Object.getOwnPropertyNames(proto).forEach(function (key) {\n        if (key === 'constructor') {\n          return;\n        } // hooks\n\n\n        if (Ctor.__h.indexOf(key) > -1) {\n          options[key] = proto[key];\n          return;\n        }\n\n        var descriptor = Object.getOwnPropertyDescriptor(proto, key); // methods\n\n        if (typeof descriptor.value === 'function') {\n          options.methods[key] = descriptor.value;\n          return;\n        } // computed properties\n\n\n        if (descriptor.get || descriptor.set) {\n          options.computed[key] = {\n            get: descriptor.get,\n            set: descriptor.set\n          };\n          return;\n        }\n      });\n\n      options.setup = function (props, ctx) {\n        var _promise;\n\n        var data = new Ctor(props, ctx);\n        var dataKeys = Object.keys(data);\n        var plainData = {};\n        var promise = null; // Initialize reactive data and convert constructor `this` to a proxy\n\n        dataKeys.forEach(function (key) {\n          // Skip if the value is undefined not to make it reactive.\n          // If the value has `__s`, it's a value from `setup` helper, proceed it later.\n          if (data[key] === undefined || data[key] && data[key].__s) {\n            return;\n          }\n\n          plainData[key] = ref(data[key]);\n          defineProxy(data, key, plainData);\n        }); // Invoke composition functions\n\n        dataKeys.forEach(function (key) {\n          if (data[key] && data[key].__s) {\n            var setupState = data[key].__s();\n\n            if (setupState instanceof Promise) {\n              if (!promise) {\n                promise = Promise.resolve(plainData);\n              }\n\n              promise = promise.then(function () {\n                return setupState.then(function (value) {\n                  plainData[key] = proxyRefs(value);\n                  return plainData;\n                });\n              });\n            } else {\n              plainData[key] = proxyRefs(setupState);\n            }\n          }\n        });\n        return (_promise = promise) !== null && _promise !== void 0 ? _promise : plainData;\n      };\n\n      var decorators = getOwn(Ctor, '__d');\n\n      if (decorators) {\n        decorators.forEach(function (fn) {\n          return fn(options);\n        });\n      } // from Vue Loader\n\n\n      var injections = ['render', 'ssrRender', '__file', '__cssModules', '__scopeId', '__hmrId'];\n      injections.forEach(function (key) {\n        if (Ctor[key]) {\n          options[key] = Ctor[key];\n        }\n      });\n      return options;\n    }\n  }]);\n\n  return VueImpl;\n}();\n\nVueImpl.__h = ['data', 'beforeCreate', 'created', 'beforeMount', 'mounted', 'beforeUnmount', 'unmounted', 'beforeUpdate', 'updated', 'activated', 'deactivated', 'render', 'errorCaptured', 'serverPrefetch'];\nvar Vue = VueImpl;\n\nfunction Options(options) {\n  return function (Component) {\n    Component.__o = options;\n    return Component;\n  };\n}\nfunction createDecorator(factory) {\n  return function (target, key, index) {\n    var Ctor = typeof target === 'function' ? target : target.constructor;\n\n    if (!Ctor.__d) {\n      Ctor.__d = [];\n    }\n\n    if (typeof index !== 'number') {\n      index = undefined;\n    }\n\n    Ctor.__d.push(function (options) {\n      return factory(options, key, index);\n    });\n  };\n}\nfunction mixins() {\n  for (var _len = arguments.length, Ctors = new Array(_len), _key = 0; _key < _len; _key++) {\n    Ctors[_key] = arguments[_key];\n  }\n\n  var _a;\n\n  return _a = /*#__PURE__*/function (_Vue) {\n    _inherits(MixedVue, _Vue);\n\n    var _super = _createSuper(MixedVue);\n\n    function MixedVue() {\n      var _this;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _classCallCheck(this, MixedVue);\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      Ctors.forEach(function (Ctor) {\n        var data = _construct(Ctor, args);\n\n        Object.keys(data).forEach(function (key) {\n          _this[key] = data[key];\n        });\n      });\n      return _this;\n    }\n\n    return MixedVue;\n  }(Vue), _a.__b = {\n    mixins: Ctors.map(function (Ctor) {\n      return Ctor.__vccOpts;\n    })\n  }, _a;\n}\nfunction setup(setupFn) {\n  // Hack to delay the invocation of setup function.\n  // Will be called after dealing with class properties.\n  return {\n    __s: setupFn\n  };\n}\n\n// Actual implementation\nfunction prop(options) {\n  return options;\n}\n\nexport { Options, Vue, createDecorator, mixins, prop, setup };\n", "import { Vector } from \"../Core\";\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return Math.random() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return typeof value === \"number\" ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return typeof value === \"number\" ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return typeof value === \"number\" ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && typeof source === \"number\")) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random;\n    const { enable, minimumValue } = typeof random === \"boolean\" ? { enable: random, minimumValue: 0 } : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x;\n    const dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx * dx + dy * dy) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction) {\n    if (typeof direction === \"number\") {\n        return (direction * Math.PI) / 180;\n    }\n    else {\n        switch (direction) {\n            case \"top\":\n                return -Math.PI / 2;\n            case \"top-right\":\n                return -Math.PI / 4;\n            case \"right\":\n                return 0;\n            case \"bottom-right\":\n                return Math.PI / 4;\n            case \"bottom\":\n                return Math.PI / 2;\n            case \"bottom-left\":\n                return (3 * Math.PI) / 4;\n            case \"left\":\n                return Math.PI;\n            case \"top-left\":\n                return (-3 * Math.PI) / 4;\n            case \"none\":\n            default:\n                return Math.random() * Math.PI * 2;\n        }\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcEasing(value, type) {\n    switch (type) {\n        case \"ease-out-quad\":\n            return 1 - (1 - value) ** 2;\n        case \"ease-out-cubic\":\n            return 1 - (1 - value) ** 3;\n        case \"ease-out-quart\":\n            return 1 - (1 - value) ** 4;\n        case \"ease-out-quint\":\n            return 1 - (1 - value) ** 5;\n        case \"ease-out-expo\":\n            return value === 1 ? 1 : 1 - Math.pow(2, -10 * value);\n        case \"ease-out-sine\":\n            return Math.sin((value * Math.PI) / 2);\n        case \"ease-out-back\": {\n            const c1 = 1.70158;\n            const c3 = c1 + 1;\n            return 1 + c3 * Math.pow(value - 1, 3) + c1 * Math.pow(value - 1, 2);\n        }\n        case \"ease-out-circ\":\n            return Math.sqrt(1 - Math.pow(value - 1, 2));\n        default:\n            return value;\n    }\n}\n", "import { collisionVelocity, getDistances, getValue } from \"./NumberUtils\";\nimport { Vector } from \"../Core\";\nfunction rectSideBounce(pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor) {\n    const res = { bounced: false };\n    if (pOtherSide.min >= rectOtherSide.min &&\n        pOtherSide.min <= rectOtherSide.max &&\n        pOtherSide.max >= rectOtherSide.min &&\n        pOtherSide.max <= rectOtherSide.max) {\n        if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n            (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n            res.velocity = velocity * -factor;\n            res.bounced = true;\n        }\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    if (selectors instanceof Array) {\n        for (const selector of selectors) {\n            if (element.matches(selector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    else {\n        return element.matches(selectors);\n    }\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function animate() {\n    return isSsr()\n        ? (callback) => setTimeout(callback)\n        : (callback) => (window.requestAnimationFrame ||\n            window.webkitRequestAnimationFrame ||\n            window.mozRequestAnimationFrame ||\n            window.oRequestAnimationFrame ||\n            window.msRequestAnimationFrame ||\n            window.setTimeout)(callback);\n}\nexport function cancelAnimation() {\n    return isSsr()\n        ? (handle) => clearTimeout(handle)\n        : (handle) => (window.cancelAnimationFrame ||\n            window.webkitCancelRequestAnimationFrame ||\n            window.mozCancelRequestAnimationFrame ||\n            window.oCancelRequestAnimationFrame ||\n            window.msCancelRequestAnimationFrame ||\n            window.clearTimeout)(handle);\n}\nexport function isInArray(value, array) {\n    return value === array || (array instanceof Array && array.indexOf(value) > -1);\n}\nexport async function loadFont(character) {\n    var _a, _b;\n    try {\n        await document.fonts.load(`${(_a = character.weight) !== null && _a !== void 0 ? _a : \"400\"} 36px '${(_b = character.font) !== null && _b !== void 0 ? _b : \"Verdana\"}'`);\n    }\n    catch (_c) {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(Math.random() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    const fixedIndex = index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array);\n    return array[fixedIndex];\n}\nexport function isPointInside(point, size, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius !== null && radius !== void 0 ? radius : 0), size, direction);\n}\nexport function areBoundsInside(bounds, size, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > 0;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > 0;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (typeof source !== \"object\") {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (typeof destination !== \"object\" || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (typeof destination !== \"object\" || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source;\n            const value = sourceDict[key];\n            const isObject = typeof value === \"object\";\n            const destDict = destination;\n            destDict[key] =\n                isObject && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return divs instanceof Array ? !!divs.find((t) => t.enable && isInArray(mode, t.mode)) : isInArray(mode, divs.mode);\n}\nexport function divModeExecute(mode, divs, callback) {\n    if (divs instanceof Array) {\n        for (const div of divs) {\n            const divMode = div.mode;\n            const divEnabled = div.enable;\n            if (divEnabled && isInArray(mode, divMode)) {\n                singleDivModeExecute(div, callback);\n            }\n        }\n    }\n    else {\n        const divMode = divs.mode;\n        const divEnabled = divs.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(divs, callback);\n        }\n    }\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    if (selectors instanceof Array) {\n        for (const selector of selectors) {\n            callback(selector, div);\n        }\n    }\n    else {\n        callback(selectors, div);\n    }\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    if (divs instanceof Array) {\n        return divs.find((d) => checkSelector(element, d.selectors));\n    }\n    else if (checkSelector(element, divs.selectors)) {\n        return divs;\n    }\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity);\n    const [pos1, pos2] = [p1.position, p2.position];\n    const { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\n        const angle = -Math.atan2(yDist, xDist);\n        const m1 = p1.mass;\n        const m2 = p2.mass;\n        const u1 = p1.velocity.rotate(angle);\n        const u2 = p2.velocity.rotate(angle);\n        const v1 = collisionVelocity(u1, u2, m1, m2);\n        const v2 = collisionVelocity(u2, u1, m1, m2);\n        const vFinal1 = v1.rotate(-angle);\n        const vFinal2 = v2.rotate(-angle);\n        p1.velocity.x = vFinal1.x * p1.factor.x;\n        p1.velocity.y = vFinal1.y * p1.factor.y;\n        p2.velocity.x = vFinal2.x * p2.factor.x;\n        p2.velocity.y = vFinal2.y * p2.factor.y;\n    }\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition();\n    const size = particle.getRadius();\n    const bounds = calculateBounds(pPos, size);\n    const resH = rectSideBounce({\n        min: bounds.left,\n        max: bounds.right,\n    }, {\n        min: bounds.top,\n        max: bounds.bottom,\n    }, {\n        min: divBounds.left,\n        max: divBounds.right,\n    }, {\n        min: divBounds.top,\n        max: divBounds.bottom,\n    }, particle.velocity.x, getValue(particle.options.bounce.horizontal));\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        min: bounds.top,\n        max: bounds.bottom,\n    }, {\n        min: bounds.left,\n        max: bounds.right,\n    }, {\n        min: divBounds.top,\n        max: divBounds.bottom,\n    }, {\n        min: divBounds.left,\n        max: divBounds.right,\n    }, particle.velocity.y, getValue(particle.options.bounce.vertical));\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\n", "import { mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { Constants } from \"../Core\";\nimport { itemFromArray } from \"./Utils\";\nfunction hue2rgb(p, q, t) {\n    let tCalc = t;\n    if (tCalc < 0) {\n        tCalc += 1;\n    }\n    if (tCalc > 1) {\n        tCalc -= 1;\n    }\n    if (tCalc < 1 / 6) {\n        return p + (q - p) * 6 * tCalc;\n    }\n    if (tCalc < 1 / 2) {\n        return q;\n    }\n    if (tCalc < 2 / 3) {\n        return p + (q - p) * (2 / 3 - tCalc) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    if (input.startsWith(\"rgb\")) {\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n        const result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseFloat(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n    else if (input.startsWith(\"hsl\")) {\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n        const result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseFloat(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n    else if (input.startsWith(\"hsv\")) {\n        const regex = /hsva?\\(\\s*(\\d+)\u00B0\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n        const result = regex.exec(input);\n        return result\n            ? hsvaToRgba({\n                a: result.length > 4 ? parseFloat(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                s: parseInt(result[2], 10),\n                v: parseInt(result[3], 10),\n            })\n            : undefined;\n    }\n    else {\n        const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i;\n        const hexFixed = input.replace(shorthandRegex, (_m, r, g, b, a) => {\n            return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n        });\n        const regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i;\n        const result = regex.exec(hexFixed);\n        return result\n            ? {\n                a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n                b: parseInt(result[3], 16),\n                g: parseInt(result[2], 16),\n                r: parseInt(result[1], 16),\n            }\n            : undefined;\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    var _a, _b, _c;\n    if (input === undefined) {\n        return;\n    }\n    const color = typeof input === \"string\" ? { value: input } : input;\n    let res;\n    if (typeof color.value === \"string\") {\n        if (color.value === Constants.randomColorValue) {\n            res = getRandomRgbColor();\n        }\n        else {\n            res = stringToRgb(color.value);\n        }\n    }\n    else {\n        if (color.value instanceof Array) {\n            const colorSelected = itemFromArray(color.value, index, useIndex);\n            res = colorToRgb({ value: colorSelected });\n        }\n        else {\n            const colorValue = color.value;\n            const rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n            if (rgbColor.r !== undefined) {\n                res = rgbColor;\n            }\n            else {\n                const hslColor = (_b = colorValue.hsl) !== null && _b !== void 0 ? _b : color.value;\n                if (hslColor.h !== undefined && hslColor.l !== undefined) {\n                    res = hslToRgb(hslColor);\n                }\n                else {\n                    const hsvColor = (_c = colorValue.hsv) !== null && _c !== void 0 ? _c : color.value;\n                    if (hsvColor.h !== undefined && hsvColor.v !== undefined) {\n                        res = hsvToRgb(hsvColor);\n                    }\n                }\n            }\n        }\n    }\n    return res;\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb !== undefined ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255;\n    const g1 = color.g / 255;\n    const b1 = color.b / 255;\n    const max = Math.max(r1, g1, b1);\n    const min = Math.min(r1, g1, b1);\n    const res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max != min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    var _a;\n    return (_a = stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 };\n    const hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (hslPercent.s === 0) {\n        result.b = hslPercent.l;\n        result.g = hslPercent.l;\n        result.r = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s;\n        const p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function hslToHsv(hsl) {\n    const l = hsl.l / 100, sl = hsl.s / 100;\n    const v = l + sl * Math.min(l, 1 - l), sv = !v ? 0 : 2 * (1 - l / v);\n    return {\n        h: hsl.h,\n        s: sv * 100,\n        v: v * 100,\n    };\n}\nexport function hslaToHsva(hsla) {\n    const hsvResult = hslToHsv(hsla);\n    return {\n        a: hsla.a,\n        h: hsvResult.h,\n        s: hsvResult.s,\n        v: hsvResult.v,\n    };\n}\nexport function hsvToHsl(hsv) {\n    const v = hsv.v / 100, sv = hsv.s / 100;\n    const l = v * (1 - sv / 2), sl = l === 0 || l === 1 ? 0 : (v - l) / Math.min(l, 1 - l);\n    return {\n        h: hsv.h,\n        l: l * 100,\n        s: sl * 100,\n    };\n}\nexport function hsvaToHsla(hsva) {\n    const hslResult = hsvToHsl(hsva);\n    return {\n        a: hsva.a,\n        h: hslResult.h,\n        l: hslResult.l,\n        s: hslResult.s,\n    };\n}\nexport function hsvToRgb(hsv) {\n    const result = { b: 0, g: 0, r: 0 };\n    const hsvPercent = {\n        h: hsv.h / 60,\n        s: hsv.s / 100,\n        v: hsv.v / 100,\n    };\n    const c = hsvPercent.v * hsvPercent.s, x = c * (1 - Math.abs((hsvPercent.h % 2) - 1));\n    let tempRgb;\n    if (hsvPercent.h >= 0 && hsvPercent.h <= 1) {\n        tempRgb = {\n            r: c,\n            g: x,\n            b: 0,\n        };\n    }\n    else if (hsvPercent.h > 1 && hsvPercent.h <= 2) {\n        tempRgb = {\n            r: x,\n            g: c,\n            b: 0,\n        };\n    }\n    else if (hsvPercent.h > 2 && hsvPercent.h <= 3) {\n        tempRgb = {\n            r: 0,\n            g: c,\n            b: x,\n        };\n    }\n    else if (hsvPercent.h > 3 && hsvPercent.h <= 4) {\n        tempRgb = {\n            r: 0,\n            g: x,\n            b: c,\n        };\n    }\n    else if (hsvPercent.h > 4 && hsvPercent.h <= 5) {\n        tempRgb = {\n            r: x,\n            g: 0,\n            b: c,\n        };\n    }\n    else if (hsvPercent.h > 5 && hsvPercent.h <= 6) {\n        tempRgb = {\n            r: c,\n            g: 0,\n            b: x,\n        };\n    }\n    if (tempRgb) {\n        const m = hsvPercent.v - c;\n        result.r = Math.floor((tempRgb.r + m) * 255);\n        result.g = Math.floor((tempRgb.g + m) * 255);\n        result.b = Math.floor((tempRgb.b + m) * 255);\n    }\n    return result;\n}\nexport function hsvaToRgba(hsva) {\n    const rgbResult = hsvToRgb(hsva);\n    return {\n        a: hsva.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function rgbToHsv(rgb) {\n    const rgbPercent = {\n        r: rgb.r / 255,\n        g: rgb.g / 255,\n        b: rgb.b / 255,\n    }, xMax = Math.max(rgbPercent.r, rgbPercent.g, rgbPercent.b), xMin = Math.min(rgbPercent.r, rgbPercent.g, rgbPercent.b), v = xMax, c = xMax - xMin;\n    let h = 0;\n    if (v === rgbPercent.r) {\n        h = 60 * ((rgbPercent.g - rgbPercent.b) / c);\n    }\n    else if (v === rgbPercent.g) {\n        h = 60 * (2 + (rgbPercent.b - rgbPercent.r) / c);\n    }\n    else if (v === rgbPercent.b) {\n        h = 60 * (4 + (rgbPercent.r - rgbPercent.g) / c);\n    }\n    const s = !v ? 0 : c / v;\n    return {\n        h,\n        s: s * 100,\n        v: v * 100,\n    };\n}\nexport function rgbaToHsva(rgba) {\n    const hsvResult = rgbToHsv(rgba);\n    return {\n        a: rgba.a,\n        h: hsvResult.h,\n        s: hsvResult.s,\n        v: hsvResult.v,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min !== null && min !== void 0 ? min : 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n}\nexport function getStyleFromHsv(color, opacity) {\n    return getStyleFromHsl(hsvToHsl(color), opacity);\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1;\n    let rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    var _a, _b;\n    if (linkColor === Constants.randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === \"mid\") {\n        const sourceColor = (_a = p1.getFillColor()) !== null && _a !== void 0 ? _a : p1.getStrokeColor();\n        const destColor = (_b = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _b !== void 0 ? _b : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = typeof optColor === \"string\" ? optColor : optColor.value;\n    if (color === Constants.randomColorValue) {\n        if (consent) {\n            return colorToRgb({\n                value: color,\n            });\n        }\n        else if (blink) {\n            return Constants.randomColorValue;\n        }\n        else {\n            return Constants.midColorValue;\n        }\n    }\n    else {\n        return colorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (colorAnimation.speed / 100) * reduceFactor;\n        if (colorAnimation.sync) {\n            return;\n        }\n        colorValue.status = 0;\n        colorValue.velocity *= Math.random();\n        if (colorValue.value) {\n            colorValue.value *= Math.random();\n        }\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n", "import { colorMix, colorToRgb, getStyleFromHsl, getStyleFromRgb } from \"./ColorUtils\";\nimport { getDistance, getDistances } from \"./NumberUtils\";\nfunction drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nfunction drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.save();\n    context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n    context.restore();\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\n    let drawn = false;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    if (shadow.enable) {\n        const shadowColor = colorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    context.save();\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n    context.restore();\n}\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius());\n    const color1 = p1.getFillColor();\n    const color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition();\n    const destPos = p2.getPosition();\n    const midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius());\n    const grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    context.save();\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n    context.restore();\n}\nexport function drawParticle(container, context, particle, delta, fillColorValue, strokeColorValue, backgroundMask, composite, radius, opacity, shadow, gradient) {\n    var _a, _b, _c, _d, _e, _f;\n    const pos = particle.getPosition();\n    const tiltOptions = particle.options.tilt;\n    const rollOptions = particle.options.roll;\n    context.save();\n    if (tiltOptions.enable || rollOptions.enable) {\n        const roll = rollOptions.enable && particle.roll;\n        const tilt = tiltOptions.enable && particle.tilt;\n        const rollHorizontal = roll && (rollOptions.mode === \"horizontal\" || rollOptions.mode === \"both\");\n        const rollVertical = roll && (rollOptions.mode === \"vertical\" || rollOptions.mode === \"both\");\n        context.setTransform(rollHorizontal ? Math.cos(particle.roll.angle) : 1, tilt ? Math.cos(particle.tilt.value) * particle.tilt.cosDirection : 0, tilt ? Math.sin(particle.tilt.value) * particle.tilt.sinDirection : 0, rollVertical ? Math.sin(particle.roll.angle) : 1, pos.x, pos.y);\n    }\n    else {\n        context.translate(pos.x, pos.y);\n    }\n    context.beginPath();\n    const angle = ((_b = (_a = particle.rotate) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 0) + (particle.options.rotate.path ? particle.velocity.angle : 0);\n    if (angle !== 0) {\n        context.rotate(angle);\n    }\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (gradient) {\n        const gradientAngle = gradient.angle.value;\n        const fillGradient = gradient.type === \"radial\"\n            ? context.createRadialGradient(0, 0, 0, 0, 0, radius)\n            : context.createLinearGradient(Math.cos(gradientAngle) * -radius, Math.sin(gradientAngle) * -radius, Math.cos(gradientAngle) * radius, Math.sin(gradientAngle) * radius);\n        for (const color of gradient.colors) {\n            fillGradient.addColorStop(color.stop, getStyleFromHsl({\n                h: color.value.h.value,\n                s: color.value.s.value,\n                l: color.value.l.value,\n            }, (_d = (_c = color.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : opacity));\n        }\n        context.fillStyle = fillGradient;\n    }\n    else {\n        if (fillColorValue) {\n            context.fillStyle = fillColorValue;\n        }\n    }\n    const stroke = particle.stroke;\n    context.lineWidth = (_e = particle.strokeWidth) !== null && _e !== void 0 ? _e : 0;\n    if (strokeColorValue) {\n        context.strokeStyle = strokeColorValue;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (((_f = stroke === null || stroke === void 0 ? void 0 : stroke.width) !== null && _f !== void 0 ? _f : 0) > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    context.restore();\n    context.save();\n    if (tiltOptions.enable && particle.tilt) {\n        context.setTransform(1, Math.cos(particle.tilt.value) * particle.tilt.cosDirection, Math.sin(particle.tilt.value) * particle.tilt.sinDirection, 1, pos.x, pos.y);\n    }\n    else {\n        context.translate(pos.x, pos.y);\n    }\n    if (angle !== 0) {\n        context.rotate(angle);\n    }\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.restore();\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    context.save();\n    plugin.draw(context, delta);\n    context.restore();\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (plugin.drawParticle !== undefined) {\n        context.save();\n        plugin.drawParticle(context, particle, delta);\n        context.restore();\n    }\n}\nexport function drawEllipse(context, particle, fillColorValue, radius, opacity, width, rotation, start, end) {\n    const pos = particle.getPosition();\n    if (fillColorValue) {\n        context.strokeStyle = getStyleFromHsl(fillColorValue, opacity);\n    }\n    if (width === 0) {\n        return;\n    }\n    context.lineWidth = width;\n    const rotationRadian = (rotation * Math.PI) / 180;\n    context.beginPath();\n    context.ellipse(pos.x, pos.y, radius / 2, radius * 2, rotationRadian, start, end);\n    context.stroke();\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n", "export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n", "import { Range } from \"./Range\";\nimport { getDistance } from \"../../Utils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const rect = range;\n        const circle = range;\n        const pos1 = this.position;\n        const pos2 = range.position;\n        const xDist = Math.abs(pos2.x - pos1.x);\n        const yDist = Math.abs(pos2.y - pos1.y);\n        const r = this.radius;\n        if (circle.radius !== undefined) {\n            const rSum = r + circle.radius;\n            const dist = Math.sqrt(xDist * xDist + yDist + yDist);\n            return rSum > dist;\n        }\n        else if (rect.size !== undefined) {\n            const w = rect.size.width;\n            const h = rect.size.height;\n            const edges = Math.pow(xDist - w, 2) + Math.pow(yDist - h, 2);\n            if (xDist > r + w || yDist > r + h) {\n                return false;\n            }\n            if (xDist <= w || yDist <= h) {\n                return true;\n            }\n            return edges <= r * r;\n        }\n        return false;\n    }\n}\n", "import { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width;\n        const h = this.size.height;\n        const pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        const rect = range;\n        const circle = range;\n        const w = this.size.width;\n        const h = this.size.height;\n        const pos1 = this.position;\n        const pos2 = range.position;\n        if (circle.radius !== undefined) {\n            return circle.intersects(this);\n        }\n        else if (rect.size !== undefined) {\n            const size2 = rect.size;\n            const w2 = size2.width;\n            const h2 = size2.height;\n            return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n        }\n        return false;\n    }\n}\n", "import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = {\n            height: canvasSize.height,\n            width: canvasSize.width,\n        };\n    }\n    contains(point) {\n        if (super.contains(point)) {\n            return true;\n        }\n        const posNE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y,\n        };\n        if (super.contains(posNE)) {\n            return true;\n        }\n        const posSE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y - this.canvasSize.height,\n        };\n        if (super.contains(posSE)) {\n            return true;\n        }\n        const posSW = {\n            x: point.x,\n            y: point.y - this.canvasSize.height,\n        };\n        return super.contains(posSW);\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range;\n        const circle = range;\n        const newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n", "export class Constants {\n}\nConstants.generatedAttribute = \"generated\";\nConstants.randomColorValue = \"random\";\nConstants.midColorValue = \"mid\";\nConstants.touchEndEvent = \"touchend\";\nConstants.mouseDownEvent = \"mousedown\";\nConstants.mouseUpEvent = \"mouseup\";\nConstants.mouseMoveEvent = \"mousemove\";\nConstants.touchStartEvent = \"touchstart\";\nConstants.touchMoveEvent = \"touchmove\";\nConstants.mouseLeaveEvent = \"mouseleave\";\nConstants.mouseOutEvent = \"mouseout\";\nConstants.touchCancelEvent = \"touchcancel\";\nConstants.resizeEvent = \"resize\";\nConstants.visibilityChangeEvent = \"visibilitychange\";\nConstants.noPolygonDataLoaded = \"No polygon data loaded.\";\nConstants.noPolygonFound = \"No polygon found, you need to specify SVG url in config.\";\n", "import { isSsr, itemFromArray } from \"../../Utils\";\nimport { Constants } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (typeof options === \"boolean\") {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this.canPush = true;\n        this.mouseMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchStartHandler = (e) => this.mouseTouchMove(e);\n        this.touchMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchEndHandler = () => this.mouseTouchFinish();\n        this.mouseLeaveHandler = () => this.mouseTouchFinish();\n        this.touchCancelHandler = () => this.mouseTouchFinish();\n        this.touchEndClickHandler = (e) => this.mouseTouchClick(e);\n        this.mouseUpHandler = (e) => this.mouseTouchClick(e);\n        this.mouseDownHandler = () => this.mouseDown();\n        this.visibilityChangeHandler = () => this.handleVisibilityChange();\n        this.themeChangeHandler = (e) => this.handleThemeChange(e);\n        this.oldThemeChangeHandler = (e) => this.handleThemeChange(e);\n        this.resizeHandler = () => this.handleWindowResize();\n    }\n    addListeners() {\n        this.manageListeners(true);\n    }\n    removeListeners() {\n        this.manageListeners(false);\n    }\n    manageListeners(add) {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        const detectType = options.interactivity.detectsOn;\n        let mouseLeaveEvent = Constants.mouseLeaveEvent;\n        if (detectType === \"window\") {\n            container.interactivity.element = window;\n            mouseLeaveEvent = Constants.mouseOutEvent;\n        }\n        else if (detectType === \"parent\" && container.canvas.element) {\n            const canvasEl = container.canvas.element;\n            container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n        }\n        else {\n            container.interactivity.element = container.canvas.element;\n        }\n        const mediaMatch = !isSsr() && typeof matchMedia !== \"undefined\" && matchMedia(\"(prefers-color-scheme: dark)\");\n        if (mediaMatch) {\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", this.themeChangeHandler, add);\n            }\n            else if (mediaMatch.addListener !== undefined) {\n                if (add) {\n                    mediaMatch.addListener(this.oldThemeChangeHandler);\n                }\n                else {\n                    mediaMatch.removeListener(this.oldThemeChangeHandler);\n                }\n            }\n        }\n        const interactivityEl = container.interactivity.element;\n        if (!interactivityEl) {\n            return;\n        }\n        const html = interactivityEl;\n        if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n            manageListener(interactivityEl, Constants.mouseMoveEvent, this.mouseMoveHandler, add);\n            manageListener(interactivityEl, Constants.touchStartEvent, this.touchStartHandler, add);\n            manageListener(interactivityEl, Constants.touchMoveEvent, this.touchMoveHandler, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, Constants.touchEndEvent, this.touchEndHandler, add);\n            }\n            else {\n                manageListener(interactivityEl, Constants.touchEndEvent, this.touchEndClickHandler, add);\n                manageListener(interactivityEl, Constants.mouseUpEvent, this.mouseUpHandler, add);\n                manageListener(interactivityEl, Constants.mouseDownEvent, this.mouseDownHandler, add);\n            }\n            manageListener(interactivityEl, mouseLeaveEvent, this.mouseLeaveHandler, add);\n            manageListener(interactivityEl, Constants.touchCancelEvent, this.touchCancelHandler, add);\n        }\n        if (container.canvas.element) {\n            container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n        }\n        if (options.interactivity.events.resize) {\n            if (typeof ResizeObserver !== \"undefined\") {\n                if (this.resizeObserver && !add) {\n                    if (container.canvas.element) {\n                        this.resizeObserver.unobserve(container.canvas.element);\n                    }\n                    this.resizeObserver.disconnect();\n                    delete this.resizeObserver;\n                }\n                else if (!this.resizeObserver && add && container.canvas.element) {\n                    this.resizeObserver = new ResizeObserver((entries) => {\n                        const entry = entries.find((e) => e.target === container.canvas.element);\n                        if (!entry) {\n                            return;\n                        }\n                        this.handleWindowResize();\n                    });\n                    this.resizeObserver.observe(container.canvas.element);\n                }\n            }\n            else {\n                manageListener(window, Constants.resizeEvent, this.resizeHandler, add);\n            }\n        }\n        if (document) {\n            manageListener(document, Constants.visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n        }\n    }\n    handleWindowResize() {\n        if (this.resizeTimeout) {\n            clearTimeout(this.resizeTimeout);\n            delete this.resizeTimeout;\n        }\n        this.resizeTimeout = setTimeout(async () => { var _a; return await ((_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize()); }, 500);\n    }\n    handleVisibilityChange() {\n        const container = this.container;\n        const options = container.actualOptions;\n        this.mouseTouchFinish();\n        if (!options.pauseOnBlur) {\n            return;\n        }\n        if (document === null || document === void 0 ? void 0 : document.hidden) {\n            container.pageHidden = true;\n            container.pause();\n        }\n        else {\n            container.pageHidden = false;\n            if (container.getAnimationStatus()) {\n                container.play(true);\n            }\n            else {\n                container.draw(true);\n            }\n        }\n    }\n    mouseDown() {\n        const interactivity = this.container.interactivity;\n        if (interactivity) {\n            const mouse = interactivity.mouse;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        }\n    }\n    mouseTouchMove(e) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const container = this.container;\n        const options = container.actualOptions;\n        if (((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element) === undefined) {\n            return;\n        }\n        container.interactivity.mouse.inside = true;\n        let pos;\n        const canvas = container.canvas.element;\n        if (e.type.startsWith(\"mouse\")) {\n            this.canPush = true;\n            const mouseEvent = e;\n            if (container.interactivity.element === window) {\n                if (canvas) {\n                    const clientRect = canvas.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.clientX - clientRect.left,\n                        y: mouseEvent.clientY - clientRect.top,\n                    };\n                }\n            }\n            else if (options.interactivity.detectsOn === \"parent\") {\n                const source = mouseEvent.target;\n                const target = mouseEvent.currentTarget;\n                const canvasEl = container.canvas.element;\n                if (source && target && canvasEl) {\n                    const sourceRect = source.getBoundingClientRect();\n                    const targetRect = target.getBoundingClientRect();\n                    const canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                        y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                    };\n                }\n                else {\n                    pos = {\n                        x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n                        y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                if (mouseEvent.target === container.canvas.element) {\n                    pos = {\n                        x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n                        y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY,\n                    };\n                }\n            }\n        }\n        else {\n            this.canPush = e.type !== \"touchmove\";\n            const touchEvent = e;\n            const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n            const canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n            pos = {\n                x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n                y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0),\n            };\n        }\n        const pxRatio = container.retina.pixelRatio;\n        if (pos) {\n            pos.x *= pxRatio;\n            pos.y *= pxRatio;\n        }\n        container.interactivity.mouse.position = pos;\n        container.interactivity.status = Constants.mouseMoveEvent;\n    }\n    mouseTouchFinish() {\n        const interactivity = this.container.interactivity;\n        if (interactivity === undefined) {\n            return;\n        }\n        const mouse = interactivity.mouse;\n        delete mouse.position;\n        delete mouse.clickPosition;\n        delete mouse.downPosition;\n        interactivity.status = Constants.mouseLeaveEvent;\n        mouse.inside = false;\n        mouse.clicking = false;\n    }\n    mouseTouchClick(e) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouse = container.interactivity.mouse;\n        mouse.inside = true;\n        let handled = false;\n        const mousePosition = mouse.position;\n        if (mousePosition === undefined || !options.interactivity.events.onClick.enable) {\n            return;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.clickPositionValid !== undefined) {\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n        }\n        if (!handled) {\n            this.doMouseTouchClick(e);\n        }\n        mouse.clicking = false;\n    }\n    doMouseTouchClick(e) {\n        const container = this.container;\n        const options = container.actualOptions;\n        if (this.canPush) {\n            const mousePos = container.interactivity.mouse.position;\n            if (mousePos) {\n                container.interactivity.mouse.clickPosition = {\n                    x: mousePos.x,\n                    y: mousePos.y,\n                };\n            }\n            else {\n                return;\n            }\n            container.interactivity.mouse.clickTime = new Date().getTime();\n            const onClick = options.interactivity.events.onClick;\n            if (onClick.mode instanceof Array) {\n                for (const mode of onClick.mode) {\n                    this.handleClickMode(mode);\n                }\n            }\n            else {\n                this.handleClickMode(onClick.mode);\n            }\n        }\n        if (e.type === \"touchend\") {\n            setTimeout(() => this.mouseTouchFinish(), 500);\n        }\n    }\n    handleThemeChange(e) {\n        const mediaEvent = e;\n        const themeName = mediaEvent.matches\n            ? this.container.options.defaultDarkTheme\n            : this.container.options.defaultLightTheme;\n        const theme = this.container.options.themes.find((theme) => theme.name === themeName);\n        if (theme && theme.default.auto) {\n            this.container.loadTheme(themeName);\n        }\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const pushNb = options.interactivity.modes.push.quantity;\n        const removeNb = options.interactivity.modes.remove.quantity;\n        switch (mode) {\n            case \"push\": {\n                if (pushNb > 0) {\n                    const pushOptions = options.interactivity.modes.push;\n                    const group = itemFromArray([undefined, ...pushOptions.groups]);\n                    const groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n                    container.particles.push(pushNb, container.interactivity.mouse, groupOptions, group);\n                }\n                break;\n            }\n            case \"remove\":\n                container.particles.removeQuantity(removeNb);\n                break;\n            case \"bubble\":\n                container.bubble.clicking = true;\n                break;\n            case \"repulse\":\n                container.repulse.clicking = true;\n                container.repulse.count = 0;\n                for (const particle of container.repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                container.repulse.particles = [];\n                container.repulse.finish = false;\n                setTimeout(() => {\n                    if (!container.destroyed) {\n                        container.repulse.clicking = false;\n                    }\n                }, options.interactivity.modes.repulse.duration * 1000);\n                break;\n            case \"attract\":\n                container.attract.clicking = true;\n                container.attract.count = 0;\n                for (const particle of container.attract.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                container.attract.particles = [];\n                container.attract.finish = false;\n                setTimeout(() => {\n                    if (!container.destroyed) {\n                        container.attract.clicking = false;\n                    }\n                }, options.interactivity.modes.attract.duration * 1000);\n                break;\n            case \"pause\":\n                if (container.getAnimationStatus()) {\n                    container.pause();\n                }\n                else {\n                    container.play();\n                }\n                break;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.handleClickMode) {\n                plugin.handleClickMode(mode);\n            }\n        }\n    }\n}\n", "export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = 0;\n    }\n}\n", "export class FrameManager {\n    constructor(container) {\n        this.container = container;\n    }\n    async nextFrame(timestamp) {\n        var _a;\n        try {\n            const container = this.container;\n            if (container.lastFrameTime !== undefined &&\n                timestamp < container.lastFrameTime + 1000 / container.fpsLimit) {\n                container.draw(false);\n                return;\n            }\n            (_a = container.lastFrameTime) !== null && _a !== void 0 ? _a : (container.lastFrameTime = timestamp);\n            const deltaValue = timestamp - container.lastFrameTime;\n            const delta = {\n                value: deltaValue,\n                factor: (60 * deltaValue) / 1000,\n            };\n            container.lifeTime += delta.value;\n            container.lastFrameTime = timestamp;\n            if (deltaValue > 1000) {\n                container.draw(false);\n                return;\n            }\n            await container.particles.draw(delta);\n            if (container.duration > 0 && container.lifeTime > container.duration) {\n                container.destroy();\n                return;\n            }\n            if (container.getAnimationStatus()) {\n                container.draw(false);\n            }\n        }\n        catch (e) {\n            console.error(\"tsParticles error in animation loop\", e);\n        }\n    }\n}\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _InteractionManager_engine;\nexport class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        _InteractionManager_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _InteractionManager_engine, engine, \"f\");\n        this.externalInteractors = [];\n        this.particleInteractors = [];\n        this.init();\n    }\n    init() {\n        const interactors = __classPrivateFieldGet(this, _InteractionManager_engine, \"f\").plugins.getInteractors(this.container, true);\n        this.externalInteractors = [];\n        this.particleInteractors = [];\n        for (const interactor of interactors) {\n            switch (interactor.type) {\n                case 0:\n                    this.externalInteractors.push(interactor);\n                    break;\n                case 1:\n                    this.particleInteractors.push(interactor);\n                    break;\n            }\n        }\n    }\n    async externalInteract(delta) {\n        for (const interactor of this.externalInteractors) {\n            if (interactor.isEnabled()) {\n                await interactor.interact(delta);\n            }\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this.externalInteractors) {\n            interactor.reset(particle);\n        }\n        for (const interactor of this.particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                await interactor.interact(particle, delta);\n            }\n        }\n    }\n}\n_InteractionManager_engine = new WeakMap();\n", "export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = 1;\n    }\n}\n", "import { clamp, getDistance, getDistances, getRangeMax, getRangeValue, isInArray, isSsr } from \"../../Utils\";\nfunction applyDistance(particle) {\n    const initialPosition = particle.initialPosition;\n    const { dx, dy } = getDistances(initialPosition, particle.position);\n    const dxFixed = Math.abs(dx), dyFixed = Math.abs(dy);\n    const hDistance = particle.retina.maxDistance.horizontal;\n    const vDistance = particle.retina.maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -Math.random();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -Math.random();\n        }\n    }\n}\nexport class ParticlesMover {\n    constructor(container) {\n        this.container = container;\n    }\n    move(particle, delta) {\n        if (particle.destroyed) {\n            return;\n        }\n        this.moveParticle(particle, delta);\n        this.moveParallax(particle);\n    }\n    moveParticle(particle, delta) {\n        var _a, _b, _c;\n        var _d, _e;\n        const particleOptions = particle.options;\n        const moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = this.container, slowFactor = this.getProximitySpeedFactor(particle), baseSpeed = ((_a = (_d = particle.retina).moveSpeed) !== null && _a !== void 0 ? _a : (_d.moveSpeed = getRangeValue(moveOptions.speed) * container.retina.pixelRatio)) *\n            container.retina.reduceFactor, moveDrift = ((_b = (_e = particle.retina).moveDrift) !== null && _b !== void 0 ? _b : (_e.moveDrift = getRangeValue(particle.options.move.drift) * container.retina.pixelRatio)), maxSize = getRangeMax(particleOptions.size.value) * container.retina.pixelRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, diffFactor = 2, speedFactor = (sizeFactor * slowFactor * (delta.factor || 1)) / diffFactor, moveSpeed = baseSpeed * speedFactor;\n        this.applyPath(particle, delta);\n        const gravityOptions = moveOptions.gravity;\n        const gravityFactor = gravityOptions.enable && gravityOptions.inverse ? -1 : 1;\n        if (gravityOptions.enable && moveSpeed) {\n            particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n        }\n        if (moveDrift && moveSpeed) {\n            particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n        }\n        const decay = particle.moveDecay;\n        if (decay != 1) {\n            particle.velocity.multTo(decay);\n        }\n        const velocity = particle.velocity.mult(moveSpeed);\n        const maxSpeed = (_c = particle.retina.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n        if (gravityOptions.enable &&\n            gravityOptions.maxSpeed > 0 &&\n            ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n                (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n            velocity.y = gravityFactor * maxSpeed;\n            if (moveSpeed) {\n                particle.velocity.y = velocity.y / moveSpeed;\n            }\n        }\n        const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n        if (moveOptions.spin.enable) {\n            this.spin(particle, moveSpeed);\n        }\n        else {\n            if (zVelocityFactor != 1) {\n                velocity.multTo(zVelocityFactor);\n            }\n            particle.position.addTo(velocity);\n            if (moveOptions.vibrate) {\n                particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n                particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n            }\n        }\n        applyDistance(particle);\n    }\n    spin(particle, moveSpeed) {\n        const container = this.container;\n        if (!particle.spin) {\n            return;\n        }\n        const updateFunc = {\n            x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n            y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n        };\n        particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n        particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n        particle.spin.radius += particle.spin.acceleration;\n        const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n        if (particle.spin.radius > maxCanvasSize / 2) {\n            particle.spin.radius = maxCanvasSize / 2;\n            particle.spin.acceleration *= -1;\n        }\n        else if (particle.spin.radius < 0) {\n            particle.spin.radius = 0;\n            particle.spin.acceleration *= -1;\n        }\n        particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n    }\n    applyPath(particle, delta) {\n        const particlesOptions = particle.options;\n        const pathOptions = particlesOptions.move.path;\n        const pathEnabled = pathOptions.enable;\n        if (!pathEnabled) {\n            return;\n        }\n        const container = this.container;\n        if (particle.lastPathTime <= particle.pathDelay) {\n            particle.lastPathTime += delta.value;\n            return;\n        }\n        const path = container.pathGenerator.generate(particle);\n        particle.velocity.addTo(path);\n        if (pathOptions.clamp) {\n            particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n            particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n        }\n        particle.lastPathTime -= particle.pathDelay;\n    }\n    moveParallax(particle) {\n        const container = this.container;\n        const options = container.actualOptions;\n        if (isSsr() || !options.interactivity.events.onHover.parallax.enable) {\n            return;\n        }\n        const parallaxForce = options.interactivity.events.onHover.parallax.force;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasCenter = {\n            x: container.canvas.size.width / 2,\n            y: container.canvas.size.height / 2,\n        };\n        const parallaxSmooth = options.interactivity.events.onHover.parallax.smooth;\n        const factor = particle.getRadius() / parallaxForce;\n        const tmp = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        };\n        particle.offset.x += (tmp.x - particle.offset.x) / parallaxSmooth;\n        particle.offset.y += (tmp.y - particle.offset.y) / parallaxSmooth;\n    }\n    getProximitySpeedFactor(particle) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const active = isInArray(\"slow\", options.interactivity.events.onHover.mode);\n        if (!active) {\n            return 1;\n        }\n        const mousePos = this.container.interactivity.mouse.position;\n        if (!mousePos) {\n            return 1;\n        }\n        const particlePos = particle.getPosition();\n        const dist = getDistance(mousePos, particlePos);\n        const radius = container.retina.slowModeRadius;\n        if (dist > radius) {\n            return 1;\n        }\n        const proximityFactor = dist / radius || 0;\n        const slowFactor = options.interactivity.modes.slow.factor;\n        return proximityFactor / slowFactor;\n    }\n}\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _Plugins_engine;\nexport class Plugins {\n    constructor(engine) {\n        _Plugins_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Plugins_engine, engine, \"f\");\n        this.plugins = [];\n        this.interactorsInitializers = new Map();\n        this.updatersInitializers = new Map();\n        this.interactors = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    addPlugin(plugin) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (!plugin.needsPlugin(container.actualOptions)) {\n                continue;\n            }\n            res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    addPreset(presetKey, options, override = false) {\n        if (override || !this.getPreset(presetKey)) {\n            this.presets.set(presetKey, options);\n        }\n    }\n    addShapeDrawer(type, drawer) {\n        if (!this.getShapeDrawer(type)) {\n            this.drawers.set(type, drawer);\n        }\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    addPathGenerator(type, pathGenerator) {\n        if (!this.getPathGenerator(type)) {\n            this.pathGenerators.set(type, pathGenerator);\n        }\n    }\n    getInteractors(container, force = false) {\n        let res = this.interactors.get(container);\n        if (!res || force) {\n            res = [...this.interactorsInitializers.values()].map((t) => t(container));\n            this.interactors.set(container, res);\n        }\n        return res;\n    }\n    addInteractor(name, initInteractor) {\n        this.interactorsInitializers.set(name, initInteractor);\n    }\n    getUpdaters(container, force = false) {\n        let res = this.updaters.get(container);\n        if (!res || force) {\n            res = [...this.updatersInitializers.values()].map((t) => t(container));\n            this.updaters.set(container, res);\n        }\n        return res;\n    }\n    addParticleUpdater(name, initUpdater) {\n        this.updatersInitializers.set(name, initUpdater);\n    }\n}\n_Plugins_engine = new WeakMap();\n", "export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n", "import { Circle } from \"./Circle\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this.points = [];\n        this.divided = false;\n    }\n    subdivide() {\n        const x = this.rectangle.position.x;\n        const y = this.rectangle.position.y;\n        const w = this.rectangle.size.width;\n        const h = this.rectangle.size.height;\n        const capacity = this.capacity;\n        this.northEast = new QuadTree(new Rectangle(x, y, w / 2, h / 2), capacity);\n        this.northWest = new QuadTree(new Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n        this.southEast = new QuadTree(new Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n        this.southWest = new QuadTree(new Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n        this.divided = true;\n    }\n    insert(point) {\n        var _a, _b, _c, _d, _e;\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this.points.length < this.capacity) {\n            this.points.push(point);\n            return true;\n        }\n        if (!this.divided) {\n            this.subdivide();\n        }\n        return ((_e = (((_a = this.northEast) === null || _a === void 0 ? void 0 : _a.insert(point)) ||\n            ((_b = this.northWest) === null || _b === void 0 ? void 0 : _b.insert(point)) ||\n            ((_c = this.southEast) === null || _c === void 0 ? void 0 : _c.insert(point)) ||\n            ((_d = this.southWest) === null || _d === void 0 ? void 0 : _d.insert(point)))) !== null && _e !== void 0 ? _e : false);\n    }\n    queryCircle(position, radius) {\n        return this.query(new Circle(position.x, position.y, radius));\n    }\n    queryCircleWarp(position, radius, containerOrSize) {\n        const container = containerOrSize;\n        const size = containerOrSize;\n        return this.query(new CircleWarp(position.x, position.y, radius, container.canvas !== undefined ? container.canvas.size : size));\n    }\n    queryRectangle(position, size) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height));\n    }\n    query(range, found) {\n        var _a, _b, _c, _d;\n        const res = found !== null && found !== void 0 ? found : [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        else {\n            for (const p of this.points) {\n                if (!range.contains(p.position) && getDistance(range.position, p.position) > p.particle.getRadius()) {\n                    continue;\n                }\n                res.push(p.particle);\n            }\n            if (this.divided) {\n                (_a = this.northEast) === null || _a === void 0 ? void 0 : _a.query(range, res);\n                (_b = this.northWest) === null || _b === void 0 ? void 0 : _b.query(range, res);\n                (_c = this.southEast) === null || _c === void 0 ? void 0 : _c.query(range, res);\n                (_d = this.southWest) === null || _d === void 0 ? void 0 : _d.query(range, res);\n            }\n        }\n        return res;\n    }\n}\n", "export class Vector {\n    constructor(x, y) {\n        let defX, defY;\n        if (y === undefined) {\n            if (typeof x === \"number\") {\n                throw new Error(\"tsParticles - Vector not initialized correctly\");\n            }\n            const coords = x;\n            [defX, defY] = [coords.x, coords.y];\n        }\n        else {\n            [defX, defY] = [x, y];\n        }\n        this.x = defX;\n        this.y = defY;\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.x ** 2 + this.y ** 2);\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    add(v) {\n        return Vector.create(this.x + v.x, this.y + v.y);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n    }\n    sub(v) {\n        return Vector.create(this.x - v.x, this.y - v.y);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n    }\n    mult(n) {\n        return Vector.create(this.x * n, this.y * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n    }\n    div(n) {\n        return Vector.create(this.x / n, this.y / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    manhattanDistanceTo(v) {\n        return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\n    }\n    copy() {\n        return Vector.clone(this);\n    }\n    setTo(velocity) {\n        this.x = velocity.x;\n        this.y = velocity.y;\n    }\n    rotate(angle) {\n        return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\n", "import { Vector } from \"./Vector\";\nexport class Vector3d extends Vector {\n    constructor(x, y, z) {\n        super(x, y);\n        this.z = z === undefined ? x.z : z;\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return v instanceof Vector3d ? Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z) : super.add(v);\n    }\n    addTo(v) {\n        super.addTo(v);\n        if (v instanceof Vector3d) {\n            this.z += v.z;\n        }\n    }\n    sub(v) {\n        return v instanceof Vector3d ? Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z) : super.sub(v);\n    }\n    subFrom(v) {\n        super.subFrom(v);\n        if (v instanceof Vector3d) {\n            this.z -= v.z;\n        }\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        super.multTo(n);\n        this.z *= n;\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        super.divTo(n);\n        this.z /= n;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    setTo(v) {\n        super.setTo(v);\n        if (v instanceof Vector3d) {\n            this.z = v.z;\n        }\n    }\n}\n", "import { clear, colorToHsl, colorToRgb, deepExtend, drawConnectLine, drawGrabLine, drawParticle, drawParticlePlugin, drawPlugin, getStyleFromHsl, getStyleFromRgb, gradient, paintBase, } from \"../Utils\";\nimport { Constants } from \"./Utils\";\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    init() {\n        this.resize();\n        this.initStyle();\n        this.initCover();\n        this.initTrail();\n        this.initBackground();\n        this.paint();\n    }\n    loadCanvas(canvas) {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas =\n            canvas.dataset && Constants.generatedAttribute in canvas.dataset\n                ? canvas.dataset[Constants.generatedAttribute] === \"true\"\n                : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.draw((ctx) => {\n            clear(ctx, this.size);\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n                clear(ctx, this.size);\n                this.paintBase(getStyleFromRgb(this.coverColor, this.coverColor.a));\n            }\n            else {\n                this.paintBase();\n            }\n        });\n    }\n    clear() {\n        const options = this.container.actualOptions;\n        const trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        this.resize();\n        const needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        const pxRatio = container.retina.pixelRatio;\n        const size = container.canvas.size;\n        const oldSize = Object.assign({}, size);\n        size.width = this.element.offsetWidth * pxRatio;\n        size.height = this.element.offsetHeight * pxRatio;\n        this.element.width = size.width;\n        this.element.height = size.height;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    drawConnectLine(p1, p2) {\n        this.draw((ctx) => {\n            var _a;\n            const lineStyle = this.lineStyle(p1, p2);\n            if (!lineStyle) {\n                return;\n            }\n            const pos1 = p1.getPosition();\n            const pos2 = p2.getPosition();\n            drawConnectLine(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n        });\n    }\n    drawGrabLine(particle, lineColor, opacity, mousePos) {\n        const container = this.container;\n        this.draw((ctx) => {\n            var _a;\n            const beginPos = particle.getPosition();\n            drawGrabLine(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n        });\n    }\n    drawParticle(particle, delta) {\n        var _a, _b, _c, _d, _e, _f;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const pfColor = particle.getFillColor();\n        const psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        if (!pfColor && !psColor) {\n            return;\n        }\n        let [fColor, sColor] = this.getPluginParticleColors(particle);\n        const pOptions = particle.options;\n        const twinkle = pOptions.twinkle.particles;\n        const twinkling = twinkle.enable && Math.random() < twinkle.frequency;\n        if (!fColor || !sColor) {\n            const twinkleRgb = colorToHsl(twinkle.color);\n            if (!fColor) {\n                fColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : pfColor ? pfColor : undefined;\n            }\n            if (!sColor) {\n                sColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : psColor ? psColor : undefined;\n            }\n        }\n        const options = this.container.actualOptions;\n        const zIndexOptions = particle.options.zIndex;\n        const zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate;\n        const radius = particle.getRadius();\n        const opacity = twinkling ? twinkle.opacity : (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1;\n        const strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity;\n        const zOpacity = opacity * zOpacityFactor;\n        const fillColorValue = fColor ? getStyleFromHsl(fColor, zOpacity) : undefined;\n        if (!fillColorValue && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const zSizeFactor = (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate;\n            const zStrokeOpacity = strokeOpacity * zOpacityFactor;\n            const strokeColorValue = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : fillColorValue;\n            if (radius <= 0) {\n                return;\n            }\n            const container = this.container;\n            for (const updater of container.particles.updaters) {\n                if (updater.beforeDraw) {\n                    updater.beforeDraw(particle);\n                }\n            }\n            drawParticle(this.container, ctx, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow, particle.gradient);\n            for (const updater of container.particles.updaters) {\n                if (updater.afterDraw) {\n                    updater.afterDraw(particle);\n                }\n            }\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            drawPlugin(ctx, plugin, delta);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    initBackground() {\n        const options = this.container.actualOptions;\n        const background = options.background;\n        const element = this.element;\n        const elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = colorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    draw(cb) {\n        if (!this.context) {\n            return;\n        }\n        return cb(this.context);\n    }\n    initCover() {\n        const options = this.container.actualOptions;\n        const cover = options.backgroundMask.cover;\n        const color = cover.color;\n        const coverRgb = colorToRgb(color);\n        if (coverRgb) {\n            this.coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n        }\n    }\n    initTrail() {\n        const options = this.container.actualOptions;\n        const trail = options.particles.move.trail;\n        const fillColor = colorToRgb(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this.trailFillColor = {\n                r: fillColor.r,\n                g: fillColor.g,\n                b: fillColor.b,\n                a: 1 / trail.length,\n            };\n        }\n    }\n    getPluginParticleColors(particle) {\n        let fColor;\n        let sColor;\n        for (const [, plugin] of this.container.plugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = colorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = colorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        const originalStyle = this.originalStyle;\n        if (options.fullScreen.enable) {\n            this.originalStyle = deepExtend({}, element.style);\n            element.style.setProperty(\"position\", \"fixed\", \"important\");\n            element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n            element.style.setProperty(\"top\", \"0\", \"important\");\n            element.style.setProperty(\"left\", \"0\", \"important\");\n            element.style.setProperty(\"width\", \"100%\", \"important\");\n            element.style.setProperty(\"height\", \"100%\", \"important\");\n        }\n        else if (originalStyle) {\n            element.style.position = originalStyle.position;\n            element.style.zIndex = originalStyle.zIndex;\n            element.style.top = originalStyle.top;\n            element.style.left = originalStyle.left;\n            element.style.width = originalStyle.width;\n            element.style.height = originalStyle.height;\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    paintBase(baseColor) {\n        this.draw((ctx) => {\n            paintBase(ctx, this.size, baseColor);\n        });\n    }\n    lineStyle(p1, p2) {\n        return this.draw((ctx) => {\n            const options = this.container.actualOptions;\n            const connectOptions = options.interactivity.modes.connect;\n            return gradient(ctx, p1, p2, connectOptions.links.opacity);\n        });\n    }\n}\n", "export class OptionsColor {\n    constructor() {\n        this.value = \"#fff\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (typeof data === \"string\" || data instanceof Array) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if ((data === null || data === void 0 ? void 0 : data.value) === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n", "import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.opacity = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (typeof data.cover === \"string\" ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n", "export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n", "export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n", "export class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get ids() {\n        return this.selectors instanceof Array\n            ? this.selectors.map((t) => t.replace(\"#\", \"\"))\n            : this.selectors.replace(\"#\", \"\");\n    }\n    set ids(value) {\n        this.selectors = value instanceof Array ? value.map((t) => `#${t}`) : `#${value}`;\n    }\n    load(data) {\n        var _a, _b;\n        if (data === undefined) {\n            return;\n        }\n        const ids = (_b = (_a = data.ids) !== null && _a !== void 0 ? _a : data.elementId) !== null && _b !== void 0 ? _b : data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n", "export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n", "import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n", "import { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = true;\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (data === undefined) {\n            return;\n        }\n        this.onClick.load((_a = data.onClick) !== null && _a !== void 0 ? _a : data.onclick);\n        const onDiv = (_b = data.onDiv) !== null && _b !== void 0 ? _b : data.ondiv;\n        if (onDiv !== undefined) {\n            if (onDiv instanceof Array) {\n                this.onDiv = onDiv.map((div) => {\n                    const tmp = new DivEvent();\n                    tmp.load(div);\n                    return tmp;\n                });\n            }\n            else {\n                this.onDiv = new DivEvent();\n                this.onDiv.load(onDiv);\n            }\n        }\n        this.onHover.load((_c = data.onHover) !== null && _c !== void 0 ? _c : data.onhover);\n        if (data.resize !== undefined) {\n            this.resize = data.resize;\n        }\n    }\n}\n", "export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n", "export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n", "import { OptionsColor } from \"../../OptionsColor\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            if (data.color instanceof Array) {\n                this.color = data.color.map((s) => OptionsColor.create(undefined, s));\n            }\n            else {\n                if (this.color instanceof Array) {\n                    this.color = new OptionsColor();\n                }\n                this.color = OptionsColor.create(this.color, data.color);\n            }\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n", "import { BubbleBase } from \"./BubbleBase\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return this.selectors instanceof Array\n            ? this.selectors.map((t) => t.replace(\"#\", \"\"))\n            : this.selectors.replace(\"#\", \"\");\n    }\n    set ids(value) {\n        this.selectors = value instanceof Array ? value.map((t) => `#${t}`) : `#${value}`;\n    }\n    load(data) {\n        super.load(data);\n        if (data === undefined) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n", "import { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!(data !== undefined && data.divs !== undefined)) {\n            return;\n        }\n        if (data.divs instanceof Array) {\n            this.divs = data.divs.map((s) => {\n                const tmp = new BubbleDiv();\n                tmp.load(s);\n                return tmp;\n            });\n        }\n        else {\n            if (this.divs instanceof Array || !this.divs) {\n                this.divs = new BubbleDiv();\n            }\n            this.divs.load(data.divs);\n        }\n    }\n}\n", "export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!(data !== undefined && data.opacity !== undefined)) {\n            return;\n        }\n        this.opacity = data.opacity;\n    }\n}\n", "import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (data === undefined) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load((_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n", "import { OptionsColor } from \"../../OptionsColor\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (data === undefined) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load((_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked);\n    }\n}\n", "import { OptionsColor } from \"../../OptionsColor\";\nexport class LightGradient {\n    constructor() {\n        this.start = new OptionsColor();\n        this.stop = new OptionsColor();\n        this.start.value = \"#ffffff\";\n        this.stop.value = \"#000000\";\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        this.start = OptionsColor.create(this.start, data.start);\n        this.stop = OptionsColor.create(this.stop, data.stop);\n    }\n}\n", "import { LightGradient } from \"./LightGradient\";\nexport class LightArea {\n    constructor() {\n        this.gradient = new LightGradient();\n        this.radius = 1000;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        this.gradient.load(data.gradient);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n", "import { OptionsColor } from \"../../OptionsColor\";\nexport class LightShadow {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#000000\";\n        this.length = 2000;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n", "import { LightArea } from \"./LightArea\";\nimport { LightShadow } from \"./LightShadow\";\nexport class Light {\n    constructor() {\n        this.area = new LightArea();\n        this.shadow = new LightShadow();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        this.area.load(data.area);\n        this.shadow.load(data.shadow);\n    }\n}\n", "export class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = value;\n    }\n    load(data) {\n        var _a;\n        if (data === undefined) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = (_a = data.quantity) !== null && _a !== void 0 ? _a : data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = quantity;\n        }\n    }\n}\n", "export class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = value;\n    }\n    load(data) {\n        var _a;\n        if (data === undefined) {\n            return;\n        }\n        const quantity = (_a = data.quantity) !== null && _a !== void 0 ? _a : data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = quantity;\n        }\n    }\n}\n", "export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n", "import { RepulseBase } from \"./RepulseBase\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        if (this.selectors instanceof Array) {\n            return this.selectors.map((t) => t.replace(\"#\", \"\"));\n        }\n        else {\n            return this.selectors.replace(\"#\", \"\");\n        }\n    }\n    set ids(value) {\n        if (value instanceof Array) {\n            this.selectors = value.map(() => `#${value}`);\n        }\n        else {\n            this.selectors = `#${value}`;\n        }\n    }\n    load(data) {\n        super.load(data);\n        if (data === undefined) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n", "import { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if ((data === null || data === void 0 ? void 0 : data.divs) === undefined) {\n            return;\n        }\n        if (data.divs instanceof Array) {\n            this.divs = data.divs.map((s) => {\n                const tmp = new RepulseDiv();\n                tmp.load(s);\n                return tmp;\n            });\n        }\n        else {\n            if (this.divs instanceof Array || !this.divs) {\n                this.divs = new RepulseDiv();\n            }\n            this.divs.load(data.divs);\n        }\n    }\n}\n", "export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    get active() {\n        return false;\n    }\n    set active(_value) {\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n", "import { deepExtend } from \"../../../../Utils\";\nexport class Trail {\n    constructor() {\n        this.delay = 1;\n        this.pauseOnStop = false;\n        this.quantity = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = data.quantity;\n        }\n        if (data.particles !== undefined) {\n            this.particles = deepExtend({}, data.particles);\n        }\n        if (data.pauseOnStop !== undefined) {\n            this.pauseOnStop = data.pauseOnStop;\n        }\n    }\n}\n", "import { Attract } from \"./Attract\";\nimport { Bounce } from \"./Bounce\";\nimport { Bubble } from \"./Bubble\";\nimport { Connect } from \"./Connect\";\nimport { Grab } from \"./Grab\";\nimport { Light } from \"./Light\";\nimport { Push } from \"./Push\";\nimport { Remove } from \"./Remove\";\nimport { Repulse } from \"./Repulse\";\nimport { Slow } from \"./Slow\";\nimport { Trail } from \"./Trail\";\nexport class Modes {\n    constructor() {\n        this.attract = new Attract();\n        this.bounce = new Bounce();\n        this.bubble = new Bubble();\n        this.connect = new Connect();\n        this.grab = new Grab();\n        this.light = new Light();\n        this.push = new Push();\n        this.remove = new Remove();\n        this.repulse = new Repulse();\n        this.slow = new Slow();\n        this.trail = new Trail();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        this.attract.load(data.attract);\n        this.bubble.load(data.bubble);\n        this.connect.load(data.connect);\n        this.grab.load(data.grab);\n        this.light.load(data.light);\n        this.push.load(data.push);\n        this.remove.load(data.remove);\n        this.repulse.load(data.repulse);\n        this.slow.load(data.slow);\n        this.trail.load(data.trail);\n    }\n}\n", "import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor() {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes();\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (data === undefined) {\n            return;\n        }\n        const detectsOn = (_a = data.detectsOn) !== null && _a !== void 0 ? _a : data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n        if (((_c = (_b = data.modes) === null || _b === void 0 ? void 0 : _b.slow) === null || _c === void 0 ? void 0 : _c.active) === true) {\n            if (this.events.onHover.mode instanceof Array) {\n                if (this.events.onHover.mode.indexOf(\"slow\") < 0) {\n                    this.events.onHover.mode.push(\"slow\");\n                }\n            }\n            else if (this.events.onHover.mode !== \"slow\") {\n                this.events.onHover.mode = [this.events.onHover.mode, \"slow\"];\n            }\n        }\n    }\n}\n", "import { deepExtend } from \"../../Utils\";\nexport class ManualParticle {\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.position !== undefined) {\n            this.position = {\n                x: (_a = data.position.x) !== null && _a !== void 0 ? _a : 50,\n                y: (_b = data.position.y) !== null && _b !== void 0 ? _b : 50,\n            };\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n", "export class MotionReduce {\n    constructor() {\n        this.factor = 4;\n        this.value = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { MotionReduce } from \"./MotionReduce\";\nexport class Motion {\n    constructor() {\n        this.disable = false;\n        this.reduce = new MotionReduce();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.disable !== undefined) {\n            this.disable = data.disable;\n        }\n        this.reduce.load(data.reduce);\n    }\n}\n", "import { setRangeValue } from \"../../Utils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.sync = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n", "import { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (typeof data === \"string\" || data instanceof Array) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n", "import { AnimatableColor } from \"./AnimatableColor\";\nimport { setRangeValue } from \"../../Utils\";\nexport class AnimatableGradient {\n    constructor() {\n        this.angle = new GradientAngle();\n        this.colors = [];\n        this.type = \"random\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(data.angle);\n        if (data.colors !== undefined) {\n            this.colors = data.colors.map((s) => {\n                const tmp = new AnimatableGradientColor();\n                tmp.load(s);\n                return tmp;\n            });\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\nexport class GradientAngle {\n    constructor() {\n        this.value = 0;\n        this.animation = new GradientAngleAnimation();\n        this.direction = \"clockwise\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.animation.load(data.animation);\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n    }\n}\nexport class GradientColorOpacity {\n    constructor() {\n        this.value = 0;\n        this.animation = new GradientColorOpacityAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.animation.load(data.animation);\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\nexport class AnimatableGradientColor {\n    constructor() {\n        this.stop = 0;\n        this.value = new AnimatableColor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.stop !== undefined) {\n            this.stop = data.stop;\n        }\n        this.value = AnimatableColor.create(this.value, data.value);\n        if (data.opacity !== undefined) {\n            this.opacity = new GradientColorOpacity();\n            if (typeof data.opacity === \"number\") {\n                this.opacity.value = data.opacity;\n            }\n            else {\n                this.opacity.load(data.opacity);\n            }\n        }\n    }\n}\nexport class GradientAngleAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class GradientColorOpacityAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 0;\n        this.sync = false;\n        this.startValue = \"random\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n", "export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n", "import { Random } from \"./Random\";\nimport { setRangeValue } from \"../../Utils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (typeof data.random === \"boolean\") {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\n", "import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class BounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n", "import { BounceFactor } from \"./BounceFactor\";\nexport class Bounce {\n    constructor() {\n        this.horizontal = new BounceFactor();\n        this.vertical = new BounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n", "export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n", "import { Bounce } from \"../Bounce/Bounce\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nexport class Collisions {\n    constructor() {\n        this.bounce = new Bounce();\n        this.enable = false;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n", "import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class SplitFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 3;\n    }\n}\n", "import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class SplitRate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = { min: 4, max: 9 };\n    }\n}\n", "import { SplitFactor } from \"./SplitFactor\";\nimport { SplitRate } from \"./SplitRate\";\nimport { deepExtend } from \"../../../../Utils\";\nexport class Split {\n    constructor() {\n        this.count = 1;\n        this.factor = new SplitFactor();\n        this.rate = new SplitRate();\n        this.sizeOffset = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.factor.load(data.factor);\n        this.rate.load(data.rate);\n        if (data.particles !== undefined) {\n            this.particles = deepExtend({}, data.particles);\n        }\n        if (data.sizeOffset !== undefined) {\n            this.sizeOffset = data.sizeOffset;\n        }\n    }\n}\n", "import { Split } from \"./Split\";\nexport class Destroy {\n    constructor() {\n        this.mode = \"none\";\n        this.split = new Split();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.split.load(data.split);\n    }\n}\n", "import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n", "import { OptionsColor } from \"../../OptionsColor\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.color.value = \"#00ff00\";\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n", "import { OptionsColor } from \"../../OptionsColor\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nimport { OptionsColor } from \"../../OptionsColor\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n", "export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = (_b = (_a = data.rotate) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = (_d = (_c = data.rotate) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n", "export class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = data.offset;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "export class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = data.acceleration;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n", "export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = (_a = data.bottom) !== null && _a !== void 0 ? _a : data.default;\n        this.left = (_b = data.left) !== null && _b !== void 0 ? _b : data.default;\n        this.right = (_c = data.right) !== null && _c !== void 0 ? _c : data.default;\n        this.top = (_d = data.top) !== null && _d !== void 0 ? _d : data.default;\n    }\n}\n", "import { ValueWithRandom } from \"../../../ValueWithRandom\";\nexport class PathDelay extends ValueWithRandom {\n    constructor() {\n        super();\n    }\n}\n", "import { PathDelay } from \"./PathDelay\";\nimport { deepExtend } from \"../../../../../Utils\";\nexport class Path {\n    constructor() {\n        this.clamp = true;\n        this.delay = new PathDelay();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n", "import { deepExtend, setRangeValue } from \"../../../../Utils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.position = data.position ? deepExtend({}, data.position) : undefined;\n    }\n}\n", "import { OptionsColor } from \"../../OptionsColor\";\nexport class Trail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fillColor = new OptionsColor();\n        this.fillColor.value = \"#000000\";\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.fillColor = OptionsColor.create(this.fillColor, data.fillColor);\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n", "import { deepExtend, setRangeValue } from \"../../../../Utils\";\nimport { Attract } from \"./Attract\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { OutModes } from \"./OutModes\";\nimport { Path } from \"./Path/Path\";\nimport { Spin } from \"./Spin\";\nimport { Trail } from \"./Trail\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new Attract();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new Path();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new Trail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(value) {\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (data === undefined) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            if (typeof data.angle === \"number\") {\n                this.angle.value = data.angle;\n            }\n            else {\n                this.angle.load(data.angle);\n            }\n        }\n        this.attract.load(data.attract);\n        if (data.decay !== undefined) {\n            this.decay = data.decay;\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance =\n                typeof data.distance === \"number\"\n                    ? {\n                        horizontal: data.distance,\n                        vertical: data.distance,\n                    }\n                    : deepExtend({}, data.distance);\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outMode = (_a = data.outMode) !== null && _a !== void 0 ? _a : data.out_mode;\n        if (data.outModes !== undefined || outMode !== undefined) {\n            if (typeof data.outModes === \"string\" || (data.outModes === undefined && outMode !== undefined)) {\n                this.outModes.load({\n                    default: (_b = data.outModes) !== null && _b !== void 0 ? _b : outMode,\n                });\n            }\n            else {\n                this.outModes.load(data.outModes);\n            }\n        }\n        this.path.load((_c = data.path) !== null && _c !== void 0 ? _c : data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n", "export class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { AnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.enable = false;\n        this.speed = 2;\n        this.startValue = \"random\";\n        this.sync = false;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        if (data === undefined) {\n            return;\n        }\n        super.load(data);\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.opacity_min;\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n", "import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class OrbitRotation extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 45;\n        this.random.enable = false;\n        this.random.minimumValue = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        super.load(data);\n    }\n}\n", "import { AnimationOptions } from \"../../AnimationOptions\";\nimport { OptionsColor } from \"../../OptionsColor\";\nimport { OrbitRotation } from \"./OrbitRotation\";\nexport class Orbit {\n    constructor() {\n        this.animation = new AnimationOptions();\n        this.enable = false;\n        this.opacity = 1;\n        this.rotation = new OrbitRotation();\n        this.width = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        this.animation.load(data.animation);\n        this.rotation.load(data.rotation);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n    }\n}\n", "export class Density {\n    constructor() {\n        this.enable = false;\n        this.area = 800;\n        this.factor = 1000;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        var _a;\n        if (data === undefined) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const area = (_a = data.area) !== null && _a !== void 0 ? _a : data.value_area;\n        if (area !== undefined) {\n            this.area = area;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n    }\n}\n", "import { Density } from \"./Density\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new Density();\n        this.limit = 0;\n        this.value = 100;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        var _a;\n        if (data === undefined) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = (_a = data.limit) !== null && _a !== void 0 ? _a : data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class Repulse extends ValueWithRandom {\n    constructor() {\n        super();\n        this.enabled = false;\n        this.distance = 1;\n        this.duration = 1;\n        this.factor = 1;\n        this.speed = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.enabled !== undefined) {\n            this.enabled = data.enabled;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n", "export class RollLight {\n    constructor() {\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { OptionsColor } from \"../../OptionsColor\";\nimport { RollLight } from \"./RollLight\";\nimport { setRangeValue } from \"../../../../Utils\";\nexport class Roll {\n    constructor() {\n        this.darken = new RollLight();\n        this.enable = false;\n        this.enlighten = new RollLight();\n        this.mode = \"vertical\";\n        this.speed = 25;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.backColor !== undefined) {\n            this.backColor = OptionsColor.create(this.backColor, data.backColor);\n        }\n        this.darken.load(data.darken);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.enlighten.load(data.enlighten);\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n    }\n}\n", "export class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { RotateAnimation } from \"./RotateAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n", "import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000000\";\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n", "import { deepExtend } from \"../../../../Utils\";\nexport class Shape {\n    constructor() {\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get image() {\n        var _a;\n        return ((_a = this.options[\"image\"]) !== null && _a !== void 0 ? _a : this.options[\"images\"]);\n    }\n    set image(value) {\n        this.options[\"image\"] = value;\n        this.options[\"images\"] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    get character() {\n        var _a;\n        return ((_a = this.options[\"character\"]) !== null && _a !== void 0 ? _a : this.options[\"char\"]);\n    }\n    set character(value) {\n        this.options[\"character\"] = value;\n        this.options[\"char\"] = value;\n    }\n    get polygon() {\n        var _a;\n        return ((_a = this.options[\"polygon\"]) !== null && _a !== void 0 ? _a : this.options[\"star\"]);\n    }\n    set polygon(value) {\n        this.options[\"polygon\"] = value;\n        this.options[\"star\"] = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (data === undefined) {\n            return;\n        }\n        const options = (_a = data.options) !== null && _a !== void 0 ? _a : data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item !== undefined) {\n                    this.options[shape] = deepExtend((_b = this.options[shape]) !== null && _b !== void 0 ? _b : {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, \"character\", \"char\", true);\n        this.loadShape(data.polygon, \"polygon\", \"star\", false);\n        this.loadShape((_c = data.image) !== null && _c !== void 0 ? _c : data.images, \"image\", \"images\", true);\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n    loadShape(item, mainKey, altKey, altOverride) {\n        var _a, _b, _c, _d;\n        if (item === undefined) {\n            return;\n        }\n        if (item instanceof Array) {\n            if (!(this.options[mainKey] instanceof Array)) {\n                this.options[mainKey] = [];\n                if (!this.options[altKey] || altOverride) {\n                    this.options[altKey] = [];\n                }\n            }\n            this.options[mainKey] = deepExtend((_a = this.options[mainKey]) !== null && _a !== void 0 ? _a : [], item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = deepExtend((_b = this.options[altKey]) !== null && _b !== void 0 ? _b : [], item);\n            }\n        }\n        else {\n            if (this.options[mainKey] instanceof Array) {\n                this.options[mainKey] = {};\n                if (!this.options[altKey] || altOverride) {\n                    this.options[altKey] = {};\n                }\n            }\n            this.options[mainKey] = deepExtend((_c = this.options[mainKey]) !== null && _c !== void 0 ? _c : {}, item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = deepExtend((_d = this.options[altKey]) !== null && _d !== void 0 ? _d : {}, item);\n            }\n        }\n    }\n}\n", "import { AnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.enable = false;\n        this.speed = 5;\n        this.startValue = \"random\";\n        this.sync = false;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        if (data === undefined) {\n            return;\n        }\n        super.load(data);\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.size_min;\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n", "import { AnimatableColor } from \"../AnimatableColor\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "export class TiltAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { TiltAnimation } from \"./TiltAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class Tilt extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new TiltAnimation();\n        this.direction = \"clockwise\";\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        this.animation.load(data.animation);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n", "import { OptionsColor } from \"../../OptionsColor\";\nexport class TwinkleValues {\n    constructor() {\n        this.enable = false;\n        this.frequency = 0.05;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { TwinkleValues } from \"./TwinkleValues\";\nexport class Twinkle {\n    constructor() {\n        this.lines = new TwinkleValues();\n        this.particles = new TwinkleValues();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        this.lines.load(data.lines);\n        this.particles.load(data.particles);\n    }\n}\n", "import { setRangeValue } from \"../../../../Utils\";\nexport class Wobble {\n    constructor() {\n        this.distance = 5;\n        this.enable = false;\n        this.speed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n    }\n}\n", "import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n", "import { AnimatableColor } from \"../AnimatableColor\";\nimport { AnimatableGradient } from \"../AnimatableGradient\";\nimport { Bounce } from \"./Bounce/Bounce\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Destroy } from \"./Destroy/Destroy\";\nimport { Life } from \"./Life/Life\";\nimport { Links } from \"./Links/Links\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { Orbit } from \"./Orbit/Orbit\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Repulse } from \"./Repulse/Repulse\";\nimport { Roll } from \"./Roll/Roll\";\nimport { Rotate } from \"./Rotate/Rotate\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { Tilt } from \"./Tilt/Tilt\";\nimport { Twinkle } from \"./Twinkle/Twinkle\";\nimport { Wobble } from \"./Wobble/Wobble\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nimport { deepExtend } from \"../../../Utils\";\nexport class ParticlesOptions {\n    constructor() {\n        this.bounce = new Bounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.destroy = new Destroy();\n        this.gradient = [];\n        this.groups = {};\n        this.life = new Life();\n        this.links = new Links();\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.orbit = new Orbit();\n        this.reduceDuplicates = false;\n        this.repulse = new Repulse();\n        this.roll = new Roll();\n        this.rotate = new Rotate();\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.tilt = new Tilt();\n        this.twinkle = new Twinkle();\n        this.wobble = new Wobble();\n        this.zIndex = new ZIndex();\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        if (data === undefined) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        this.destroy.load(data.destroy);\n        this.life.load(data.life);\n        const links = (_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked;\n        if (links !== undefined) {\n            this.links.load(links);\n        }\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend((_c = this.groups[group]) !== null && _c !== void 0 ? _c : {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        this.orbit.load(data.orbit);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.repulse.load(data.repulse);\n        this.roll.load(data.roll);\n        this.rotate.load(data.rotate);\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.tilt.load(data.tilt);\n        this.twinkle.load(data.twinkle);\n        this.wobble.load(data.wobble);\n        this.zIndex.load(data.zIndex);\n        const collisions = (_e = (_d = data.move) === null || _d === void 0 ? void 0 : _d.collisions) !== null && _e !== void 0 ? _e : (_f = data.move) === null || _f === void 0 ? void 0 : _f.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        const strokeToLoad = (_g = data.stroke) !== null && _g !== void 0 ? _g : (_h = data.shape) === null || _h === void 0 ? void 0 : _h.stroke;\n        if (strokeToLoad) {\n            if (strokeToLoad instanceof Array) {\n                this.stroke = strokeToLoad.map((s) => {\n                    const tmp = new Stroke();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.stroke instanceof Array) {\n                    this.stroke = new Stroke();\n                }\n                this.stroke.load(strokeToLoad);\n            }\n        }\n        const gradientToLoad = data.gradient;\n        if (gradientToLoad) {\n            if (gradientToLoad instanceof Array) {\n                this.gradient = gradientToLoad.map((s) => {\n                    const tmp = new AnimatableGradient();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.gradient instanceof Array) {\n                    this.gradient = new AnimatableGradient();\n                }\n                this.gradient.load(gradientToLoad);\n            }\n        }\n    }\n}\n", "import { deepExtend } from \"../../Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n", "export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Options_instances, _Options_engine, _Options_findDefaultTheme;\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Motion } from \"./Motion/Motion\";\nimport { ParticlesOptions } from \"./Particles/ParticlesOptions\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { deepExtend } from \"../../Utils\";\nexport class Options {\n    constructor(engine) {\n        _Options_instances.add(this);\n        _Options_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Options_engine, engine, \"f\");\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity();\n        this.manualParticles = [];\n        this.motion = new Motion();\n        this.particles = new ParticlesOptions();\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    load(data) {\n        var _a, _b, _c, _d, _e;\n        if (data === undefined) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            if (data.preset instanceof Array) {\n                for (const preset of data.preset) {\n                    this.importPreset(preset);\n                }\n            }\n            else {\n                this.importPreset(data.preset);\n            }\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        const detectRetina = (_a = data.detectRetina) !== null && _a !== void 0 ? _a : data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        const fpsLimit = (_b = data.fpsLimit) !== null && _b !== void 0 ? _b : data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = (_c = data.fullScreen) !== null && _c !== void 0 ? _c : data.backgroundMode;\n        if (typeof fullScreen === \"boolean\") {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles !== undefined) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.motion.load(data.motion);\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        __classPrivateFieldGet(this, _Options_engine, \"f\").plugins.loadOptions(this, data);\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const optTheme = new Theme();\n                optTheme.load(theme);\n                this.themes.push(optTheme);\n            }\n        }\n        this.defaultDarkTheme = (_d = __classPrivateFieldGet(this, _Options_instances, \"m\", _Options_findDefaultTheme).call(this, \"dark\")) === null || _d === void 0 ? void 0 : _d.name;\n        this.defaultLightTheme = (_e = __classPrivateFieldGet(this, _Options_instances, \"m\", _Options_findDefaultTheme).call(this, \"light\")) === null || _e === void 0 ? void 0 : _e.name;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = typeof matchMedia !== \"undefined\" && matchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = __classPrivateFieldGet(this, _Options_instances, \"m\", _Options_findDefaultTheme).call(this, clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen\n            ? t.maxWidth * pxRatio > screen.availWidth\n            : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions === null || responsiveOptions === void 0 ? void 0 : responsiveOptions.options);\n        return responsiveOptions === null || responsiveOptions === void 0 ? void 0 : responsiveOptions.maxWidth;\n    }\n    importPreset(preset) {\n        this.load(__classPrivateFieldGet(this, _Options_engine, \"f\").plugins.getPreset(preset));\n    }\n}\n_Options_engine = new WeakMap(), _Options_instances = new WeakSet(), _Options_findDefaultTheme = function _Options_findDefaultTheme(mode) {\n    var _a;\n    return ((_a = this.themes.find((theme) => theme.default.value && theme.default.mode === mode)) !== null && _a !== void 0 ? _a : this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n};\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particle_engine;\nimport { Vector, Vector3d } from \"./Utils\";\nimport { alterHsl, clamp, colorToRgb, deepExtend, getDistance, getHslFromAnimation, getParticleBaseVelocity, getParticleDirectionAngle, getRangeMax, getRangeMin, getRangeValue, getValue, isInArray, itemFromArray, randomInRange, setRangeValue, } from \"../Utils\";\nimport { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nimport { Shape } from \"../Options/Classes/Particles/Shape/Shape\";\nconst fixOutMode = (data) => {\n    if (isInArray(data.outMode, data.checkModes) || isInArray(data.outMode, data.checkModes)) {\n        if (data.coord > data.maxCoord - data.radius * 2) {\n            data.setCb(-data.radius);\n        }\n        else if (data.coord < data.radius * 2) {\n            data.setCb(data.radius);\n        }\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        this.id = id;\n        this.container = container;\n        this.group = group;\n        _Particle_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Particle_engine, engine, \"f\");\n        this.fill = true;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.splitCount = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio;\n        const mainOptions = container.actualOptions;\n        const particlesOptions = new ParticlesOptions();\n        particlesOptions.load(mainOptions.particles);\n        const shapeType = particlesOptions.shape.type;\n        const reduceDuplicates = particlesOptions.reduceDuplicates;\n        this.shape = shapeType instanceof Array ? itemFromArray(shapeType, this.id, reduceDuplicates) : shapeType;\n        if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n            if (overrideOptions.shape.type) {\n                const overrideShapeType = overrideOptions.shape.type;\n                this.shape =\n                    overrideShapeType instanceof Array\n                        ? itemFromArray(overrideShapeType, this.id, reduceDuplicates)\n                        : overrideShapeType;\n            }\n            const shapeOptions = new Shape();\n            shapeOptions.load(overrideOptions.shape);\n            if (this.shape) {\n                this.shapeData = this.loadShapeData(shapeOptions, reduceDuplicates);\n            }\n        }\n        else {\n            this.shapeData = this.loadShapeData(particlesOptions.shape, reduceDuplicates);\n        }\n        if (overrideOptions !== undefined) {\n            particlesOptions.load(overrideOptions);\n        }\n        if (((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles) !== undefined) {\n            particlesOptions.load((_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.particles);\n        }\n        this.fill = (_d = (_c = this.shapeData) === null || _c === void 0 ? void 0 : _c.fill) !== null && _d !== void 0 ? _d : this.fill;\n        this.close = (_f = (_e = this.shapeData) === null || _e === void 0 ? void 0 : _e.close) !== null && _f !== void 0 ? _f : this.close;\n        this.options = particlesOptions;\n        this.pathDelay = getValue(this.options.move.path.delay) * 1000;\n        const zIndexValue = getRangeValue(this.options.zIndex.value);\n        container.retina.initParticle(this);\n        const sizeOptions = this.options.size, sizeRange = sizeOptions.value;\n        this.size = {\n            enable: sizeOptions.animation.enable,\n            value: getValue(sizeOptions) * container.retina.pixelRatio,\n            max: getRangeMax(sizeRange) * pxRatio,\n            min: getRangeMin(sizeRange) * pxRatio,\n            loops: 0,\n            maxLoops: sizeOptions.animation.count,\n        };\n        const sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            this.size.status = 0;\n            switch (sizeAnimation.startValue) {\n                case \"min\":\n                    this.size.value = this.size.min;\n                    this.size.status = 0;\n                    break;\n                case \"random\":\n                    this.size.value = randomInRange(this.size) * pxRatio;\n                    this.size.status = Math.random() >= 0.5 ? 0 : 1;\n                    break;\n                case \"max\":\n                default:\n                    this.size.value = this.size.max;\n                    this.size.status = 1;\n                    break;\n            }\n            this.size.velocity =\n                (((_g = this.retina.sizeAnimationSpeed) !== null && _g !== void 0 ? _g : container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                this.size.velocity *= Math.random();\n            }\n        }\n        this.direction = getParticleDirectionAngle(this.options.move.direction);\n        this.bubble = {\n            inRange: false,\n        };\n        this.initialVelocity = this.calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        this.position = this.calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n        this.initialPosition = this.position.copy();\n        this.offset = Vector.origin;\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = __classPrivateFieldGet(this, _Particle_engine, \"f\").plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n            drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.life = this.loadLife();\n        this.spawning = this.life.delay > 0;\n        if (this.options.move.spin.enable) {\n            const spinPos = (_h = this.options.move.spin.position) !== null && _h !== void 0 ? _h : { x: 50, y: 50 };\n            const spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            };\n            const pos = this.getPosition();\n            const distance = getDistance(pos, spinCenter);\n            this.spin = {\n                center: spinCenter,\n                direction: this.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: this.velocity.angle,\n                radius: distance,\n                acceleration: (_j = this.retina.spinAcceleration) !== null && _j !== void 0 ? _j : getRangeValue(this.options.move.spin.acceleration),\n            };\n        }\n        this.shadowColor = colorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            if (updater.init) {\n                updater.init(this);\n            }\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleCreated) {\n                plugin.particleCreated(this);\n            }\n        }\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius();\n        const canvasSize = this.container.canvas.size;\n        return (this.position.x >= -radius &&\n            this.position.y >= -radius &&\n            this.position.y <= canvasSize.height + radius &&\n            this.position.x <= canvasSize.width + radius);\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        var _a;\n        return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getFillColor() {\n        var _a, _b;\n        const color = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.color);\n        if (color && this.roll && (this.backColor || this.roll.alter)) {\n            const backFactor = this.options.roll.mode === \"both\" ? 2 : 1, backSum = this.options.roll.mode === \"horizontal\" ? Math.PI / 2 : 0, rolled = Math.floor((((_b = this.roll.angle) !== null && _b !== void 0 ? _b : 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (rolled) {\n                if (this.backColor) {\n                    return this.backColor;\n                }\n                if (this.roll.alter) {\n                    return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n                }\n            }\n        }\n        return color;\n    }\n    getStrokeColor() {\n        var _a, _b;\n        return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.strokeColor)) !== null && _b !== void 0 ? _b : this.getFillColor();\n    }\n    destroy(override) {\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        if (this.unbreakable) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        if (override) {\n            return;\n        }\n        const destroyOptions = this.options.destroy;\n        if (destroyOptions.mode === \"split\") {\n            this.split();\n        }\n    }\n    reset() {\n        if (this.opacity) {\n            this.opacity.loops = 0;\n        }\n        this.size.loops = 0;\n    }\n    split() {\n        const splitOptions = this.options.destroy.split;\n        if (splitOptions.count >= 0 && this.splitCount++ > splitOptions.count) {\n            return;\n        }\n        const rate = getRangeValue(splitOptions.rate.value);\n        for (let i = 0; i < rate; i++) {\n            this.container.particles.addSplitParticle(this);\n        }\n    }\n    calcPosition(container, position, zIndex, tryCount = 0) {\n        var _a, _b, _c, _d, _e, _f;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n            }\n        }\n        const canvasSize = container.canvas.size;\n        const pos = Vector3d.create((_a = position === null || position === void 0 ? void 0 : position.x) !== null && _a !== void 0 ? _a : Math.random() * canvasSize.width, (_b = position === null || position === void 0 ? void 0 : position.y) !== null && _b !== void 0 ? _b : Math.random() * canvasSize.height, zIndex);\n        const radius = this.getRadius();\n        const outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-horizontal\"],\n                coord: pos.x,\n                maxCoord: container.canvas.size.width,\n                setCb: (value) => (pos.x += value),\n                radius,\n            });\n        }, fixVertical = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-vertical\"],\n                coord: pos.y,\n                maxCoord: container.canvas.size.height,\n                setCb: (value) => (pos.y += value),\n                radius,\n            });\n        };\n        fixHorizontal((_c = outModes.left) !== null && _c !== void 0 ? _c : outModes.default);\n        fixHorizontal((_d = outModes.right) !== null && _d !== void 0 ? _d : outModes.default);\n        fixVertical((_e = outModes.top) !== null && _e !== void 0 ? _e : outModes.default);\n        fixVertical((_f = outModes.bottom) !== null && _f !== void 0 ? _f : outModes.default);\n        if (this.checkOverlap(pos, tryCount)) {\n            return this.calcPosition(container, undefined, zIndex, tryCount + 1);\n        }\n        return pos;\n    }\n    checkOverlap(pos, tryCount = 0) {\n        const collisionsOptions = this.options.collisions;\n        const radius = this.getRadius();\n        if (!collisionsOptions.enable) {\n            return false;\n        }\n        const overlapOptions = collisionsOptions.overlap;\n        if (overlapOptions.enable) {\n            return false;\n        }\n        const retries = overlapOptions.retries;\n        if (retries >= 0 && tryCount > retries) {\n            throw new Error(\"Particle is overlapping and can't be placed\");\n        }\n        let overlaps = false;\n        for (const particle of this.container.particles.array) {\n            if (getDistance(pos, particle.position) < radius + particle.getRadius()) {\n                overlaps = true;\n                break;\n            }\n        }\n        return overlaps;\n    }\n    calculateVelocity() {\n        const baseVelocity = getParticleBaseVelocity(this.direction);\n        const res = baseVelocity.copy();\n        const moveOptions = this.options.move;\n        const rad = (Math.PI / 180) * moveOptions.angle.value;\n        const radOffset = (Math.PI / 180) * moveOptions.angle.offset;\n        const range = {\n            left: radOffset - rad / 2,\n            right: radOffset + rad / 2,\n        };\n        if (!moveOptions.straight) {\n            res.angle += randomInRange(setRangeValue(range.left, range.right));\n        }\n        if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n            res.length *= Math.random();\n        }\n        return res;\n    }\n    loadShapeData(shapeOptions, reduceDuplicates) {\n        const shapeData = shapeOptions.options[this.shape];\n        if (shapeData) {\n            return deepExtend({}, shapeData instanceof Array ? itemFromArray(shapeData, this.id, reduceDuplicates) : shapeData);\n        }\n    }\n    loadLife() {\n        const container = this.container;\n        const particlesOptions = this.options;\n        const lifeOptions = particlesOptions.life;\n        const life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : Math.random())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : Math.random())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: particlesOptions.life.count,\n        };\n        if (life.duration <= 0) {\n            life.duration = -1;\n        }\n        if (life.count <= 0) {\n            life.count = -1;\n        }\n        return life;\n    }\n}\n_Particle_engine = new WeakMap();\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particles_engine;\nimport { InteractionManager, ParticlesMover, Point, QuadTree, Rectangle } from \"./Utils\";\nimport { getRangeMax, getRangeMin, getRangeValue, randomInRange, setRangeValue } from \"../Utils\";\nimport { Particle } from \"./Particle\";\nimport { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport class Particles {\n    constructor(engine, container) {\n        this.container = container;\n        _Particles_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Particles_engine, engine, \"f\");\n        this.nextId = 0;\n        this.array = [];\n        this.zArray = [];\n        this.mover = new ParticlesMover(container);\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this.freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n        this.interactionManager = new InteractionManager(__classPrivateFieldGet(this, _Particles_engine, \"f\"), container);\n        const canvasSize = this.container.canvas.size;\n        this.linksColors = new Map();\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this.array.length;\n    }\n    init() {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        this.freqs.links = new Map();\n        this.freqs.triangles = new Map();\n        let handled = false;\n        this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n        this.interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n        container.pathGenerator.init(container);\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (!(index >= 0 && index <= this.count)) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            const particle = this.array[i];\n            if (!particle || particle.group !== group) {\n                continue;\n            }\n            particle.destroy(override);\n            this.array.splice(i--, 1);\n            const zIdx = this.zArray.indexOf(particle);\n            this.zArray.splice(zIdx, 1);\n            deleted++;\n        }\n    }\n    remove(particle, group, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n    async update(delta) {\n        const container = this.container;\n        const particlesToDelete = [];\n        container.pathGenerator.update();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.update !== undefined) {\n                plugin.update(delta);\n            }\n        }\n        for (const particle of this.array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            particle.bubble.inRange = false;\n            for (const [, plugin] of this.container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            this.mover.move(particle, delta);\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        await this.interactionManager.externalInteract(delta);\n        for (const particle of container.particles.array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    async draw(delta) {\n        const container = this.container;\n        container.canvas.clear();\n        const canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        await this.update(delta);\n        if (this.needsSort) {\n            this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.zArray) {\n            p.draw(delta);\n        }\n    }\n    clear() {\n        this.array = [];\n        this.zArray = [];\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    addParticle(position, overrideOptions, group) {\n        const container = this.container, options = container.actualOptions, limit = options.particles.number.limit * container.density;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this.pushParticle(position, overrideOptions, group);\n    }\n    addSplitParticle(parent) {\n        const splitOptions = parent.options.destroy.split, options = new ParticlesOptions();\n        options.load(parent.options);\n        const factor = getRangeValue(splitOptions.factor.value);\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n        if (typeof options.size.value === \"number\") {\n            options.size.value /= factor;\n        }\n        else {\n            options.size.value.min /= factor;\n            options.size.value.max /= factor;\n        }\n        options.load(splitOptions.particles);\n        const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0;\n        const position = {\n            x: parent.position.x + randomInRange(offset),\n            y: parent.position.y + randomInRange(offset),\n        };\n        return this.pushParticle(position, options, parent.group, (particle) => {\n            if (particle.size.value < 0.5) {\n                return false;\n            }\n            particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n            particle.splitCount = parent.splitCount + 1;\n            particle.unbreakable = true;\n            setTimeout(() => {\n                particle.unbreakable = false;\n            }, 500);\n            return true;\n        });\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    getLinkFrequency(p1, p2) {\n        const range = setRangeValue(p1.id, p2.id), key = `${getRangeMin(range)}_${getRangeMax(range)}`;\n        let res = this.freqs.links.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.freqs.links.set(key, res);\n        }\n        return res;\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        let [id1, id2, id3] = [p1.id, p2.id, p3.id];\n        if (id1 > id2) {\n            [id2, id1] = [id1, id2];\n        }\n        if (id2 > id3) {\n            [id3, id2] = [id2, id3];\n        }\n        if (id1 > id3) {\n            [id3, id1] = [id1, id3];\n        }\n        const key = `${id1}_${id2}_${id3}`;\n        let res = this.freqs.triangles.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.freqs.triangles.set(key, res);\n        }\n        return res;\n    }\n    addManualParticles() {\n        const container = this.container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            const pos = particle.position\n                ? {\n                    x: (particle.position.x * container.canvas.size.width) / 100,\n                    y: (particle.position.y * container.canvas.size.height) / 100,\n                }\n                : undefined;\n            this.addParticle(pos, particle.options);\n        }\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        for (const group in options.particles.groups) {\n            this.applyDensity(options.particles.groups[group], 0, group);\n        }\n        this.applyDensity(options.particles, options.manualParticles.length);\n    }\n    applyDensity(options, manualCount, group) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number;\n        const densityFactor = this.initDensityFactor(numberOptions.density);\n        const optParticlesNumber = numberOptions.value;\n        const optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber;\n        const particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount;\n        const particlesCount = Math.min(this.count, this.array.filter((t) => t.group === group).length);\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber, group);\n        }\n    }\n    initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    }\n    pushParticle(position, overrideOptions, group, initializer) {\n        try {\n            const particle = new Particle(__classPrivateFieldGet(this, _Particles_engine, \"f\"), this.nextId, this.container, position, overrideOptions, group);\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.zArray.push(particle);\n            this.nextId++;\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\n_Particles_engine = new WeakMap();\n", "import { getRangeValue, isSsr } from \"../Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container;\n        const options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        const motionOptions = this.container.actualOptions.motion;\n        if (motionOptions && (motionOptions.disable || motionOptions.reduce.value)) {\n            if (isSsr() || typeof matchMedia === \"undefined\" || !matchMedia) {\n                this.reduceFactor = 1;\n            }\n            else {\n                const mediaQuery = matchMedia(\"(prefers-reduced-motion: reduce)\");\n                if (mediaQuery) {\n                    this.handleMotionChange(mediaQuery);\n                    const handleChange = () => {\n                        this.handleMotionChange(mediaQuery);\n                        container.refresh().catch(() => {\n                        });\n                    };\n                    if (mediaQuery.addEventListener !== undefined) {\n                        mediaQuery.addEventListener(\"change\", handleChange);\n                    }\n                    else if (mediaQuery.addListener !== undefined) {\n                        mediaQuery.addListener(handleChange);\n                    }\n                }\n            }\n        }\n        else {\n            this.reduceFactor = 1;\n        }\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.attractDistance = particles.move.attract.distance * ratio;\n        this.linksDistance = particles.links.distance * ratio;\n        this.linksWidth = particles.links.width * ratio;\n        this.sizeAnimationSpeed = particles.size.animation.speed * ratio;\n        this.maxSpeed = particles.move.gravity.maxSpeed * ratio;\n        if (particles.orbit.radius !== undefined) {\n            this.orbitRadius = particles.orbit.radius * this.container.retina.pixelRatio;\n        }\n        const modes = options.interactivity.modes;\n        this.connectModeDistance = modes.connect.distance * ratio;\n        this.connectModeRadius = modes.connect.radius * ratio;\n        this.grabModeDistance = modes.grab.distance * ratio;\n        this.repulseModeDistance = modes.repulse.distance * ratio;\n        this.bounceModeDistance = modes.bounce.distance * ratio;\n        this.attractModeDistance = modes.attract.distance * ratio;\n        this.slowModeRadius = modes.slow.radius * ratio;\n        this.bubbleModeDistance = modes.bubble.distance * ratio;\n        if (modes.bubble.size) {\n            this.bubbleModeSize = modes.bubble.size * ratio;\n        }\n    }\n    initParticle(particle) {\n        const options = particle.options;\n        const ratio = this.pixelRatio;\n        const moveDistance = options.move.distance;\n        const props = particle.retina;\n        props.attractDistance = options.move.attract.distance * ratio;\n        props.linksDistance = options.links.distance * ratio;\n        props.linksWidth = options.links.width * ratio;\n        props.moveDrift = getRangeValue(options.move.drift) * ratio;\n        props.moveSpeed = getRangeValue(options.move.speed) * ratio;\n        props.sizeAnimationSpeed = options.size.animation.speed * ratio;\n        if (particle.spin) {\n            props.spinAcceleration = getRangeValue(options.move.spin.acceleration) * ratio;\n        }\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = options.move.gravity.maxSpeed * ratio;\n    }\n    handleMotionChange(mediaQuery) {\n        const options = this.container.actualOptions;\n        if (mediaQuery.matches) {\n            const motion = options.motion;\n            this.reduceFactor = motion.disable ? 0 : motion.reduce.value ? 1 / motion.reduce.factor : 1;\n        }\n        else {\n            this.reduceFactor = 1;\n        }\n    }\n}\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Container_engine;\nimport { EventListeners, FrameManager, Vector } from \"./Utils\";\nimport { animate, cancelAnimation, getRangeValue } from \"../Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nexport class Container {\n    constructor(engine, id, sourceOptions, ...presets) {\n        this.id = id;\n        _Container_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Container_engine, engine, \"f\");\n        this.fpsLimit = 120;\n        this.duration = 0;\n        this.lifeTime = 0;\n        this.firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this.paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(__classPrivateFieldGet(this, _Container_engine, \"f\"), this);\n        this.drawer = new FrameManager(this);\n        this.presets = presets;\n        this.pathGenerator = {\n            generate: () => {\n                const v = Vector.create(0, 0);\n                v.length = Math.random();\n                v.angle = Math.random() * Math.PI * 2;\n                return v;\n            },\n            init: () => {\n            },\n            update: () => {\n            },\n        };\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.bubble = {};\n        this.repulse = { particles: [] };\n        this.attract = { particles: [] };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this.density = 1;\n        this._options = new Options(__classPrivateFieldGet(this, _Container_engine, \"f\"));\n        this.actualOptions = new Options(__classPrivateFieldGet(this, _Container_engine, \"f\"));\n        this.eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this.intersectionObserver = new IntersectionObserver((entries) => this.intersectionManager(entries));\n        }\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    play(force) {\n        const needsUpdate = this.paused || force;\n        if (this.firstStart && !this.actualOptions.autoPlay) {\n            this.firstStart = false;\n            return;\n        }\n        if (this.paused) {\n            this.paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this.draw(needsUpdate || false);\n    }\n    pause() {\n        if (this.drawAnimationFrame !== undefined) {\n            cancelAnimation()(this.drawAnimationFrame);\n            delete this.drawAnimationFrame;\n        }\n        if (this.paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.pause) {\n                plugin.pause();\n            }\n        }\n        if (!this.pageHidden) {\n            this.paused = true;\n        }\n    }\n    draw(force) {\n        let refreshTime = force;\n        this.drawAnimationFrame = animate()(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this.drawer.nextFrame(timestamp);\n        });\n    }\n    getAnimationStatus() {\n        return !this.paused && !this.pageHidden;\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        var _a, _b, _c;\n        if (!pathOrGenerator) {\n            return;\n        }\n        if (typeof pathOrGenerator === \"function\") {\n            this.pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                this.pathGenerator.init = init;\n            }\n            if (update) {\n                this.pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = this.pathGenerator;\n            this.pathGenerator = pathOrGenerator;\n            (_a = this.pathGenerator).generate || (_a.generate = oldGenerator.generate);\n            (_b = this.pathGenerator).init || (_b.init = oldGenerator.init);\n            (_c = this.pathGenerator).update || (_c.update = oldGenerator.update);\n        }\n    }\n    destroy() {\n        this.stop();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            if (drawer.destroy) {\n                drawer.destroy(this);\n            }\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this.destroyed = true;\n    }\n    exportImg(callback) {\n        this.exportImage(callback);\n    }\n    exportImage(callback, type, quality) {\n        var _a;\n        return (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n    }\n    exportConfiguration() {\n        return JSON.stringify(this.actualOptions, undefined, 2);\n    }\n    refresh() {\n        this.stop();\n        return this.start();\n    }\n    reset() {\n        this._options = new Options(__classPrivateFieldGet(this, _Container_engine, \"f\"));\n        return this.refresh();\n    }\n    stop() {\n        if (!this.started) {\n            return;\n        }\n        this.firstStart = true;\n        this.started = false;\n        this.eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.clear();\n        if (this.interactivity.element instanceof HTMLElement && this.intersectionObserver) {\n            this.intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.stop) {\n                plugin.stop();\n            }\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this.particles.linksColors = new Map();\n        delete this.particles.grabLineColor;\n        delete this.particles.linksColor;\n        this._sourceOptions = this._options;\n    }\n    async loadTheme(name) {\n        this.currentTheme = name;\n        await this.refresh();\n    }\n    async start() {\n        if (this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        this.eventListeners.addListeners();\n        if (this.interactivity.element instanceof HTMLElement && this.intersectionObserver) {\n            this.intersectionObserver.observe(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.startAsync !== undefined) {\n                await plugin.startAsync();\n            }\n            else if (plugin.start !== undefined) {\n                plugin.start();\n            }\n        }\n        this.play();\n    }\n    addClickHandler(callback) {\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (this.destroyed) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (this.destroyed) {\n                return;\n            }\n            const mouseEvent = e;\n            const pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (this.destroyed) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (this.destroyed) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            var _a, _b, _c;\n            if (this.destroyed) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const canvasRect = (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();\n                const pos = {\n                    x: lastTouch.clientX - ((_b = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _b !== void 0 ? _b : 0),\n                    y: lastTouch.clientY - ((_c = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _c !== void 0 ? _c : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (this.destroyed) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false;\n        let touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this.currentTheme);\n        if (this.responsiveMaxWidth != newMaxWidth) {\n            this.responsiveMaxWidth = newMaxWidth;\n            return true;\n        }\n        return false;\n    }\n    async init() {\n        this._options = new Options(__classPrivateFieldGet(this, _Container_engine, \"f\"));\n        for (const preset of this.presets) {\n            this._options.load(__classPrivateFieldGet(this, _Container_engine, \"f\").plugins.getPreset(preset));\n        }\n        const shapes = __classPrivateFieldGet(this, _Container_engine, \"f\").plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = __classPrivateFieldGet(this, _Container_engine, \"f\").plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options.load(this._initialSourceOptions);\n        this._options.load(this._sourceOptions);\n        this.actualOptions = new Options(__classPrivateFieldGet(this, _Container_engine, \"f\"));\n        this.actualOptions.load(this._options);\n        this.retina.init();\n        this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this.duration = getRangeValue(this.actualOptions.duration);\n        this.lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        const availablePlugins = __classPrivateFieldGet(this, _Container_engine, \"f\").plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        for (const [, drawer] of this.drawers) {\n            if (drawer.init) {\n                await drawer.init(this);\n            }\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.init) {\n                plugin.init(this.actualOptions);\n            }\n            else if (plugin.initAsync !== undefined) {\n                await plugin.initAsync(this.actualOptions);\n            }\n        }\n        const pathOptions = this.actualOptions.particles.move.path;\n        if (pathOptions.generator) {\n            this.setPath(__classPrivateFieldGet(this, _Container_engine, \"f\").plugins.getPathGenerator(pathOptions.generator));\n        }\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            if (plugin.particlesSetup !== undefined) {\n                plugin.particlesSetup();\n            }\n        }\n    }\n    intersectionManager(entries) {\n        if (!this.actualOptions.pauseOnOutsideViewport) {\n            return;\n        }\n        for (const entry of entries) {\n            if (entry.target !== this.interactivity.element) {\n                continue;\n            }\n            if (entry.isIntersecting) {\n                this.play();\n            }\n            else {\n                this.pause();\n            }\n        }\n    }\n}\n_Container_engine = new WeakMap();\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Loader_engine;\nimport { Constants } from \"./Utils\";\nimport { Container } from \"./Container\";\nimport { itemFromArray } from \"../Utils\";\nfunction fetchError(statusCode) {\n    console.error(`Error tsParticles - fetch status: ${statusCode}`);\n    console.error(\"Error tsParticles - File config not found\");\n}\nexport class Loader {\n    constructor(engine) {\n        _Loader_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Loader_engine, engine, \"f\");\n    }\n    dom() {\n        return __classPrivateFieldGet(this, _Loader_engine, \"f\").domArray;\n    }\n    domItem(index) {\n        const dom = this.dom();\n        const item = dom[index];\n        if (item && !item.destroyed) {\n            return item;\n        }\n        dom.splice(index, 1);\n    }\n    async loadOptions(params) {\n        var _a, _b, _c;\n        const tagId = (_a = params.tagId) !== null && _a !== void 0 ? _a : `tsparticles${Math.floor(Math.random() * 10000)}`;\n        const { options, index } = params;\n        let domContainer = (_b = params.element) !== null && _b !== void 0 ? _b : document.getElementById(tagId);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = tagId;\n            (_c = document.querySelector(\"body\")) === null || _c === void 0 ? void 0 : _c.append(domContainer);\n        }\n        const currentOptions = options instanceof Array ? itemFromArray(options, index) : options;\n        const dom = this.dom();\n        const oldIndex = dom.findIndex((v) => v.id === tagId);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[Constants.generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[Constants.generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[Constants.generatedAttribute] = \"true\";\n                canvasEl.style.width = \"100%\";\n                canvasEl.style.height = \"100%\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        const newItem = new Container(__classPrivateFieldGet(this, _Loader_engine, \"f\"), tagId, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    async loadRemoteOptions(params) {\n        const { url: jsonUrl, index } = params;\n        const url = jsonUrl instanceof Array ? itemFromArray(jsonUrl, index) : jsonUrl;\n        if (!url) {\n            return;\n        }\n        const response = await fetch(url);\n        if (!response.ok) {\n            fetchError(response.status);\n            return;\n        }\n        const data = await response.json();\n        return this.loadOptions({\n            tagId: params.tagId,\n            element: params.element,\n            index,\n            options: data,\n        });\n    }\n    load(tagId, options, index) {\n        const params = { index };\n        if (typeof tagId === \"string\") {\n            params.tagId = tagId;\n        }\n        else {\n            params.options = tagId;\n        }\n        if (typeof options === \"number\") {\n            params.index = options !== null && options !== void 0 ? options : params.index;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async set(id, domContainer, options, index) {\n        const params = { index };\n        if (typeof id === \"string\") {\n            params.tagId = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (domContainer instanceof HTMLElement) {\n            params.element = domContainer;\n        }\n        else {\n            params.options = domContainer;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async loadJSON(tagId, jsonUrl, index) {\n        let url, id;\n        if (typeof jsonUrl === \"number\" || jsonUrl === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = jsonUrl;\n        }\n        return this.loadRemoteOptions({ tagId: id, url, index });\n    }\n    async setJSON(id, domContainer, jsonUrl, index) {\n        let url, newId, newIndex, element;\n        if (id instanceof HTMLElement) {\n            element = id;\n            url = domContainer;\n            newIndex = jsonUrl;\n        }\n        else {\n            newId = id;\n            element = domContainer;\n            url = jsonUrl;\n            newIndex = index;\n        }\n        return this.loadRemoteOptions({ tagId: newId, url, index: newIndex, element });\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (dom.length === 0) {\n            throw new Error(\"Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()\");\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n}\n_Loader_engine = new WeakMap();\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Engine_initialized, _Engine_loader;\nimport { Loader, Plugins } from \"./Core\";\nexport class Engine {\n    constructor() {\n        _Engine_initialized.set(this, void 0);\n        _Engine_loader.set(this, void 0);\n        __classPrivateFieldSet(this, _Engine_initialized, false, \"f\");\n        this.domArray = [];\n        __classPrivateFieldSet(this, _Engine_loader, new Loader(this), \"f\");\n        this.plugins = new Plugins(this);\n    }\n    init() {\n        if (!__classPrivateFieldGet(this, _Engine_initialized, \"f\")) {\n            __classPrivateFieldSet(this, _Engine_initialized, true, \"f\");\n        }\n    }\n    async loadFromArray(tagId, options, index) {\n        return __classPrivateFieldGet(this, _Engine_loader, \"f\").load(tagId, options, index);\n    }\n    async load(tagId, options) {\n        return __classPrivateFieldGet(this, _Engine_loader, \"f\").load(tagId, options);\n    }\n    async set(id, element, options) {\n        return __classPrivateFieldGet(this, _Engine_loader, \"f\").set(id, element, options);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        return __classPrivateFieldGet(this, _Engine_loader, \"f\").loadJSON(tagId, pathConfigJson, index);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        return __classPrivateFieldGet(this, _Engine_loader, \"f\").setJSON(id, element, pathConfigJson, index);\n    }\n    setOnClickHandler(callback) {\n        __classPrivateFieldGet(this, _Engine_loader, \"f\").setOnClickHandler(callback);\n    }\n    dom() {\n        return __classPrivateFieldGet(this, _Engine_loader, \"f\").dom();\n    }\n    domItem(index) {\n        return __classPrivateFieldGet(this, _Engine_loader, \"f\").domItem(index);\n    }\n    async refresh() {\n        for (const instance of this.dom()) {\n            await instance.refresh();\n        }\n    }\n    async addShape(shape, drawer, init, afterEffect, destroy) {\n        let customDrawer;\n        if (typeof drawer === \"function\") {\n            customDrawer = {\n                afterEffect: afterEffect,\n                destroy: destroy,\n                draw: drawer,\n                init: init,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh();\n    }\n    async addPreset(preset, options, override = false) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh();\n    }\n    async addPlugin(plugin) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh();\n    }\n    async addPathGenerator(name, generator) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh();\n    }\n    async addInteractor(name, interactorInitializer) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh();\n    }\n    async addParticleUpdater(name, updaterInitializer) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh();\n    }\n}\n_Engine_initialized = new WeakMap(), _Engine_loader = new WeakMap();\n", "const initPjs = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initPjs };\n", "export class AbsorberSizeLimit {\n    constructor() {\n        this.radius = 0;\n        this.mass = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mass !== undefined) {\n            this.mass = data.mass;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n", "import { AbsorberSizeLimit } from \"./AbsorberSizeLimit\";\nimport { ValueWithRandom } from \"../../../../Options/Classes/ValueWithRandom\";\nexport class AbsorberSize extends ValueWithRandom {\n    constructor() {\n        super();\n        this.density = 5;\n        this.random.minimumValue = 1;\n        this.value = 50;\n        this.limit = new AbsorberSizeLimit();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.density !== undefined) {\n            this.density = data.density;\n        }\n        if (typeof data.limit === \"number\") {\n            this.limit.radius = data.limit;\n        }\n        else {\n            this.limit.load(data.limit);\n        }\n    }\n}\n", "import { AbsorberSize } from \"./AbsorberSize\";\nimport { OptionsColor } from \"../../../../Options/Classes/OptionsColor\";\nexport class Absorber {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#000000\";\n        this.draggable = false;\n        this.opacity = 1;\n        this.destroy = true;\n        this.orbits = false;\n        this.size = new AbsorberSize();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.draggable !== undefined) {\n            this.draggable = data.draggable;\n        }\n        this.name = data.name;\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.position !== undefined) {\n            this.position = {\n                x: data.position.x,\n                y: data.position.y,\n            };\n        }\n        if (data.size !== undefined) {\n            this.size.load(data.size);\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.orbits !== undefined) {\n            this.orbits = data.orbits;\n        }\n    }\n}\n", "import { colorToRgb, getDistance, getDistances, getRangeValue, getStyleFromRgb, isPointInside } from \"../../Utils\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { Vector } from \"../../Core\";\nexport class AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        var _a, _b, _c;\n        this.absorbers = absorbers;\n        this.container = container;\n        this.initialPosition = position ? Vector.create(position.x, position.y) : undefined;\n        if (options instanceof Absorber) {\n            this.options = options;\n        }\n        else {\n            this.options = new Absorber();\n            this.options.load(options);\n        }\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = getRangeValue(this.options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n        const limit = this.options.size.limit;\n        this.limit = {\n            radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n            mass: limit.mass,\n        };\n        this.color = (_a = colorToRgb(this.options.color)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n    }\n    attract(particle) {\n        const container = this.container;\n        const options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition();\n        const { dx, dy, distance } = getDistances(this.position, pos);\n        const v = Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this.updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this.updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this.updateParticlePosition(particle, v);\n        }\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    calcPosition() {\n        var _a, _b;\n        const container = this.container;\n        const percentPosition = this.options.position;\n        return Vector.create((((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100) * container.canvas.size.width, (((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100) * container.canvas.size.height);\n    }\n    updateParticlePosition(particle, v) {\n        var _a;\n        if (particle.destroyed) {\n            return;\n        }\n        const container = this.container;\n        const canvasSize = container.canvas.size;\n        if (particle.needsNewPosition) {\n            particle.position.x = Math.floor(Math.random() * canvasSize.width);\n            particle.position.y = Math.floor(Math.random() * canvasSize.height);\n            particle.velocity.setTo(particle.initialVelocity);\n            particle.absorberOrbit = undefined;\n            particle.needsNewPosition = false;\n        }\n        if (this.options.orbits) {\n            if (particle.absorberOrbit === undefined) {\n                particle.absorberOrbit = Vector.create(0, 0);\n                particle.absorberOrbit.length = getDistance(particle.getPosition(), this.position);\n                particle.absorberOrbit.angle = Math.random() * Math.PI * 2;\n            }\n            if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                const minSize = Math.min(canvasSize.width, canvasSize.height);\n                particle.absorberOrbit.length = minSize * (1 + (Math.random() * 0.2 - 0.1));\n            }\n            if (particle.absorberOrbitDirection === undefined) {\n                particle.absorberOrbitDirection =\n                    particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n            }\n            const orbitRadius = particle.absorberOrbit.length;\n            const orbitAngle = particle.absorberOrbit.angle;\n            const orbitDirection = particle.absorberOrbitDirection;\n            particle.velocity.x = 0;\n            particle.velocity.y = 0;\n            const updateFunc = {\n                x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n                y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos,\n            };\n            particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n            particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n            particle.absorberOrbit.length -= v.length;\n            particle.absorberOrbit.angle +=\n                ((((_a = particle.retina.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio) / 100) *\n                    container.retina.reduceFactor;\n        }\n        else {\n            const addV = Vector.origin;\n            addV.length = v.length;\n            addV.angle = v.angle;\n            particle.velocity.addTo(addV);\n        }\n    }\n}\n", "import { Absorber } from \"./Options/Classes/Absorber\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nimport { itemFromArray } from \"../../Utils\";\nexport class Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        const overridableContainer = container;\n        overridableContainer.getAbsorber = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        overridableContainer.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    init(options) {\n        var _a, _b;\n        if (!options) {\n            return;\n        }\n        if (options.absorbers) {\n            if (options.absorbers instanceof Array) {\n                this.absorbers = options.absorbers.map((s) => {\n                    const tmp = new Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.absorbers instanceof Array) {\n                    this.absorbers = new Absorber();\n                }\n                this.absorbers.load(options.absorbers);\n            }\n        }\n        const interactivityAbsorbers = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n        if (interactivityAbsorbers) {\n            if (interactivityAbsorbers instanceof Array) {\n                this.interactivityAbsorbers = interactivityAbsorbers.map((s) => {\n                    const tmp = new Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.interactivityAbsorbers instanceof Array) {\n                    this.interactivityAbsorbers = new Absorber();\n                }\n                this.interactivityAbsorbers.load(interactivityAbsorbers);\n            }\n        }\n        if (this.absorbers instanceof Array) {\n            for (const absorberOptions of this.absorbers) {\n                this.addAbsorber(absorberOptions);\n            }\n        }\n        else {\n            this.addAbsorber(this.absorbers);\n        }\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            context.save();\n            absorber.draw(context);\n            context.restore();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const absorberOptions = this.absorbers;\n        const modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            let absorbersModeOptions;\n            if (modeAbsorbers instanceof Array) {\n                if (modeAbsorbers.length > 0) {\n                    absorbersModeOptions = itemFromArray(modeAbsorbers);\n                }\n            }\n            else {\n                absorbersModeOptions = modeAbsorbers;\n            }\n            const absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : (absorberOptions instanceof Array ? itemFromArray(absorberOptions) : absorberOptions);\n            const aPosition = container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n}\n", "import { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nimport { isInArray } from \"../../Utils\";\nclass AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers(container);\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (options === undefined) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        let loadAbsorbers = false;\n        if (absorbers instanceof Array) {\n            if (absorbers.length) {\n                loadAbsorbers = true;\n            }\n        }\n        else if (absorbers !== undefined) {\n            loadAbsorbers = true;\n        }\n        else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n            isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n            loadAbsorbers = true;\n        }\n        return loadAbsorbers;\n    }\n    loadOptions(options, source) {\n        var _a, _b;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        const optionsCast = options;\n        if (source === null || source === void 0 ? void 0 : source.absorbers) {\n            if ((source === null || source === void 0 ? void 0 : source.absorbers) instanceof Array) {\n                optionsCast.absorbers = source === null || source === void 0 ? void 0 : source.absorbers.map((s) => {\n                    const tmp = new Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let absorberOptions = optionsCast.absorbers;\n                if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n                    optionsCast.absorbers = absorberOptions = new Absorber();\n                }\n                absorberOptions.load(source === null || source === void 0 ? void 0 : source.absorbers);\n            }\n        }\n        const interactivityAbsorbers = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n        if (interactivityAbsorbers) {\n            if (interactivityAbsorbers instanceof Array) {\n                optionsCast.interactivity.modes.absorbers = interactivityAbsorbers.map((s) => {\n                    const tmp = new Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let absorberOptions = optionsCast.interactivity.modes.absorbers;\n                if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n                    optionsCast.interactivity.modes.absorbers = absorberOptions = new Absorber();\n                }\n                absorberOptions.load(interactivityAbsorbers);\n            }\n        }\n    }\n}\nexport async function loadAbsorbersPlugin(engine) {\n    const plugin = new AbsorbersPlugin();\n    await engine.addPlugin(plugin);\n}\n", "export class CircleShape {\n    randomPosition(position, size, fill) {\n        const generateTheta = (x, y) => {\n            const u = Math.random() / 4.0;\n            const theta = Math.atan((y / x) * Math.tan(2 * Math.PI * u));\n            const v = Math.random();\n            if (v < 0.25) {\n                return theta;\n            }\n            else if (v < 0.5) {\n                return Math.PI - theta;\n            }\n            else if (v < 0.75) {\n                return Math.PI + theta;\n            }\n            else {\n                return -theta;\n            }\n        };\n        const radius = (x, y, theta) => (x * y) / Math.sqrt((y * Math.cos(theta)) ** 2 + (x * Math.sin(theta)) ** 2);\n        const [a, b] = [size.width / 2, size.height / 2];\n        const randomTheta = generateTheta(a, b), maxRadius = radius(a, b, randomTheta), randomRadius = fill ? maxRadius * Math.sqrt(Math.random()) : maxRadius;\n        return {\n            x: position.x + randomRadius * Math.cos(randomTheta),\n            y: position.y + randomRadius * Math.sin(randomTheta),\n        };\n    }\n}\n", "export class EmitterLife {\n    constructor() {\n        this.wait = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.wait !== undefined) {\n            this.wait = data.wait;\n        }\n    }\n}\n", "import { setRangeValue } from \"../../../../Utils\";\nexport class EmitterRate {\n    constructor() {\n        this.quantity = 1;\n        this.delay = 0.1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = setRangeValue(data.quantity);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n    }\n}\n", "export class EmitterSize {\n    constructor() {\n        this.mode = \"percent\";\n        this.height = 0;\n        this.width = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n", "import { AnimatableColor } from \"../../../../Options/Classes/AnimatableColor\";\nimport { EmitterLife } from \"./EmitterLife\";\nimport { EmitterRate } from \"./EmitterRate\";\nimport { EmitterSize } from \"./EmitterSize\";\nimport { deepExtend } from \"../../../../Utils\";\nexport class Emitter {\n    constructor() {\n        this.autoPlay = true;\n        this.fill = true;\n        this.life = new EmitterLife();\n        this.rate = new EmitterRate();\n        this.shape = \"square\";\n        this.startCount = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.size !== undefined) {\n            if (this.size === undefined) {\n                this.size = new EmitterSize();\n            }\n            this.size.load(data.size);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.domId = data.domId;\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        this.life.load(data.life);\n        this.name = data.name;\n        if (data.particles !== undefined) {\n            this.particles = deepExtend({}, data.particles);\n        }\n        this.rate.load(data.rate);\n        if (data.shape !== undefined) {\n            this.shape = data.shape;\n        }\n        if (data.position !== undefined) {\n            this.position = {\n                x: data.position.x,\n                y: data.position.y,\n            };\n        }\n        if (data.spawnColor !== undefined) {\n            if (this.spawnColor === undefined) {\n                this.spawnColor = new AnimatableColor();\n            }\n            this.spawnColor.load(data.spawnColor);\n        }\n        if (data.startCount !== undefined) {\n            this.startCount = data.startCount;\n        }\n    }\n}\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _EmitterInstance_firstSpawn, _EmitterInstance_startParticlesAdded, _EmitterInstance_engine;\nimport { colorToHsl, deepExtend, getRangeValue, isPointInside, randomInRange } from \"../../Utils\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport class EmitterInstance {\n    constructor(engine, emitters, container, options, position) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        var _h;\n        this.emitters = emitters;\n        this.container = container;\n        _EmitterInstance_firstSpawn.set(this, void 0);\n        _EmitterInstance_startParticlesAdded.set(this, void 0);\n        _EmitterInstance_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _EmitterInstance_engine, engine, \"f\");\n        this.currentDuration = 0;\n        this.currentEmitDelay = 0;\n        this.currentSpawnDelay = 0;\n        this.initialPosition = position;\n        if (options instanceof Emitter) {\n            this.options = options;\n        }\n        else {\n            this.options = new Emitter();\n            this.options.load(options);\n        }\n        this.spawnDelay = (((_a = this.options.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor;\n        this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n        this.name = this.options.name;\n        this.shape = (_c = __classPrivateFieldGet(this, _EmitterInstance_engine, \"f\").emitterShapeManager) === null || _c === void 0 ? void 0 : _c.getShape(this.options.shape);\n        this.fill = this.options.fill;\n        __classPrivateFieldSet(this, _EmitterInstance_firstSpawn, !this.options.life.wait, \"f\");\n        __classPrivateFieldSet(this, _EmitterInstance_startParticlesAdded, false, \"f\");\n        let particlesOptions = deepExtend({}, this.options.particles);\n        particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : (particlesOptions = {});\n        (_d = particlesOptions.move) !== null && _d !== void 0 ? _d : (particlesOptions.move = {});\n        (_e = (_h = particlesOptions.move).direction) !== null && _e !== void 0 ? _e : (_h.direction = this.options.direction);\n        if (this.options.spawnColor) {\n            this.spawnColor = colorToHsl(this.options.spawnColor);\n        }\n        this.paused = !this.options.autoPlay;\n        this.particlesOptions = particlesOptions;\n        this.size =\n            (_f = this.options.size) !== null && _f !== void 0 ? _f : (() => {\n                const size = new EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: \"percent\",\n                    width: 0,\n                });\n                return size;\n            })();\n        this.lifeCount = (_g = this.options.life.count) !== null && _g !== void 0 ? _g : -1;\n        this.immortal = this.lifeCount <= 0;\n        this.play();\n    }\n    externalPlay() {\n        this.paused = false;\n        this.play();\n    }\n    externalPause() {\n        this.paused = true;\n        this.pause();\n    }\n    play() {\n        var _a;\n        if (this.paused) {\n            return;\n        }\n        if (this.container.retina.reduceFactor &&\n            (this.lifeCount > 0 || this.immortal || !this.options.life.count) &&\n            (__classPrivateFieldGet(this, _EmitterInstance_firstSpawn, \"f\") || this.currentSpawnDelay >= ((_a = this.spawnDelay) !== null && _a !== void 0 ? _a : 0))) {\n            if (this.emitDelay === undefined) {\n                const delay = getRangeValue(this.options.rate.delay);\n                this.emitDelay = (1000 * delay) / this.container.retina.reduceFactor;\n            }\n            if (this.lifeCount > 0 || this.immortal) {\n                this.prepareToDie();\n            }\n        }\n    }\n    pause() {\n        if (this.paused) {\n            return;\n        }\n        delete this.emitDelay;\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    update(delta) {\n        var _a, _b, _c;\n        if (this.paused) {\n            return;\n        }\n        if (__classPrivateFieldGet(this, _EmitterInstance_firstSpawn, \"f\")) {\n            __classPrivateFieldSet(this, _EmitterInstance_firstSpawn, false, \"f\");\n            this.currentSpawnDelay = (_a = this.spawnDelay) !== null && _a !== void 0 ? _a : 0;\n            this.currentEmitDelay = (_b = this.emitDelay) !== null && _b !== void 0 ? _b : 0;\n        }\n        if (!__classPrivateFieldGet(this, _EmitterInstance_startParticlesAdded, \"f\")) {\n            __classPrivateFieldSet(this, _EmitterInstance_startParticlesAdded, true, \"f\");\n            this.emitParticles(this.options.startCount);\n        }\n        if (this.duration !== undefined) {\n            this.currentDuration += delta.value;\n            if (this.currentDuration >= this.duration) {\n                this.pause();\n                if (this.spawnDelay !== undefined) {\n                    delete this.spawnDelay;\n                }\n                if (!this.immortal) {\n                    this.lifeCount--;\n                }\n                if (this.lifeCount > 0 || this.immortal) {\n                    this.position = this.calcPosition();\n                    this.spawnDelay = (((_c = this.options.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this.destroy();\n                }\n                this.currentDuration -= this.duration;\n                delete this.duration;\n            }\n        }\n        if (this.spawnDelay !== undefined) {\n            this.currentSpawnDelay += delta.value;\n            if (this.currentSpawnDelay >= this.spawnDelay) {\n                this.play();\n                this.currentSpawnDelay -= this.currentSpawnDelay;\n                delete this.spawnDelay;\n            }\n        }\n        if (this.emitDelay !== undefined) {\n            this.currentEmitDelay += delta.value;\n            if (this.currentEmitDelay >= this.emitDelay) {\n                this.emit();\n                this.currentEmitDelay -= this.emitDelay;\n            }\n        }\n    }\n    getPosition() {\n        if (this.options.domId) {\n            const container = this.container, element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n                    y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio,\n                };\n            }\n        }\n        return this.position;\n    }\n    getSize() {\n        const container = this.container;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    width: elRect.width * container.retina.pixelRatio,\n                    height: elRect.height * container.retina.pixelRatio,\n                };\n            }\n        }\n        return {\n            width: this.size.mode === \"percent\"\n                ? (container.canvas.size.width * this.size.width) / 100\n                : this.size.width,\n            height: this.size.mode === \"percent\"\n                ? (container.canvas.size.height * this.size.height) / 100\n                : this.size.height,\n        };\n    }\n    prepareToDie() {\n        var _a;\n        if (this.paused) {\n            return;\n        }\n        const duration = (_a = this.options.life) === null || _a === void 0 ? void 0 : _a.duration;\n        if (this.container.retina.reduceFactor &&\n            (this.lifeCount > 0 || this.immortal) &&\n            duration !== undefined &&\n            duration > 0) {\n            this.duration = duration * 1000;\n        }\n    }\n    destroy() {\n        this.emitters.removeEmitter(this);\n    }\n    calcPosition() {\n        var _a, _b;\n        const container = this.container;\n        const percentPosition = this.options.position;\n        return {\n            x: (((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100) * container.canvas.size.width,\n            y: (((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100) * container.canvas.size.height,\n        };\n    }\n    emit() {\n        if (this.paused) {\n            return;\n        }\n        const quantity = getRangeValue(this.options.rate.quantity);\n        this.emitParticles(quantity);\n    }\n    emitParticles(quantity) {\n        var _a, _b, _c;\n        const container = this.container;\n        const position = this.getPosition();\n        const size = this.getSize();\n        for (let i = 0; i < quantity; i++) {\n            const particlesOptions = deepExtend({}, this.particlesOptions);\n            if (this.spawnColor) {\n                const hslAnimation = (_a = this.options.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n                if (hslAnimation) {\n                    this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                    this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                    this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                }\n                if (!particlesOptions.color) {\n                    particlesOptions.color = {\n                        value: this.spawnColor,\n                    };\n                }\n                else {\n                    particlesOptions.color.value = this.spawnColor;\n                }\n            }\n            if (!position) {\n                return;\n            }\n            const pPosition = (_c = (_b = this.shape) === null || _b === void 0 ? void 0 : _b.randomPosition(position, size, this.fill)) !== null && _c !== void 0 ? _c : position;\n            container.particles.addParticle(pPosition, particlesOptions);\n        }\n    }\n    setColorAnimation(animation, initValue, maxValue) {\n        var _a;\n        const container = this.container;\n        if (!animation.enable) {\n            return initValue;\n        }\n        const colorOffset = randomInRange(animation.offset);\n        const delay = getRangeValue(this.options.rate.delay);\n        const emitFactor = (1000 * delay) / container.retina.reduceFactor;\n        const colorSpeed = (_a = animation.speed) !== null && _a !== void 0 ? _a : 0;\n        return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n    }\n}\n_EmitterInstance_firstSpawn = new WeakMap(), _EmitterInstance_startParticlesAdded = new WeakMap(), _EmitterInstance_engine = new WeakMap();\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Emitters_engine;\nimport { deepExtend, itemFromArray } from \"../../Utils\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterInstance } from \"./EmitterInstance\";\nexport class Emitters {\n    constructor(engine, container) {\n        this.container = container;\n        _Emitters_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Emitters_engine, engine, \"f\");\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = [];\n        const overridableContainer = container;\n        overridableContainer.getEmitter = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        overridableContainer.addEmitter = (options, position) => this.addEmitter(options, position);\n        overridableContainer.removeEmitter = (idxOrName) => {\n            const emitter = overridableContainer.getEmitter(idxOrName);\n            if (emitter) {\n                this.removeEmitter(emitter);\n            }\n        };\n        overridableContainer.playEmitter = (idxOrName) => {\n            const emitter = overridableContainer.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        overridableContainer.pauseEmitter = (idxOrName) => {\n            const emitter = overridableContainer.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    init(options) {\n        var _a, _b;\n        if (!options) {\n            return;\n        }\n        if (options.emitters) {\n            if (options.emitters instanceof Array) {\n                this.emitters = options.emitters.map((s) => {\n                    const tmp = new Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.emitters instanceof Array) {\n                    this.emitters = new Emitter();\n                }\n                this.emitters.load(options.emitters);\n            }\n        }\n        const interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                this.interactivityEmitters = interactivityEmitters.map((s) => {\n                    const tmp = new Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.interactivityEmitters instanceof Array) {\n                    this.interactivityEmitters = new Emitter();\n                }\n                this.interactivityEmitters.load(interactivityEmitters);\n            }\n        }\n        if (this.emitters instanceof Array) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const emitterOptions = this.emitters;\n        const modeEmitters = this.interactivityEmitters;\n        if (mode === \"emitter\") {\n            let emitterModeOptions;\n            if (modeEmitters instanceof Array) {\n                if (modeEmitters.length > 0) {\n                    emitterModeOptions = itemFromArray(modeEmitters);\n                }\n            }\n            else {\n                emitterModeOptions = modeEmitters;\n            }\n            const emittersOptions = emitterModeOptions !== null && emitterModeOptions !== void 0 ? emitterModeOptions : (emitterOptions instanceof Array ? itemFromArray(emitterOptions) : emitterOptions);\n            const ePosition = container.interactivity.mouse.clickPosition;\n            this.addEmitter(deepExtend({}, emittersOptions), ePosition);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    addEmitter(options, position) {\n        const emitterOptions = new Emitter();\n        emitterOptions.load(options);\n        const emitter = new EmitterInstance(__classPrivateFieldGet(this, _Emitters_engine, \"f\"), this, this.container, emitterOptions, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n}\n_Emitters_engine = new WeakMap();\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _ShapeManager_engine;\nconst shapes = new Map();\nexport class ShapeManager {\n    constructor(engine) {\n        _ShapeManager_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _ShapeManager_engine, engine, \"f\");\n    }\n    addShape(name, drawer) {\n        if (!this.getShape(name)) {\n            shapes.set(name, drawer);\n        }\n    }\n    getShape(name) {\n        return shapes.get(name);\n    }\n    getSupportedShapes() {\n        return shapes.keys();\n    }\n}\n_ShapeManager_engine = new WeakMap();\n", "function randomSquareCoordinate(position, offset) {\n    return position + offset * (Math.random() - 0.5);\n}\nexport class SquareShape {\n    randomPosition(position, size, fill) {\n        if (fill) {\n            return {\n                x: randomSquareCoordinate(position.x, size.width),\n                y: randomSquareCoordinate(position.y, size.height),\n            };\n        }\n        else {\n            const halfW = size.width / 2, halfH = size.height / 2, side = Math.floor(Math.random() * 4), v = (Math.random() - 0.5) * 2;\n            switch (side) {\n                case 0:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y - halfH,\n                    };\n                case 1:\n                    return {\n                        x: position.x - halfW,\n                        y: position.y + v * halfH,\n                    };\n                case 2:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y + halfH,\n                    };\n                case 3:\n                default:\n                    return {\n                        x: position.x + halfW,\n                        y: position.y + v * halfH,\n                    };\n            }\n        }\n    }\n}\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _EmittersPlugin_engine;\nimport { CircleShape } from \"./Shapes/Circle/CircleShape\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { Emitters } from \"./Emitters\";\nimport { ShapeManager } from \"./ShapeManager\";\nimport { SquareShape } from \"./Shapes/Square/SquareShape\";\nimport { isInArray } from \"../../Utils\";\nclass EmittersPlugin {\n    constructor(engine) {\n        _EmittersPlugin_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _EmittersPlugin_engine, engine, \"f\");\n        this.id = \"emitters\";\n    }\n    getPlugin(container) {\n        return new Emitters(__classPrivateFieldGet(this, _EmittersPlugin_engine, \"f\"), container);\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (options === undefined) {\n            return false;\n        }\n        const emitters = options.emitters;\n        return ((emitters instanceof Array && !!emitters.length) ||\n            emitters !== undefined ||\n            (!!((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n                isInArray(\"emitter\", options.interactivity.events.onClick.mode)));\n    }\n    loadOptions(options, source) {\n        var _a, _b;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        const optionsCast = options;\n        if (source === null || source === void 0 ? void 0 : source.emitters) {\n            if ((source === null || source === void 0 ? void 0 : source.emitters) instanceof Array) {\n                optionsCast.emitters = source === null || source === void 0 ? void 0 : source.emitters.map((s) => {\n                    const tmp = new Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let emitterOptions = optionsCast.emitters;\n                if ((emitterOptions === null || emitterOptions === void 0 ? void 0 : emitterOptions.load) === undefined) {\n                    optionsCast.emitters = emitterOptions = new Emitter();\n                }\n                emitterOptions.load(source === null || source === void 0 ? void 0 : source.emitters);\n            }\n        }\n        const interactivityEmitters = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                optionsCast.interactivity.modes.emitters = interactivityEmitters.map((s) => {\n                    const tmp = new Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let emitterOptions = optionsCast.interactivity.modes.emitters;\n                if ((emitterOptions === null || emitterOptions === void 0 ? void 0 : emitterOptions.load) === undefined) {\n                    optionsCast.interactivity.modes.emitters = emitterOptions = new Emitter();\n                }\n                emitterOptions.load(interactivityEmitters);\n            }\n        }\n    }\n}\n_EmittersPlugin_engine = new WeakMap();\nexport async function loadEmittersPlugin(engine) {\n    if (!engine.emitterShapeManager) {\n        engine.emitterShapeManager = new ShapeManager(engine);\n    }\n    if (!engine.addEmitterShape) {\n        engine.addEmitterShape = (name, shape) => {\n            var _a;\n            (_a = engine.emitterShapeManager) === null || _a === void 0 ? void 0 : _a.addShape(name, shape);\n        };\n    }\n    const plugin = new EmittersPlugin(engine);\n    await engine.addPlugin(plugin);\n    engine.addEmitterShape(\"circle\", new CircleShape());\n    engine.addEmitterShape(\"square\", new SquareShape());\n}\nexport * from \"./EmittersEngine\";\n", "import { ExternalInteractorBase } from \"../../../Core\";\nimport { isInArray } from \"../../../Utils\";\nexport class TrailMaker extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.delay = 0;\n    }\n    async interact(delta) {\n        var _a, _b, _c, _d;\n        if (!this.container.retina.reduceFactor) {\n            return;\n        }\n        const container = this.container, options = container.actualOptions, trailOptions = options.interactivity.modes.trail, optDelay = (trailOptions.delay * 1000) / this.container.retina.reduceFactor;\n        if (this.delay < optDelay) {\n            this.delay += delta.value;\n        }\n        if (this.delay < optDelay) {\n            return;\n        }\n        let canEmit = true;\n        if (trailOptions.pauseOnStop) {\n            if (container.interactivity.mouse.position === this.lastPosition ||\n                (((_a = container.interactivity.mouse.position) === null || _a === void 0 ? void 0 : _a.x) === ((_b = this.lastPosition) === null || _b === void 0 ? void 0 : _b.x) &&\n                    ((_c = container.interactivity.mouse.position) === null || _c === void 0 ? void 0 : _c.y) === ((_d = this.lastPosition) === null || _d === void 0 ? void 0 : _d.y))) {\n                canEmit = false;\n            }\n        }\n        if (container.interactivity.mouse.position) {\n            this.lastPosition = {\n                x: container.interactivity.mouse.position.x,\n                y: container.interactivity.mouse.position.y,\n            };\n        }\n        else {\n            delete this.lastPosition;\n        }\n        if (canEmit) {\n            container.particles.push(trailOptions.quantity, container.interactivity.mouse, trailOptions.particles);\n        }\n        this.delay -= optDelay;\n    }\n    isEnabled() {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = options.interactivity.events;\n        return ((mouse.clicking && mouse.inside && !!mouse.position && isInArray(\"trail\", events.onClick.mode)) ||\n            (mouse.inside && !!mouse.position && isInArray(\"trail\", events.onHover.mode)));\n    }\n    reset() {\n    }\n}\n", "import { TrailMaker } from \"./TrailMaker\";\nexport async function loadExternalTrailInteraction(engine) {\n    await engine.addInteractor(\"externalTrail\", (container) => new TrailMaker(container));\n}\n", "import { OptionsColor } from \"../../../../Options/Classes/OptionsColor\";\nimport { stringToAlpha } from \"../../../../Utils\";\nexport class PolygonMaskDrawStroke {\n    constructor() {\n        this.color = new OptionsColor();\n        this.width = 0.5;\n        this.opacity = 1;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (typeof this.color.value === \"string\") {\n            this.opacity = (_a = stringToAlpha(this.color.value)) !== null && _a !== void 0 ? _a : this.opacity;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n", "import { OptionsColor } from \"../../../../Options/Classes/OptionsColor\";\nimport { PolygonMaskDrawStroke } from \"./PolygonMaskDrawStroke\";\nexport class PolygonMaskDraw {\n    constructor() {\n        this.enable = false;\n        this.stroke = new PolygonMaskDrawStroke();\n    }\n    get lineWidth() {\n        return this.stroke.width;\n    }\n    set lineWidth(value) {\n        this.stroke.width = value;\n    }\n    get lineColor() {\n        return this.stroke.color;\n    }\n    set lineColor(value) {\n        this.stroke.color = OptionsColor.create(this.stroke.color, value);\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const stroke = (_a = data.stroke) !== null && _a !== void 0 ? _a : {\n            color: data.lineColor,\n            width: data.lineWidth,\n        };\n        this.stroke.load(stroke);\n    }\n}\n", "export class PolygonMaskInline {\n    constructor() {\n        this.arrangement = \"one-per-point\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.arrangement !== undefined) {\n            this.arrangement = data.arrangement;\n        }\n    }\n}\n", "export class PolygonMaskLocalSvg {\n    constructor() {\n        this.path = [];\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n        if (data.size !== undefined) {\n            if (data.size.width !== undefined) {\n                this.size.width = data.size.width;\n            }\n            if (data.size.height !== undefined) {\n                this.size.height = data.size.height;\n            }\n        }\n    }\n}\n", "export class PolygonMaskMove {\n    constructor() {\n        this.radius = 10;\n        this.type = \"path\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n", "import { PolygonMaskDraw } from \"./PolygonMaskDraw\";\nimport { PolygonMaskInline } from \"./PolygonMaskInline\";\nimport { PolygonMaskLocalSvg } from \"./PolygonMaskLocalSvg\";\nimport { PolygonMaskMove } from \"./PolygonMaskMove\";\nimport { deepExtend } from \"../../../../Utils\";\nexport class PolygonMask {\n    constructor() {\n        this.draw = new PolygonMaskDraw();\n        this.enable = false;\n        this.inline = new PolygonMaskInline();\n        this.move = new PolygonMaskMove();\n        this.scale = 1;\n        this.type = \"none\";\n    }\n    get inlineArrangement() {\n        return this.inline.arrangement;\n    }\n    set inlineArrangement(value) {\n        this.inline.arrangement = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        this.draw.load(data.draw);\n        const inline = (_a = data.inline) !== null && _a !== void 0 ? _a : {\n            arrangement: data.inlineArrangement,\n        };\n        if (inline !== undefined) {\n            this.inline.load(inline);\n        }\n        this.move.load(data.move);\n        if (data.scale !== undefined) {\n            this.scale = data.scale;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        else {\n            this.enable = this.type !== \"none\";\n        }\n        if (data.url !== undefined) {\n            this.url = data.url;\n        }\n        if (data.data !== undefined) {\n            if (typeof data.data === \"string\") {\n                this.data = data.data;\n            }\n            else {\n                this.data = new PolygonMaskLocalSvg();\n                this.data.load(data.data);\n            }\n        }\n        if (data.position !== undefined) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n", "import { colorToRgb, getDistances, getStyleFromRgb } from \"../../Utils\";\nimport { Vector } from \"../../Core\";\nexport function drawPolygonMask(context, rawData, stroke) {\n    const color = colorToRgb(stroke.color);\n    if (!color) {\n        return;\n    }\n    context.beginPath();\n    context.moveTo(rawData[0].x, rawData[0].y);\n    for (const item of rawData) {\n        context.lineTo(item.x, item.y);\n    }\n    context.closePath();\n    context.strokeStyle = getStyleFromRgb(color);\n    context.lineWidth = stroke.width;\n    context.stroke();\n}\nexport function drawPolygonMaskPath(context, path, stroke, position) {\n    context.translate(position.x, position.y);\n    const color = colorToRgb(stroke.color);\n    if (!color) {\n        return;\n    }\n    context.strokeStyle = getStyleFromRgb(color, stroke.opacity);\n    context.lineWidth = stroke.width;\n    context.stroke(path);\n}\nexport function parsePaths(paths, scale, offset) {\n    var _a;\n    const res = [];\n    for (const path of paths) {\n        const segments = path.element.pathSegList;\n        const len = (_a = segments === null || segments === void 0 ? void 0 : segments.numberOfItems) !== null && _a !== void 0 ? _a : 0;\n        const p = {\n            x: 0,\n            y: 0,\n        };\n        for (let i = 0; i < len; i++) {\n            const segment = segments === null || segments === void 0 ? void 0 : segments.getItem(i);\n            const svgPathSeg = window.SVGPathSeg;\n            switch (segment === null || segment === void 0 ? void 0 : segment.pathSegType) {\n                case svgPathSeg.PATHSEG_MOVETO_ABS:\n                case svgPathSeg.PATHSEG_LINETO_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                case svgPathSeg.PATHSEG_ARC_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS: {\n                    const absSeg = segment;\n                    p.x = absSeg.x;\n                    p.y = absSeg.y;\n                    break;\n                }\n                case svgPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                    p.x = segment.x;\n                    break;\n                case svgPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                    p.y = segment.y;\n                    break;\n                case svgPathSeg.PATHSEG_LINETO_REL:\n                case svgPathSeg.PATHSEG_MOVETO_REL:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                case svgPathSeg.PATHSEG_ARC_REL:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL: {\n                    const relSeg = segment;\n                    p.x += relSeg.x;\n                    p.y += relSeg.y;\n                    break;\n                }\n                case svgPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                    p.x += segment.x;\n                    break;\n                case svgPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                    p.y += segment.y;\n                    break;\n                case svgPathSeg.PATHSEG_UNKNOWN:\n                case svgPathSeg.PATHSEG_CLOSEPATH:\n                    continue;\n            }\n            res.push({\n                x: p.x * scale + offset.x,\n                y: p.y * scale + offset.y,\n            });\n        }\n    }\n    return res;\n}\nexport function calcClosestPtOnSegment(s1, s2, pos) {\n    const { dx, dy } = getDistances(pos, s1);\n    const { dx: dxx, dy: dyy } = getDistances(s2, s1);\n    const t = (dx * dxx + dy * dyy) / (dxx ** 2 + dyy ** 2);\n    const res = {\n        x: s1.x + dxx * t,\n        y: s1.x + dyy * t,\n        isOnSegment: t >= 0 && t <= 1,\n    };\n    if (t < 0) {\n        res.x = s1.x;\n        res.y = s1.y;\n    }\n    else if (t > 1) {\n        res.x = s2.x;\n        res.y = s2.y;\n    }\n    return res;\n}\nexport function segmentBounce(start, stop, velocity) {\n    const { dx, dy } = getDistances(start, stop);\n    const wallAngle = Math.atan2(dy, dx);\n    const wallNormal = Vector.create(Math.sin(wallAngle), -Math.cos(wallAngle));\n    const d = 2 * (velocity.x * wallNormal.x + velocity.y * wallNormal.y);\n    wallNormal.multTo(d);\n    velocity.subFrom(wallNormal);\n}\n", "import { calcClosestPtOnSegment, drawPolygonMask, drawPolygonMaskPath, parsePaths, segmentBounce } from \"./Utils\";\nimport { deepExtend, getDistance, getDistances, itemFromArray } from \"../../Utils\";\nimport { Constants } from \"../../Core\";\nimport { PolygonMask } from \"./Options/Classes/PolygonMask\";\nexport class PolygonMaskInstance {\n    constructor(container) {\n        this.container = container;\n        this.dimension = {\n            height: 0,\n            width: 0,\n        };\n        this.path2DSupported = !!window.Path2D;\n        this.options = new PolygonMask();\n        this.polygonMaskMoveRadius = this.options.move.radius * container.retina.pixelRatio;\n    }\n    async initAsync(options) {\n        this.options.load(options === null || options === void 0 ? void 0 : options.polygon);\n        const polygonMaskOptions = this.options;\n        this.polygonMaskMoveRadius = polygonMaskOptions.move.radius * this.container.retina.pixelRatio;\n        if (polygonMaskOptions.enable) {\n            await this.initRawData();\n        }\n    }\n    resize() {\n        const container = this.container;\n        const options = this.options;\n        if (!(options.enable && options.type !== \"none\")) {\n            return;\n        }\n        if (this.redrawTimeout) {\n            clearTimeout(this.redrawTimeout);\n        }\n        this.redrawTimeout = window.setTimeout(async () => {\n            await this.initRawData(true);\n            await container.particles.redraw();\n        }, 250);\n    }\n    stop() {\n        delete this.raw;\n        delete this.paths;\n    }\n    particlesInitialization() {\n        const options = this.options;\n        if (options.enable &&\n            options.type === \"inline\" &&\n            (options.inline.arrangement === \"one-per-point\" ||\n                options.inline.arrangement === \"per-point\")) {\n            this.drawPoints();\n            return true;\n        }\n        return false;\n    }\n    particlePosition(position) {\n        var _a, _b;\n        const options = this.options;\n        if (!(options.enable && ((_b = (_a = this.raw) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) > 0)) {\n            return;\n        }\n        return deepExtend({}, position ? position : this.randomPoint());\n    }\n    particleBounce(particle, delta, direction) {\n        return this.polygonBounce(particle, delta, direction);\n    }\n    clickPositionValid(position) {\n        const options = this.options;\n        return (options.enable &&\n            options.type !== \"none\" &&\n            options.type !== \"inline\" &&\n            this.checkInsidePolygon(position));\n    }\n    draw(context) {\n        var _a;\n        if (!((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length)) {\n            return;\n        }\n        const options = this.options;\n        const polygonDraw = options.draw;\n        if (!(options.enable && polygonDraw.enable)) {\n            return;\n        }\n        const rawData = this.raw;\n        for (const path of this.paths) {\n            const path2d = path.path2d;\n            const path2dSupported = this.path2DSupported;\n            if (!context) {\n                continue;\n            }\n            if (path2dSupported && path2d && this.offset) {\n                drawPolygonMaskPath(context, path2d, polygonDraw.stroke, this.offset);\n            }\n            else if (rawData) {\n                drawPolygonMask(context, rawData, polygonDraw.stroke);\n            }\n        }\n    }\n    polygonBounce(particle, _delta, direction) {\n        const options = this.options;\n        if (!this.raw || !options.enable || direction !== \"top\") {\n            return false;\n        }\n        if (options.type === \"inside\" || options.type === \"outside\") {\n            let closest, dx, dy;\n            const pos = particle.getPosition(), radius = particle.getRadius();\n            for (let i = 0, j = this.raw.length - 1; i < this.raw.length; j = i++) {\n                const pi = this.raw[i], pj = this.raw[j];\n                closest = calcClosestPtOnSegment(pi, pj, pos);\n                const dist = getDistances(pos, closest);\n                [dx, dy] = [dist.dx, dist.dy];\n                if (dist.distance < radius) {\n                    segmentBounce(pi, pj, particle.velocity);\n                    return true;\n                }\n            }\n            if (closest && dx !== undefined && dy !== undefined && !this.checkInsidePolygon(pos)) {\n                const factor = { x: 1, y: 1 };\n                if (particle.position.x >= closest.x) {\n                    factor.x = -1;\n                }\n                if (particle.position.y >= closest.y) {\n                    factor.y = -1;\n                }\n                particle.position.x = closest.x + radius * 2 * factor.x;\n                particle.position.y = closest.y + radius * 2 * factor.y;\n                particle.velocity.mult(-1);\n                return true;\n            }\n        }\n        else if (options.type === \"inline\" && particle.initialPosition) {\n            const dist = getDistance(particle.initialPosition, particle.getPosition());\n            if (dist > this.polygonMaskMoveRadius) {\n                particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n                particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n                return true;\n            }\n        }\n        return false;\n    }\n    checkInsidePolygon(position) {\n        var _a, _b;\n        const container = this.container;\n        const options = this.options;\n        if (!options.enable || options.type === \"none\" || options.type === \"inline\") {\n            return true;\n        }\n        if (!this.raw) {\n            throw new Error(Constants.noPolygonFound);\n        }\n        const canvasSize = container.canvas.size;\n        const x = (_a = position === null || position === void 0 ? void 0 : position.x) !== null && _a !== void 0 ? _a : Math.random() * canvasSize.width;\n        const y = (_b = position === null || position === void 0 ? void 0 : position.y) !== null && _b !== void 0 ? _b : Math.random() * canvasSize.height;\n        let inside = false;\n        for (let i = 0, j = this.raw.length - 1; i < this.raw.length; j = i++) {\n            const pi = this.raw[i];\n            const pj = this.raw[j];\n            const intersect = pi.y > y !== pj.y > y && x < ((pj.x - pi.x) * (y - pi.y)) / (pj.y - pi.y) + pi.x;\n            if (intersect) {\n                inside = !inside;\n            }\n        }\n        return options.type === \"inside\"\n            ? inside\n            : options.type === \"outside\"\n                ? !inside\n                : false;\n    }\n    parseSvgPath(xml, force) {\n        var _a, _b, _c;\n        const forceDownload = force !== null && force !== void 0 ? force : false;\n        if (this.paths !== undefined && !forceDownload) {\n            return this.raw;\n        }\n        const container = this.container;\n        const options = this.options;\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(xml, \"image/svg+xml\");\n        const svg = doc.getElementsByTagName(\"svg\")[0];\n        let svgPaths = svg.getElementsByTagName(\"path\");\n        if (!svgPaths.length) {\n            svgPaths = doc.getElementsByTagName(\"path\");\n        }\n        this.paths = [];\n        for (let i = 0; i < svgPaths.length; i++) {\n            const path = svgPaths.item(i);\n            if (path) {\n                this.paths.push({\n                    element: path,\n                    length: path.getTotalLength(),\n                });\n            }\n        }\n        const pxRatio = container.retina.pixelRatio;\n        const scale = options.scale / pxRatio;\n        this.dimension.width = parseFloat((_a = svg.getAttribute(\"width\")) !== null && _a !== void 0 ? _a : \"0\") * scale;\n        this.dimension.height = parseFloat((_b = svg.getAttribute(\"height\")) !== null && _b !== void 0 ? _b : \"0\") * scale;\n        const position = (_c = options.position) !== null && _c !== void 0 ? _c : {\n            x: 50,\n            y: 50,\n        };\n        this.offset = {\n            x: (container.canvas.size.width * position.x) / (100 * pxRatio) - this.dimension.width / 2,\n            y: (container.canvas.size.height * position.y) / (100 * pxRatio) - this.dimension.height / 2,\n        };\n        return parsePaths(this.paths, scale, this.offset);\n    }\n    async downloadSvgPath(svgUrl, force) {\n        const options = this.options;\n        const url = svgUrl || options.url;\n        const forceDownload = force !== null && force !== void 0 ? force : false;\n        if (!url || (this.paths !== undefined && !forceDownload)) {\n            return this.raw;\n        }\n        const req = await fetch(url);\n        if (!req.ok) {\n            throw new Error(\"tsParticles Error - Error occurred during polygon mask download\");\n        }\n        return this.parseSvgPath(await req.text(), force);\n    }\n    drawPoints() {\n        if (!this.raw) {\n            return;\n        }\n        for (const item of this.raw) {\n            this.container.particles.addParticle({\n                x: item.x,\n                y: item.y,\n            });\n        }\n    }\n    randomPoint() {\n        const container = this.container;\n        const options = this.options;\n        let position;\n        if (options.type === \"inline\") {\n            switch (options.inline.arrangement) {\n                case \"random-point\":\n                    position = this.getRandomPoint();\n                    break;\n                case \"random-length\":\n                    position = this.getRandomPointByLength();\n                    break;\n                case \"equidistant\":\n                    position = this.getEquidistantPointByIndex(container.particles.count);\n                    break;\n                case \"one-per-point\":\n                case \"per-point\":\n                default:\n                    position = this.getPointByIndex(container.particles.count);\n            }\n        }\n        else {\n            position = {\n                x: Math.random() * container.canvas.size.width,\n                y: Math.random() * container.canvas.size.height,\n            };\n        }\n        if (this.checkInsidePolygon(position)) {\n            return position;\n        }\n        else {\n            return this.randomPoint();\n        }\n    }\n    getRandomPoint() {\n        if (!this.raw || !this.raw.length) {\n            throw new Error(Constants.noPolygonDataLoaded);\n        }\n        const coords = itemFromArray(this.raw);\n        return {\n            x: coords.x,\n            y: coords.y,\n        };\n    }\n    getRandomPointByLength() {\n        var _a, _b, _c;\n        const options = this.options;\n        if (!this.raw || !this.raw.length || !((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length)) {\n            throw new Error(Constants.noPolygonDataLoaded);\n        }\n        const path = itemFromArray(this.paths);\n        const distance = Math.floor(Math.random() * path.length) + 1;\n        const point = path.element.getPointAtLength(distance);\n        return {\n            x: point.x * options.scale + (((_b = this.offset) === null || _b === void 0 ? void 0 : _b.x) || 0),\n            y: point.y * options.scale + (((_c = this.offset) === null || _c === void 0 ? void 0 : _c.y) || 0),\n        };\n    }\n    getEquidistantPointByIndex(index) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const options = this.container.actualOptions;\n        const polygonMaskOptions = this.options;\n        if (!this.raw || !this.raw.length || !((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length))\n            throw new Error(Constants.noPolygonDataLoaded);\n        let offset = 0;\n        let point;\n        const totalLength = this.paths.reduce((tot, path) => tot + path.length, 0);\n        const distance = totalLength / options.particles.number.value;\n        for (const path of this.paths) {\n            const pathDistance = distance * index - offset;\n            if (pathDistance <= path.length) {\n                point = path.element.getPointAtLength(pathDistance);\n                break;\n            }\n            else {\n                offset += path.length;\n            }\n        }\n        return {\n            x: ((_b = point === null || point === void 0 ? void 0 : point.x) !== null && _b !== void 0 ? _b : 0) * polygonMaskOptions.scale + ((_d = (_c = this.offset) === null || _c === void 0 ? void 0 : _c.x) !== null && _d !== void 0 ? _d : 0),\n            y: ((_e = point === null || point === void 0 ? void 0 : point.y) !== null && _e !== void 0 ? _e : 0) * polygonMaskOptions.scale + ((_g = (_f = this.offset) === null || _f === void 0 ? void 0 : _f.y) !== null && _g !== void 0 ? _g : 0),\n        };\n    }\n    getPointByIndex(index) {\n        if (!this.raw || !this.raw.length) {\n            throw new Error(Constants.noPolygonDataLoaded);\n        }\n        const coords = this.raw[index % this.raw.length];\n        return {\n            x: coords.x,\n            y: coords.y,\n        };\n    }\n    createPath2D() {\n        var _a, _b;\n        const options = this.options;\n        if (!this.path2DSupported || !((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length)) {\n            return;\n        }\n        for (const path of this.paths) {\n            const pathData = (_b = path.element) === null || _b === void 0 ? void 0 : _b.getAttribute(\"d\");\n            if (pathData) {\n                const path2d = new Path2D(pathData);\n                const matrix = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\").createSVGMatrix();\n                const finalPath = new Path2D();\n                const transform = matrix.scale(options.scale);\n                if (finalPath.addPath) {\n                    finalPath.addPath(path2d, transform);\n                    path.path2d = finalPath;\n                }\n                else {\n                    delete path.path2d;\n                }\n            }\n            else {\n                delete path.path2d;\n            }\n            if (path.path2d || !this.raw) {\n                continue;\n            }\n            path.path2d = new Path2D();\n            path.path2d.moveTo(this.raw[0].x, this.raw[0].y);\n            this.raw.forEach((pos, i) => {\n                var _a;\n                if (i > 0) {\n                    (_a = path.path2d) === null || _a === void 0 ? void 0 : _a.lineTo(pos.x, pos.y);\n                }\n            });\n            path.path2d.closePath();\n        }\n    }\n    async initRawData(force) {\n        const options = this.options;\n        if (options.url) {\n            this.raw = await this.downloadSvgPath(options.url, force);\n        }\n        else if (options.data) {\n            const data = options.data;\n            let svg;\n            if (typeof data !== \"string\") {\n                const path = data.path instanceof Array\n                    ? data.path.map((t) => `<path d=\"${t}\" />`).join(\"\")\n                    : `<path d=\"${data.path}\" />`;\n                const namespaces = 'xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n                svg = `<svg ${namespaces} width=\"${data.size.width}\" height=\"${data.size.height}\">${path}</svg>`;\n            }\n            else {\n                svg = data;\n            }\n            this.raw = this.parseSvgPath(svg, force);\n        }\n        this.createPath2D();\n    }\n}\n", "import { PolygonMask } from \"./Options/Classes/PolygonMask\";\nimport { PolygonMaskInstance } from \"./PolygonMaskInstance\";\nimport { isSsr } from \"../../Utils\";\nclass PolygonMaskPlugin {\n    constructor() {\n        this.id = \"polygonMask\";\n    }\n    getPlugin(container) {\n        return new PolygonMaskInstance(container);\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        return ((_b = (_a = options === null || options === void 0 ? void 0 : options.polygon) === null || _a === void 0 ? void 0 : _a.enable) !== null && _b !== void 0 ? _b : (((_c = options === null || options === void 0 ? void 0 : options.polygon) === null || _c === void 0 ? void 0 : _c.type) !== undefined && options.polygon.type !== \"none\"));\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(source)) {\n            return;\n        }\n        const optionsCast = options;\n        let polygonOptions = optionsCast.polygon;\n        if ((polygonOptions === null || polygonOptions === void 0 ? void 0 : polygonOptions.load) === undefined) {\n            optionsCast.polygon = polygonOptions = new PolygonMask();\n        }\n        polygonOptions.load(source === null || source === void 0 ? void 0 : source.polygon);\n    }\n}\nexport async function loadPolygonMaskPlugin(engine) {\n    if (!isSsr() && !(\"SVGPathSeg\" in window)) {\n        await import(\"./pathseg\");\n    }\n    const plugin = new PolygonMaskPlugin();\n    await engine.addPlugin(plugin);\n}\n", "import { colorToHsl, getRangeValue } from \"../../Utils\";\nfunction updateRoll(particle, delta) {\n    const roll = particle.options.roll;\n    if (!particle.roll || !roll.enable) {\n        return;\n    }\n    const speed = particle.roll.speed * delta.factor;\n    const max = 2 * Math.PI;\n    particle.roll.angle += speed;\n    if (particle.roll.angle > max) {\n        particle.roll.angle -= max;\n    }\n}\nexport class RollUpdater {\n    init(particle) {\n        const rollOpt = particle.options.roll;\n        if (rollOpt.enable) {\n            particle.roll = {\n                angle: Math.random() * Math.PI * 2,\n                speed: getRangeValue(rollOpt.speed) / 360,\n            };\n            if (rollOpt.backColor) {\n                particle.backColor = colorToHsl(rollOpt.backColor);\n            }\n            else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n                const alterType = Math.random() >= 0.5 ? \"darken\" : \"enlighten\";\n                particle.roll.alter = {\n                    type: alterType,\n                    value: alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value,\n                };\n            }\n            else if (rollOpt.darken.enable) {\n                particle.roll.alter = {\n                    type: \"darken\",\n                    value: rollOpt.darken.value,\n                };\n            }\n            else if (rollOpt.enlighten.enable) {\n                particle.roll.alter = {\n                    type: \"enlighten\",\n                    value: rollOpt.enlighten.value,\n                };\n            }\n        }\n        else {\n            particle.roll = { angle: 0, speed: 0 };\n        }\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && roll.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\n", "import { RollUpdater } from \"./RollUpdater\";\nexport async function loadRollUpdater(engine) {\n    await engine.addParticleUpdater(\"roll\", () => new RollUpdater());\n}\n", "import { getRangeValue } from \"../../Utils\";\nfunction updateAngle(particle, delta) {\n    var _a;\n    const rotate = particle.rotate;\n    if (!rotate) {\n        return;\n    }\n    const rotateOptions = particle.options.rotate;\n    const rotateAnimation = rotateOptions.animation;\n    const speed = ((_a = rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n    const max = 2 * Math.PI;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case 0:\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case 1:\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n}\nexport class AngleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(Math.random() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = 1;\n                break;\n            case \"clockwise\":\n                particle.rotate.status = 0;\n                break;\n        }\n        const rotateAnimation = particle.options.rotate.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.velocity = (rotateAnimation.speed / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= Math.random();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        const rotateAnimation = rotate.animation;\n        return !particle.destroyed && !particle.spawning && !rotate.path && rotateAnimation.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAngle(particle, delta);\n    }\n}\n", "import { AngleUpdater } from \"./AngleUpdater\";\nexport async function loadAngleUpdater(engine) {\n    await engine.addParticleUpdater(\"angle\", (container) => new AngleUpdater(container));\n}\n", "export class CircleDrawer {\n    getSidesCount() {\n        return 12;\n    }\n    draw(context, particle, radius) {\n        context.arc(0, 0, radius, 0, Math.PI * 2, false);\n    }\n}\n", "import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine) {\n    await engine.addShape(\"circle\", new CircleDrawer());\n}\n", "import { colorToHsl, getHslAnimationFromHsl, randomInRange } from \"../../Utils\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a;\n    const colorValue = value;\n    if (!colorValue || !valueAnimation.enable) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset);\n    const velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6;\n    if (!decrease || colorValue.status === 0) {\n        colorValue.value += velocity;\n        if (decrease && colorValue.value > max) {\n            colorValue.status = 1;\n            colorValue.value -= colorValue.value % max;\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            colorValue.status = 0;\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateColor(particle, delta) {\n    var _a, _b, _c;\n    const animationOptions = particle.options.color.animation;\n    if (((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h) !== undefined) {\n        updateColorValue(delta, particle.color.h, animationOptions.h, 360, false);\n    }\n    if (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s) !== undefined) {\n        updateColorValue(delta, particle.color.s, animationOptions.s, 100, true);\n    }\n    if (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l) !== undefined) {\n        updateColorValue(delta, particle.color.l, animationOptions.l, 100, true);\n    }\n}\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = colorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c;\n        const animationOptions = particle.options.color.animation;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && animationOptions.h.enable) ||\n                (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && animationOptions.s.enable) ||\n                (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && animationOptions.l.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n", "import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container));\n}\n", "import { Circle, Constants, ExternalInteractorBase, Vector } from \"../../../Core\";\nimport { calcEasing, clamp, getDistances, isInArray } from \"../../../Utils\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = options.interactivity.events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    reset() {\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === Constants.mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this.clickAttract();\n        }\n    }\n    hoverAttract() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const attractRadius = container.retina.attractModeDistance;\n        this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container;\n        const attractOptions = container.actualOptions.interactivity.modes.attract;\n        const query = container.particles.quadTree.query(area);\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position);\n            const velocity = attractOptions.speed * attractOptions.factor;\n            const attractFactor = clamp(calcEasing(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n            const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n            particle.position.subFrom(normVec);\n        }\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition;\n            if (!mousePos) {\n                return;\n            }\n            const attractRadius = container.retina.attractModeDistance;\n            this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n}\n", "import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(container));\n}\n", "import { Circle, Constants, ExternalInteractorBase, Rectangle, Vector } from \"../../../Core\";\nimport { calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, rectBounce, } from \"../../../Utils\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = options.interactivity.events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === Constants.mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this.processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this.singleSelectorBounce(selector, div));\n        }\n    }\n    reset() {\n    }\n    processMouseBounce() {\n        const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n        if (mousePos) {\n            this.processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n        }\n    }\n    singleSelectorBounce(selector, div) {\n        const container = this.container;\n        const query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio;\n            const area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, radius + tolerance)\n                : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n            this.processBounce(pos, radius, area);\n        });\n    }\n    processBounce(position, radius, area) {\n        const query = this.container.particles.quadTree.query(area);\n        for (const particle of query) {\n            if (area instanceof Circle) {\n                circleBounce(circleBounceDataFromParticle(particle), {\n                    position,\n                    radius,\n                    mass: (radius ** 2 * Math.PI) / 2,\n                    velocity: Vector.origin,\n                    factor: Vector.origin,\n                });\n            }\n            else if (area instanceof Rectangle) {\n                rectBounce(particle, calculateBounds(position, radius));\n            }\n        }\n    }\n}\n", "import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container));\n}\n", "import { Circle, Constants, ExternalInteractorBase, Rectangle } from \"../../../Core\";\nimport { clamp, colorMix, colorToHsl, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromArray, rgbToHsl, } from \"../../../Utils\";\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = options.interactivity.events, divs = events.onDiv, divBubble = isDivModeEnabled(\"bubble\", divs);\n        if (!(divBubble || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return isInArray(\"bubble\", hoverMode) || isInArray(\"bubble\", clickMode) || divBubble;\n    }\n    reset(particle, force) {\n        if (!(!particle.bubble.inRange || force)) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    async interact() {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this.hoverBubble();\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this.clickBubble();\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this.singleSelectorHover(selector, div));\n        }\n    }\n    singleSelectorHover(selector, div) {\n        const container = this.container, selectors = document.querySelectorAll(selector);\n        if (!selectors.length) {\n            return;\n        }\n        selectors.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area);\n            for (const particle of query) {\n                if (!area.contains(particle.getPosition())) {\n                    continue;\n                }\n                particle.bubble.inRange = true;\n                const divs = container.actualOptions.interactivity.modes.bubble.divs;\n                const divBubble = divMode(divs, elem);\n                if (!particle.bubble.div || particle.bubble.div !== elem) {\n                    this.reset(particle, true);\n                    particle.bubble.div = elem;\n                }\n                this.hoverBubbleSize(particle, 1, divBubble);\n                this.hoverBubbleOpacity(particle, 1, divBubble);\n                this.hoverBubbleColor(particle, 1, divBubble);\n            }\n        });\n    }\n    process(particle, distMouse, timeSpent, data) {\n        const container = this.container, bubbleParam = data.bubbleObj.optValue;\n        if (bubbleParam === undefined) {\n            return;\n        }\n        const options = container.actualOptions, bubbleDuration = options.interactivity.modes.bubble.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n        if (bubbleParam === particlesParam) {\n            return;\n        }\n        if (!container.bubble.durationEnd) {\n            if (distMouse <= bubbleDistance) {\n                const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                if (obj !== bubbleParam) {\n                    const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                    if (type === \"size\") {\n                        particle.bubble.radius = value;\n                    }\n                    if (type === \"opacity\") {\n                        particle.bubble.opacity = value;\n                    }\n                }\n            }\n            else {\n                if (type === \"size\") {\n                    delete particle.bubble.radius;\n                }\n                if (type === \"opacity\") {\n                    delete particle.bubble.opacity;\n                }\n            }\n        }\n        else if (pObjBubble) {\n            if (type === \"size\") {\n                delete particle.bubble.radius;\n            }\n            if (type === \"opacity\") {\n                delete particle.bubble.opacity;\n            }\n        }\n    }\n    clickBubble() {\n        var _a, _b;\n        const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition;\n        if (!mouseClickPos) {\n            return;\n        }\n        const distance = container.retina.bubbleModeDistance, query = container.particles.quadTree.queryCircle(mouseClickPos, distance);\n        for (const particle of query) {\n            if (!container.bubble.clicking) {\n                continue;\n            }\n            particle.bubble.inRange = !container.bubble.durationEnd;\n            const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n            if (timeSpent > options.interactivity.modes.bubble.duration) {\n                container.bubble.durationEnd = true;\n            }\n            if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n                container.bubble.clicking = false;\n                container.bubble.durationEnd = false;\n            }\n            const sizeData = {\n                bubbleObj: {\n                    optValue: container.retina.bubbleModeSize,\n                    value: particle.bubble.radius,\n                },\n                particlesObj: {\n                    optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                    value: particle.size.value,\n                },\n                type: \"size\",\n            };\n            this.process(particle, distMouse, timeSpent, sizeData);\n            const opacityData = {\n                bubbleObj: {\n                    optValue: options.interactivity.modes.bubble.opacity,\n                    value: particle.bubble.opacity,\n                },\n                particlesObj: {\n                    optValue: getRangeMax(particle.options.opacity.value),\n                    value: (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1,\n                },\n                type: \"opacity\",\n            };\n            this.process(particle, distMouse, timeSpent, opacityData);\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= container.retina.bubbleModeDistance) {\n                    this.hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n            else {\n                delete particle.bubble.color;\n            }\n        }\n    }\n    hoverBubble() {\n        const container = this.container, mousePos = container.interactivity.mouse.position;\n        if (mousePos === undefined) {\n            return;\n        }\n        const distance = container.retina.bubbleModeDistance, query = container.particles.quadTree.queryCircle(mousePos, distance);\n        for (const particle of query) {\n            particle.bubble.inRange = true;\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n            if (pointDistance <= distance) {\n                if (ratio >= 0 && container.interactivity.status === Constants.mouseMoveEvent) {\n                    this.hoverBubbleSize(particle, ratio);\n                    this.hoverBubbleOpacity(particle, ratio);\n                    this.hoverBubbleColor(particle, ratio);\n                }\n            }\n            else {\n                this.reset(particle);\n            }\n            if (container.interactivity.status === Constants.mouseLeaveEvent) {\n                this.reset(particle);\n            }\n        }\n    }\n    hoverBubbleSize(particle, ratio, divBubble) {\n        const container = this.container, modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n        if (modeSize === undefined) {\n            return;\n        }\n        const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n        const pSize = particle.size.value;\n        const size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n        if (size !== undefined) {\n            particle.bubble.radius = size;\n        }\n    }\n    hoverBubbleOpacity(particle, ratio, divBubble) {\n        var _a, _b, _c;\n        const container = this.container, options = container.actualOptions, modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.opacity;\n        if (!modeOpacity) {\n            return;\n        }\n        const optOpacity = particle.options.opacity.value;\n        const pOpacity = (_c = (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1;\n        const opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n        if (opacity !== undefined) {\n            particle.bubble.opacity = opacity;\n        }\n    }\n    hoverBubbleColor(particle, ratio, divBubble) {\n        const options = this.container.actualOptions;\n        const bubbleOptions = divBubble !== null && divBubble !== void 0 ? divBubble : options.interactivity.modes.bubble;\n        if (!particle.bubble.finalColor) {\n            const modeColor = bubbleOptions.color;\n            if (!modeColor) {\n                return;\n            }\n            const bubbleColor = modeColor instanceof Array ? itemFromArray(modeColor) : modeColor;\n            particle.bubble.finalColor = colorToHsl(bubbleColor);\n        }\n        if (!particle.bubble.finalColor) {\n            return;\n        }\n        if (bubbleOptions.mix) {\n            particle.bubble.color = undefined;\n            const pColor = particle.getFillColor();\n            particle.bubble.color = pColor\n                ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                : particle.bubble.finalColor;\n        }\n        else {\n            particle.bubble.color = particle.bubble.finalColor;\n        }\n    }\n}\n", "import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container));\n}\n", "import { ExternalInteractorBase } from \"../../../Core\";\nimport { isInArray } from \"../../../Utils\";\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        const container = this.container, mouse = container.interactivity.mouse, events = container.actualOptions.interactivity.events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    reset() {\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"mousemove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance);\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        container.canvas.drawConnectLine(p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n}\n", "import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container));\n}\n", "import { Constants, ExternalInteractorBase } from \"../../../Core\";\nimport { getDistance, getLinkColor, getLinkRandomColor, isInArray } from \"../../../Utils\";\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        const container = this.container, mouse = container.interactivity.mouse, events = container.actualOptions.interactivity.events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    reset() {\n    }\n    async interact() {\n        var _a;\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (interactivity.events.onHover.enable && container.interactivity.status === Constants.mouseMoveEvent) {\n            const mousePos = container.interactivity.mouse.position;\n            if (!mousePos) {\n                return;\n            }\n            const distance = container.retina.grabModeDistance, query = container.particles.quadTree.queryCircle(mousePos, distance);\n            for (const particle of query) {\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n                if (pointDistance <= distance) {\n                    const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n                    if (opacityLine <= 0) {\n                        continue;\n                    }\n                    const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : particle.options.links.color;\n                    if (!container.particles.grabLineColor) {\n                        const linksOptions = options.interactivity.modes.grab.links;\n                        container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n                    }\n                    const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n                    if (!colorLine) {\n                        return;\n                    }\n                    container.canvas.drawGrabLine(particle, colorLine, opacityLine, mousePos);\n                }\n            }\n        }\n    }\n}\n", "import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container));\n}\n", "import { Circle, Constants, ExternalInteractorBase, Rectangle, Vector } from \"../../../Core\";\nimport { calcEasing, clamp, divMode, divModeExecute, getDistances, isDivModeEnabled, isInArray } from \"../../../Utils\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = options.interactivity.events, divs = events.onDiv, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    reset() {\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === Constants.mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this.hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this.clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n        }\n    }\n    singleSelectorRepulse(selector, div) {\n        const container = this.container, query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = container.actualOptions.interactivity.modes.repulse.divs, divRepulse = divMode(divs, elem);\n            this.processRepulse(pos, repulseRadius, area, divRepulse);\n        });\n    }\n    hoverRepulse() {\n        const container = this.container, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const repulseRadius = container.retina.repulseModeDistance;\n        this.processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n    processRepulse(position, repulseRadius, area, divRepulse) {\n        var _a;\n        const container = this.container, query = container.particles.quadTree.query(area), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position), velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(calcEasing(1 - distance / repulseRadius, repulseOptions.easing) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n            particle.position.addTo(normVec);\n        }\n    }\n    clickRepulse() {\n        const container = this.container;\n        if (!container.repulse.finish) {\n            if (!container.repulse.count) {\n                container.repulse.count = 0;\n            }\n            container.repulse.count++;\n            if (container.repulse.count === container.particles.count) {\n                container.repulse.finish = true;\n            }\n        }\n        if (container.repulse.clicking) {\n            const repulseDistance = container.retina.repulseModeDistance, repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n            if (mouseClickPos === undefined) {\n                return;\n            }\n            const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range);\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = container.actualOptions.interactivity.modes.repulse.speed, force = (-repulseRadius * velocity) / d;\n                if (d <= repulseRadius) {\n                    container.repulse.particles.push(particle);\n                    const vect = Vector.create(dx, dy);\n                    vect.length = force;\n                    particle.velocity.setTo(vect);\n                }\n            }\n        }\n        else if (container.repulse.clicking === false) {\n            for (const particle of container.repulse.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n        }\n    }\n}\n", "import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(container));\n}\n", "import { getStyleFromHsl } from \"../../Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        img.addEventListener(\"load\", () => {\n            image.element = img;\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.error = true;\n            image.loading = false;\n            console.error(`Error tsParticles - loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    image.loading = false;\n    if (!response.ok) {\n        console.error(\"Error tsParticles - Image not found\");\n        image.error = true;\n    }\n    if (!image.error) {\n        image.svgData = await response.text();\n    }\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    var _a, _b, _c;\n    const svgColoredData = replaceColorSvg(image, color, (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1);\n    const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" });\n    const domUrl = URL || window.URL || window.webkitURL || window;\n    const url = domUrl.createObjectURL(svg);\n    const img = new Image();\n    const imageRes = {\n        data: Object.assign(Object.assign({}, image), { svgData: svgColoredData }),\n        ratio: imageData.width / imageData.height,\n        replaceColor: (_c = imageData.replaceColor) !== null && _c !== void 0 ? _c : imageData.replace_color,\n        source: imageData.src,\n    };\n    img.addEventListener(\"load\", () => {\n        const pImage = particle.image;\n        if (pImage) {\n            pImage.loaded = true;\n            image.element = img;\n        }\n        domUrl.revokeObjectURL(url);\n    });\n    img.addEventListener(\"error\", () => {\n        domUrl.revokeObjectURL(url);\n        const img2 = Object.assign(Object.assign({}, image), { error: false, loading: true });\n        loadImage(img2).then(() => {\n            const pImage = particle.image;\n            if (pImage) {\n                image.element = img2.element;\n                pImage.loaded = true;\n            }\n        });\n    });\n    img.src = url;\n    return imageRes;\n}\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ImageDrawer_images;\nimport { downloadSvgImage, loadImage, replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor() {\n        _ImageDrawer_images.set(this, void 0);\n        __classPrivateFieldSet(this, _ImageDrawer_images, [], \"f\");\n    }\n    getSidesCount() {\n        return 12;\n    }\n    getImages(container) {\n        const containerImages = __classPrivateFieldGet(this, _ImageDrawer_images, \"f\").find((t) => t.id === container.id);\n        if (!containerImages) {\n            __classPrivateFieldGet(this, _ImageDrawer_images, \"f\").push({\n                id: container.id,\n                images: [],\n            });\n            return this.getImages(container);\n        }\n        else {\n            return containerImages;\n        }\n    }\n    addImage(container, image) {\n        const containerImages = this.getImages(container);\n        containerImages === null || containerImages === void 0 ? void 0 : containerImages.images.push(image);\n    }\n    destroy() {\n        __classPrivateFieldSet(this, _ImageDrawer_images, [], \"f\");\n    }\n    async loadImageShape(container, imageShape) {\n        const source = imageShape.src;\n        if (!source) {\n            throw new Error(\"Error tsParticles - No image.src\");\n        }\n        try {\n            const image = {\n                source: source,\n                type: source.substr(source.length - 3),\n                error: false,\n                loading: true,\n            };\n            this.addImage(container, image);\n            const imageFunc = imageShape.replaceColor ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch (_a) {\n            throw new Error(`tsParticles error - ${imageShape.src} not found`);\n        }\n    }\n    draw(context, particle, radius, opacity) {\n        var _a, _b;\n        const image = particle.image;\n        const element = (_a = image === null || image === void 0 ? void 0 : image.data) === null || _a === void 0 ? void 0 : _a.element;\n        if (!element) {\n            return;\n        }\n        const ratio = (_b = image === null || image === void 0 ? void 0 : image.ratio) !== null && _b !== void 0 ? _b : 1;\n        const pos = {\n            x: -radius,\n            y: -radius,\n        };\n        if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\n            context.globalAlpha = opacity;\n        }\n        context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\n            context.globalAlpha = 1;\n        }\n    }\n    loadShape(particle) {\n        var _a, _b, _c;\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        const images = this.getImages(particle.container).images;\n        const imageData = particle.shapeData;\n        const image = images.find((t) => t.source === imageData.src);\n        let imageRes;\n        if (!image) {\n            this.loadImageShape(particle.container, imageData).then(() => {\n                this.loadShape(particle);\n            });\n            return;\n        }\n        if (image.error) {\n            return;\n        }\n        const color = particle.getFillColor();\n        if (image.svgData && imageData.replaceColor && color) {\n            imageRes = replaceImageColor(image, imageData, color, particle);\n        }\n        else {\n            imageRes = {\n                data: image,\n                loaded: true,\n                ratio: imageData.width / imageData.height,\n                replaceColor: (_a = imageData.replaceColor) !== null && _a !== void 0 ? _a : imageData.replace_color,\n                source: imageData.src,\n            };\n        }\n        if (!imageRes.ratio) {\n            imageRes.ratio = 1;\n        }\n        const fill = (_b = imageData.fill) !== null && _b !== void 0 ? _b : particle.fill;\n        const close = (_c = imageData.close) !== null && _c !== void 0 ? _c : particle.close;\n        const imageShape = {\n            image: imageRes,\n            fill,\n            close,\n        };\n        particle.image = imageShape.image;\n        particle.fill = imageShape.fill;\n        particle.close = imageShape.close;\n    }\n}\n_ImageDrawer_images = new WeakMap();\n", "import { ImageDrawer } from \"./ImageDrawer\";\nexport async function loadImageShape(engine) {\n    const imageDrawer = new ImageDrawer();\n    await engine.addShape(\"image\", imageDrawer);\n    await engine.addShape(\"images\", imageDrawer);\n}\n", "import { getRangeValue, randomInRange, setRangeValue } from \"../../Utils\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n        life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n    }\n}\n", "import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container));\n}\n", "export class LineDrawer {\n    getSidesCount() {\n        return 1;\n    }\n    draw(context, particle, radius) {\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n    }\n}\n", "import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine) {\n    await engine.addShape(\"line\", new LineDrawer());\n}\n", "import { clamp, getRangeMax, getRangeMin, getRangeValue, randomInRange } from \"../../Utils\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateOpacity(particle, delta) {\n    var _a, _b, _c, _d, _e;\n    if (!particle.opacity) {\n        return;\n    }\n    const minValue = particle.opacity.min;\n    const maxValue = particle.opacity.max;\n    if (particle.destroyed ||\n        !particle.opacity.enable ||\n        (((_a = particle.opacity.maxLoops) !== null && _a !== void 0 ? _a : 0) > 0 && ((_b = particle.opacity.loops) !== null && _b !== void 0 ? _b : 0) > ((_c = particle.opacity.maxLoops) !== null && _c !== void 0 ? _c : 0))) {\n        return;\n    }\n    switch (particle.opacity.status) {\n        case 0:\n            if (particle.opacity.value >= maxValue) {\n                particle.opacity.status = 1;\n                if (!particle.opacity.loops) {\n                    particle.opacity.loops = 0;\n                }\n                particle.opacity.loops++;\n            }\n            else {\n                particle.opacity.value += ((_d = particle.opacity.velocity) !== null && _d !== void 0 ? _d : 0) * delta.factor;\n            }\n            break;\n        case 1:\n            if (particle.opacity.value <= minValue) {\n                particle.opacity.status = 0;\n                if (!particle.opacity.loops) {\n                    particle.opacity.loops = 0;\n                }\n                particle.opacity.loops++;\n            }\n            else {\n                particle.opacity.value -= ((_e = particle.opacity.velocity) !== null && _e !== void 0 ? _e : 0) * delta.factor;\n            }\n            break;\n    }\n    checkDestroy(particle, particle.opacity.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.opacity.value = clamp(particle.opacity.value, minValue, maxValue);\n    }\n}\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = {\n            enable: opacityOptions.animation.enable,\n            max: getRangeMax(opacityOptions.value),\n            min: getRangeMin(opacityOptions.value),\n            value: getRangeValue(opacityOptions.value),\n            loops: 0,\n            maxLoops: opacityOptions.animation.count,\n        };\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.status = 0;\n            const opacityRange = opacityOptions.value;\n            particle.opacity.min = getRangeMin(opacityRange);\n            particle.opacity.max = getRangeMax(opacityRange);\n            switch (opacityAnimation.startValue) {\n                case \"min\":\n                    particle.opacity.value = particle.opacity.min;\n                    particle.opacity.status = 0;\n                    break;\n                case \"random\":\n                    particle.opacity.value = randomInRange(particle.opacity);\n                    particle.opacity.status =\n                        Math.random() >= 0.5 ? 0 : 1;\n                    break;\n                case \"max\":\n                default:\n                    particle.opacity.value = particle.opacity.max;\n                    particle.opacity.status = 1;\n                    break;\n            }\n            particle.opacity.velocity = (opacityAnimation.speed / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= Math.random();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            (((_a = particle.opacity.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 ||\n                (((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 &&\n                    ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0))));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n", "import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container));\n}\n", "import { getRangeValue } from \"../../Utils\";\nexport function bounceHorizontal(data) {\n    if (!(data.outMode === \"bounce\" ||\n        data.outMode === \"bounce-horizontal\" ||\n        data.outMode === \"bounceHorizontal\" ||\n        data.outMode === \"split\")) {\n        return;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.horizontal.value);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width) {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0) {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if (data.outMode === \"bounce\" ||\n        data.outMode === \"bounce-vertical\" ||\n        data.outMode === \"bounceVertical\" ||\n        data.outMode === \"split\") {\n        const velocity = data.particle.velocity.y;\n        let bounced = false;\n        if ((data.direction === \"bottom\" &&\n            data.bounds.bottom >= data.canvasSize.height &&\n            velocity > 0) ||\n            (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n            const newVelocity = getRangeValue(data.particle.options.bounce.vertical.value);\n            data.particle.velocity.y *= -newVelocity;\n            bounced = true;\n        }\n        if (!bounced) {\n            return;\n        }\n        const minPos = data.offset.y + data.size;\n        if (data.bounds.bottom >= data.canvasSize.height) {\n            data.particle.position.y = data.canvasSize.height - minPos;\n        }\n        else if (data.bounds.top <= 0) {\n            data.particle.position.y = minPos;\n        }\n        if (data.outMode === \"split\") {\n            data.particle.destroy();\n        }\n    }\n}\n", "import { bounceHorizontal, bounceVertical } from \"./Utils\";\nimport { calculateBounds, isPointInside } from \"../../Utils\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        var _a, _b, _c, _d;\n        const outModes = particle.options.move.outModes;\n        this.updateOutMode(particle, delta, (_a = outModes.bottom) !== null && _a !== void 0 ? _a : outModes.default, \"bottom\");\n        this.updateOutMode(particle, delta, (_b = outModes.left) !== null && _b !== void 0 ? _b : outModes.default, \"left\");\n        this.updateOutMode(particle, delta, (_c = outModes.right) !== null && _c !== void 0 ? _c : outModes.default, \"right\");\n        this.updateOutMode(particle, delta, (_d = outModes.top) !== null && _d !== void 0 ? _d : outModes.default, \"top\");\n    }\n    updateOutMode(particle, delta, outMode, direction) {\n        switch (outMode) {\n            case \"bounce\":\n            case \"bounce-vertical\":\n            case \"bounce-horizontal\":\n            case \"bounceVertical\":\n            case \"bounceHorizontal\":\n            case \"split\":\n                this.bounce(particle, delta, direction, outMode);\n                break;\n            case \"destroy\":\n                this.destroy(particle, direction);\n                break;\n            case \"out\":\n                this.out(particle, direction);\n                break;\n            case \"none\":\n            default:\n                this.none(particle, direction);\n                break;\n        }\n    }\n    destroy(particle, direction) {\n        const container = this.container;\n        if (isPointInside(particle.position, container.canvas.size, particle.getRadius(), direction)) {\n            return;\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n    out(particle, direction) {\n        const container = this.container;\n        if (isPointInside(particle.position, container.canvas.size, particle.getRadius(), direction)) {\n            return;\n        }\n        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n            left: -particle.getRadius() - particle.offset.x,\n            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n            top: -particle.getRadius() - particle.offset.y,\n        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n        if (direction === \"right\" && nextBounds.left > canvasSize.width + particle.offset.x) {\n            particle.position.x = newPos.left;\n            particle.initialPosition.x = particle.position.x;\n            if (!wrap) {\n                particle.position.y = Math.random() * canvasSize.height;\n                particle.initialPosition.y = particle.position.y;\n            }\n        }\n        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n            particle.position.x = newPos.right;\n            particle.initialPosition.x = particle.position.x;\n            if (!wrap) {\n                particle.position.y = Math.random() * canvasSize.height;\n                particle.initialPosition.y = particle.position.y;\n            }\n        }\n        if (direction === \"bottom\" && nextBounds.top > canvasSize.height + particle.offset.y) {\n            if (!wrap) {\n                particle.position.x = Math.random() * canvasSize.width;\n                particle.initialPosition.x = particle.position.x;\n            }\n            particle.position.y = newPos.top;\n            particle.initialPosition.y = particle.position.y;\n        }\n        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n            if (!wrap) {\n                particle.position.x = Math.random() * canvasSize.width;\n                particle.initialPosition.x = particle.position.x;\n            }\n            particle.position.y = newPos.bottom;\n            particle.initialPosition.y = particle.position.y;\n        }\n    }\n    bounce(particle, delta, direction, outMode) {\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n    none(particle, direction) {\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n", "import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container));\n}\n", "import { ParticlesInteractorBase } from \"../../../Core\";\nimport { getDistances } from \"../../../Utils\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    async interact(p1) {\n        var _a;\n        const container = this.container, distance = (_a = p1.retina.attractDistance) !== null && _a !== void 0 ? _a : container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n", "import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container));\n}\n", "import { circleBounce, circleBounceDataFromParticle, clamp, getDistance } from \"../../../Utils\";\nimport { ParticlesInteractorBase } from \"../../../Core\";\nfunction bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n}\nfunction destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        if (p1.getRadius() >= p2.getRadius()) {\n            p2.destroy();\n        }\n        else {\n            p1.destroy();\n        }\n    }\n}\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n    async interact(p1) {\n        const container = this.container;\n        const pos1 = p1.getPosition();\n        const radius1 = p1.getRadius();\n        const query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (Math.round(pos1.z) !== Math.round(pos2.z)) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2);\n            const radius2 = p2.getRadius();\n            const distP = radius1 + radius2;\n            if (dist <= distP) {\n                this.resolveCollision(p1, p2);\n            }\n        }\n    }\n    resolveCollision(p1, p2) {\n        switch (p1.options.collisions.mode) {\n            case \"absorb\": {\n                this.absorb(p1, p2);\n                break;\n            }\n            case \"bounce\": {\n                bounce(p1, p2);\n                break;\n            }\n            case \"destroy\": {\n                destroy(p1, p2);\n                break;\n            }\n        }\n    }\n    absorb(p1, p2) {\n        const container = this.container;\n        const fps = container.fpsLimit / 1000;\n        if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n            p1.destroy();\n        }\n        else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n            p2.destroy();\n        }\n        else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n            if (p1.getRadius() >= p2.getRadius()) {\n                const factor = clamp(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\n                p1.size.value += factor;\n                p2.size.value -= factor;\n                if (p2.getRadius() <= container.retina.pixelRatio) {\n                    p2.size.value = 0;\n                    p2.destroy();\n                }\n            }\n            else {\n                const factor = clamp(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\n                p1.size.value -= factor;\n                p2.size.value += factor;\n                if (p1.getRadius() <= container.retina.pixelRatio) {\n                    p1.size.value = 0;\n                    p1.destroy();\n                }\n            }\n        }\n    }\n}\n", "import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container));\n}\n", "import { Circle, CircleWarp, ParticlesInteractorBase } from \"../../../Core\";\nimport { getDistance, getLinkRandomColor } from \"../../../Utils\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    let distance = getDistance(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const pos2NE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y,\n    };\n    distance = getDistance(pos1, pos2NE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = getDistance(pos1, pos2SE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SW = {\n        x: pos2.x,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = getDistance(pos1, pos2SW);\n    return distance;\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled(particle) {\n        return particle.options.links.enable;\n    }\n    reset() {\n    }\n    async interact(p1) {\n        var _a;\n        p1.links = [];\n        const pos1 = p1.getPosition();\n        const container = this.container;\n        const canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links;\n        const optOpacity = linkOpt1.opacity;\n        const optDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n        const warp = linkOpt1.warp;\n        const range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance);\n        const query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                p1.links.map((t) => t.destination).indexOf(p2) !== -1 ||\n                p2.links.map((t) => t.destination).indexOf(p1) !== -1) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                return;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this.setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    setColor(p1) {\n        const container = this.container;\n        const linksOptions = p1.options.links;\n        let linkColor = linksOptions.id === undefined\n            ? container.particles.linksColor\n            : container.particles.linksColors.get(linksOptions.id);\n        if (!linkColor) {\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        }\n    }\n}\n", "import { Linker } from \"./Linker\";\nexport async function loadInteraction(engine) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container));\n}\n", "import { colorToRgb, drawLinkLine, drawLinkTriangle, getDistance, getLinkColor } from \"../../../Utils\";\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n    }\n    particleCreated(particle) {\n        const linkParticle = particle;\n        linkParticle.links = [];\n    }\n    particleDestroyed(particle) {\n        const linkParticle = particle;\n        linkParticle.links = [];\n    }\n    drawParticle(context, particle) {\n        const linkParticle = particle;\n        const container = this.container;\n        const particles = container.particles;\n        const pOptions = particle.options;\n        if (linkParticle.links.length > 0) {\n            context.save();\n            const p1Links = linkParticle.links.filter((l) => {\n                const linkFreq = container.particles.getLinkFrequency(linkParticle, l.destination);\n                return linkFreq <= pOptions.links.frequency;\n            });\n            for (const link of p1Links) {\n                const p2 = link.destination;\n                if (pOptions.links.triangles.enable) {\n                    const links = p1Links.map((l) => l.destination);\n                    const vertices = p2.links.filter((t) => {\n                        const linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n                        return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n                    });\n                    if (vertices.length) {\n                        for (const vertex of vertices) {\n                            const p3 = vertex.destination;\n                            const triangleFreq = particles.getTriangleFrequency(linkParticle, p2, p3);\n                            if (triangleFreq > pOptions.links.triangles.frequency) {\n                                continue;\n                            }\n                            this.drawLinkTriangle(linkParticle, link, vertex);\n                        }\n                    }\n                }\n                if (link.opacity > 0 && container.retina.linksWidth > 0) {\n                    this.drawLinkLine(linkParticle, link);\n                }\n            }\n            context.restore();\n        }\n    }\n    drawLinkTriangle(p1, link1, link2) {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        const p2 = link1.destination;\n        const p3 = link2.destination;\n        const triangleOptions = p1.options.links.triangles;\n        const opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        if (opacityTriangle <= 0) {\n            return;\n        }\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        const pos3 = p3.getPosition();\n        container.canvas.draw((ctx) => {\n            if (getDistance(pos1, pos2) > container.retina.linksDistance ||\n                getDistance(pos3, pos2) > container.retina.linksDistance ||\n                getDistance(pos3, pos1) > container.retina.linksDistance) {\n                return;\n            }\n            let colorTriangle = colorToRgb(triangleOptions.color);\n            if (!colorTriangle) {\n                const linksOptions = p1.options.links;\n                const linkColor = linksOptions.id !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorTriangle = getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorTriangle) {\n                return;\n            }\n            drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n        });\n    }\n    drawLinkLine(p1, link) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const p2 = link.destination;\n        let opacity = link.opacity;\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        container.canvas.draw((ctx) => {\n            var _a, _b;\n            let colorLine;\n            const twinkle = p1.options.twinkle.lines;\n            if (twinkle.enable) {\n                const twinkleFreq = twinkle.frequency;\n                const twinkleRgb = colorToRgb(twinkle.color);\n                const twinkling = Math.random() < twinkleFreq;\n                if (twinkling && twinkleRgb !== undefined) {\n                    colorLine = twinkleRgb;\n                    opacity = twinkle.opacity;\n                }\n            }\n            if (!colorLine) {\n                const linksOptions = p1.options.links;\n                const linkColor = linksOptions.id !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorLine = getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorLine) {\n                return;\n            }\n            const width = (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n            const maxDistance = (_b = p1.retina.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n            drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n        });\n    }\n}\n", "import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    needsPlugin() {\n        return true;\n    }\n    loadOptions() {\n    }\n}\nexport async function loadPlugin(engine) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin);\n}\n", "import { loadInteraction } from \"./interaction\";\nimport { loadPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine) {\n    await loadInteraction(engine);\n    await loadPlugin(engine);\n}\n", "export class PolygonDrawerBase {\n    getSidesCount(particle) {\n        var _a, _b;\n        const polygon = particle.shapeData;\n        return (_b = (_a = polygon === null || polygon === void 0 ? void 0 : polygon.sides) !== null && _a !== void 0 ? _a : polygon === null || polygon === void 0 ? void 0 : polygon.nb_sides) !== null && _b !== void 0 ? _b : 5;\n    }\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius);\n        const side = this.getSidesData(particle, radius);\n        const sideCount = side.count.numerator * side.count.denominator;\n        const decimalSides = side.count.numerator / side.count.denominator;\n        const interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides;\n        const interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n}\n", "import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getSidesData(particle, radius) {\n        var _a, _b;\n        const polygon = particle.shapeData;\n        const sides = (_b = (_a = polygon === null || polygon === void 0 ? void 0 : polygon.sides) !== null && _a !== void 0 ? _a : polygon === null || polygon === void 0 ? void 0 : polygon.nb_sides) !== null && _b !== void 0 ? _b : 5;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n    getCenter(particle, radius) {\n        const sides = this.getSidesCount(particle);\n        return {\n            x: -radius / (sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n}\n", "import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n}\n", "import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine) {\n    await engine.addShape(\"polygon\", new PolygonDrawer());\n}\nexport async function loadTriangleShape(engine) {\n    await engine.addShape(\"triangle\", new TriangleDrawer());\n}\nexport async function loadPolygonShape(engine) {\n    await loadGenericPolygonShape(engine);\n    await loadTriangleShape(engine);\n}\n", "import { clamp } from \"../../Utils\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateSize(particle, delta) {\n    var _a, _b, _c, _d;\n    const sizeVelocity = ((_a = particle.size.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n    const minValue = particle.size.min;\n    const maxValue = particle.size.max;\n    if (particle.destroyed ||\n        !particle.size.enable ||\n        (((_b = particle.size.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.size.loops) !== null && _c !== void 0 ? _c : 0) > ((_d = particle.size.maxLoops) !== null && _d !== void 0 ? _d : 0))) {\n        return;\n    }\n    switch (particle.size.status) {\n        case 0:\n            if (particle.size.value >= maxValue) {\n                particle.size.status = 1;\n                if (!particle.size.loops) {\n                    particle.size.loops = 0;\n                }\n                particle.size.loops++;\n            }\n            else {\n                particle.size.value += sizeVelocity;\n            }\n            break;\n        case 1:\n            if (particle.size.value <= minValue) {\n                particle.size.status = 0;\n                if (!particle.size.loops) {\n                    particle.size.loops = 0;\n                }\n                particle.size.loops++;\n            }\n            else {\n                particle.size.value -= sizeVelocity;\n            }\n    }\n    checkDestroy(particle, particle.size.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.size.value = clamp(particle.size.value, minValue, maxValue);\n    }\n}\nexport class SizeUpdater {\n    init() {\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            (((_a = particle.size.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 ||\n                (((_b = particle.size.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.size.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.size.maxLoops) !== null && _d !== void 0 ? _d : 0))));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n", "import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater());\n}\n", "const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    getSidesCount() {\n        return 4;\n    }\n    draw(context, particle, radius) {\n        context.rect(-radius / fixFactor, -radius / fixFactor, (radius * 2) / fixFactor, (radius * 2) / fixFactor);\n    }\n}\n", "import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine) {\n    const drawer = new SquareDrawer();\n    await engine.addShape(\"edge\", drawer);\n    await engine.addShape(\"square\", drawer);\n}\n", "export class StarDrawer {\n    getSidesCount(particle) {\n        var _a, _b;\n        const star = particle.shapeData;\n        return (_b = (_a = star === null || star === void 0 ? void 0 : star.sides) !== null && _a !== void 0 ? _a : star === null || star === void 0 ? void 0 : star.nb_sides) !== null && _b !== void 0 ? _b : 5;\n    }\n    draw(context, particle, radius) {\n        var _a;\n        const star = particle.shapeData;\n        const sides = this.getSidesCount(particle);\n        const inset = (_a = star === null || star === void 0 ? void 0 : star.inset) !== null && _a !== void 0 ? _a : 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n}\n", "import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine) {\n    await engine.addShape(\"star\", new StarDrawer());\n}\n", "import { colorToHsl, getHslAnimationFromHsl, itemFromArray, randomInRange } from \"../../Utils\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a;\n    const colorValue = value;\n    if (!colorValue || !colorValue.enable) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset);\n    const velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6;\n    if (!decrease || colorValue.status === 0) {\n        colorValue.value += velocity;\n        if (decrease && colorValue.value > max) {\n            colorValue.status = 1;\n            colorValue.value -= colorValue.value % max;\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            colorValue.status = 0;\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateStrokeColor(particle, delta) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    if (!((_a = particle.stroke) === null || _a === void 0 ? void 0 : _a.color)) {\n        return;\n    }\n    const animationOptions = particle.stroke.color.animation;\n    const h = (_c = (_b = particle.strokeColor) === null || _b === void 0 ? void 0 : _b.h) !== null && _c !== void 0 ? _c : (_d = particle.color) === null || _d === void 0 ? void 0 : _d.h;\n    if (h) {\n        updateColorValue(delta, h, animationOptions.h, 360, false);\n    }\n    const s = (_f = (_e = particle.strokeColor) === null || _e === void 0 ? void 0 : _e.s) !== null && _f !== void 0 ? _f : (_g = particle.color) === null || _g === void 0 ? void 0 : _g.s;\n    if (s) {\n        updateColorValue(delta, s, animationOptions.s, 100, true);\n    }\n    const l = (_j = (_h = particle.strokeColor) === null || _h === void 0 ? void 0 : _h.l) !== null && _j !== void 0 ? _j : (_k = particle.color) === null || _k === void 0 ? void 0 : _k.l;\n    if (l) {\n        updateColorValue(delta, l, animationOptions.l, 100, true);\n    }\n}\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        var _a, _b;\n        const container = this.container;\n        particle.stroke =\n            particle.options.stroke instanceof Array\n                ? itemFromArray(particle.options.stroke, particle.id, particle.options.reduceDuplicates)\n                : particle.options.stroke;\n        particle.strokeWidth = particle.stroke.width * container.retina.pixelRatio;\n        const strokeHslColor = (_a = colorToHsl(particle.stroke.color)) !== null && _a !== void 0 ? _a : particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, (_b = particle.stroke.color) === null || _b === void 0 ? void 0 : _b.animation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        const color = (_a = particle.stroke) === null || _a === void 0 ? void 0 : _a.color;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((((_b = particle.strokeColor) === null || _b === void 0 ? void 0 : _b.h.value) !== undefined && color.animation.h.enable) ||\n                (((_c = particle.strokeColor) === null || _c === void 0 ? void 0 : _c.s.value) !== undefined && color.animation.s.enable) ||\n                (((_d = particle.strokeColor) === null || _d === void 0 ? void 0 : _d.l.value) !== undefined && color.animation.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n", "import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container));\n}\n", "import { isInArray, itemFromArray, loadFont } from \"../../Utils\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes.map((t) => options.particles.shape.options[t]).find((t) => !!t);\n            if (shapeOptions instanceof Array) {\n                const promises = [];\n                for (const character of shapeOptions) {\n                    promises.push(loadFont(character));\n                }\n                await Promise.allSettled(promises);\n            }\n            else {\n                if (shapeOptions !== undefined) {\n                    await loadFont(shapeOptions);\n                }\n            }\n        }\n    }\n    draw(context, particle, radius, opacity) {\n        var _a, _b, _c;\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        const textParticle = particle;\n        if (textParticle.text === undefined) {\n            textParticle.text =\n                textData instanceof Array ? itemFromArray(textData, particle.randomIndexData) : textData;\n        }\n        const text = textParticle.text;\n        const style = (_a = character.style) !== null && _a !== void 0 ? _a : \"\";\n        const weight = (_b = character.weight) !== null && _b !== void 0 ? _b : \"400\";\n        const size = Math.round(radius) * 2;\n        const font = (_c = character.font) !== null && _c !== void 0 ? _c : \"Verdana\";\n        const fill = particle.fill;\n        const offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n}\n", "import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine) {\n    const drawer = new TextDrawer();\n    for (const type of validTypes) {\n        await engine.addShape(type, drawer);\n    }\n}\n", "import { loadAngleUpdater } from \"./Updaters/Angle\";\nimport { loadCircleShape } from \"./Shapes/Circle\";\nimport { loadColorUpdater } from \"./Updaters/Color\";\nimport { loadExternalAttractInteraction } from \"./Interactions/External/Attract\";\nimport { loadExternalBounceInteraction } from \"./Interactions/External/Bounce\";\nimport { loadExternalBubbleInteraction } from \"./Interactions/External/Bubble\";\nimport { loadExternalConnectInteraction } from \"./Interactions/External/Connect\";\nimport { loadExternalGrabInteraction } from \"./Interactions/External/Grab\";\nimport { loadExternalRepulseInteraction } from \"./Interactions/External/Repulse\";\nimport { loadImageShape } from \"./Shapes/Image\";\nimport { loadLifeUpdater } from \"./Updaters/Life\";\nimport { loadLineShape } from \"./Shapes/Line\";\nimport { loadOpacityUpdater } from \"./Updaters/Opacity\";\nimport { loadOutModesUpdater } from \"./Updaters/OutModes\";\nimport { loadParticlesAttractInteraction } from \"./Interactions/Particles/Attract\";\nimport { loadParticlesCollisionsInteraction } from \"./Interactions/Particles/Collisions\";\nimport { loadParticlesLinksInteraction } from \"./Interactions/Particles/Links\";\nimport { loadPolygonShape } from \"./Shapes/Polygon\";\nimport { loadSizeUpdater } from \"./Updaters/Size\";\nimport { loadSquareShape } from \"./Shapes/Square\";\nimport { loadStarShape } from \"./Shapes/Star\";\nimport { loadStrokeColorUpdater } from \"./Updaters/StrokeColor\";\nimport { loadTextShape } from \"./Shapes/Text\";\nexport async function loadSlim(engine) {\n    await loadExternalAttractInteraction(engine);\n    await loadExternalBounceInteraction(engine);\n    await loadExternalBubbleInteraction(engine);\n    await loadExternalConnectInteraction(engine);\n    await loadExternalGrabInteraction(engine);\n    await loadExternalRepulseInteraction(engine);\n    await loadParticlesAttractInteraction(engine);\n    await loadParticlesCollisionsInteraction(engine);\n    await loadParticlesLinksInteraction(engine);\n    await loadCircleShape(engine);\n    await loadImageShape(engine);\n    await loadLineShape(engine);\n    await loadPolygonShape(engine);\n    await loadSquareShape(engine);\n    await loadStarShape(engine);\n    await loadTextShape(engine);\n    await loadLifeUpdater(engine);\n    await loadOpacityUpdater(engine);\n    await loadSizeUpdater(engine);\n    await loadAngleUpdater(engine);\n    await loadColorUpdater(engine);\n    await loadStrokeColorUpdater(engine);\n    await loadOutModesUpdater(engine);\n}\n", "import { getRangeValue } from \"../../Utils\";\nfunction updateTilt(particle, delta) {\n    var _a;\n    if (!particle.tilt) {\n        return;\n    }\n    const tilt = particle.options.tilt;\n    const tiltAnimation = tilt.animation;\n    const speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n    const max = 2 * Math.PI;\n    if (!tiltAnimation.enable) {\n        return;\n    }\n    switch (particle.tilt.status) {\n        case 0:\n            particle.tilt.value += speed;\n            if (particle.tilt.value > max) {\n                particle.tilt.value -= max;\n            }\n            break;\n        case 1:\n        default:\n            particle.tilt.value -= speed;\n            if (particle.tilt.value < 0) {\n                particle.tilt.value += max;\n            }\n            break;\n    }\n}\nexport class TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const tiltOptions = particle.options.tilt;\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: (getRangeValue(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: Math.random() >= 0.5 ? 1 : -1,\n            cosDirection: Math.random() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === \"random\") {\n            const index = Math.floor(Math.random() * 2);\n            tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (tiltDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.tilt.status = 1;\n                break;\n            case \"clockwise\":\n                particle.tilt.status = 0;\n                break;\n        }\n        const tiltAnimation = particle.options.tilt.animation;\n        if (tiltAnimation.enable) {\n            particle.tilt.velocity = (tiltAnimation.speed / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= Math.random();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const tilt = particle.options.tilt;\n        const tiltAnimation = tilt.animation;\n        return !particle.destroyed && !particle.spawning && tiltAnimation.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n}\n", "import { TiltUpdater } from \"./TiltUpdater\";\nexport async function loadTiltUpdater(engine) {\n    await engine.addParticleUpdater(\"tilt\", (container) => new TiltUpdater(container));\n}\n", "import { getRangeValue } from \"../../Utils\";\nfunction updateWobble(particle, delta) {\n    var _a;\n    const wobble = particle.options.wobble;\n    if (!wobble.enable || !particle.wobble) {\n        return;\n    }\n    const speed = particle.wobble.speed * delta.factor;\n    const distance = (((_a = particle.retina.wobbleDistance) !== null && _a !== void 0 ? _a : 0) * delta.factor) / (1000 / 60);\n    const max = 2 * Math.PI;\n    particle.wobble.angle += speed;\n    if (particle.wobble.angle > max) {\n        particle.wobble.angle -= max;\n    }\n    particle.position.x += distance * Math.cos(particle.wobble.angle);\n    particle.position.y += distance * Math.abs(Math.sin(particle.wobble.angle));\n}\nexport class WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt.enable) {\n            particle.wobble = {\n                angle: Math.random() * Math.PI * 2,\n                speed: getRangeValue(wobbleOpt.speed) / 360,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                speed: 0,\n            };\n        }\n        particle.retina.wobbleDistance = getRangeValue(wobbleOpt.distance) * this.container.retina.pixelRatio;\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning && particle.options.wobble.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\n", "import { WobbleUpdater } from \"./WobbleUpdater\";\nexport async function loadWobbleUpdater(engine) {\n    await engine.addParticleUpdater(\"wobble\", (container) => new WobbleUpdater(container));\n}\n", "import { loadAbsorbersPlugin } from \"./Plugins/Absorbers\";\nimport { loadEmittersPlugin } from \"./Plugins/Emitters\";\nimport { loadExternalTrailInteraction } from \"./Interactions/External/Trail\";\nimport { loadPolygonMaskPlugin } from \"./Plugins/PolygonMask\";\nimport { loadRollUpdater } from \"./Updaters/Roll\";\nimport { loadSlim } from \"./slim\";\nimport { loadTiltUpdater } from \"./Updaters/Tilt\";\nimport { loadWobbleUpdater } from \"./Updaters/Wobble\";\nexport async function loadFull(engine) {\n    await loadSlim(engine);\n    await loadExternalTrailInteraction(engine);\n    await loadRollUpdater(engine);\n    await loadTiltUpdater(engine);\n    await loadWobbleUpdater(engine);\n    await loadAbsorbersPlugin(engine);\n    await loadEmittersPlugin(engine);\n    await loadPolygonMaskPlugin(engine);\n}\n", "import { Engine } from \"./engine\";\nimport { initPjs } from \"./pjs\";\nimport { loadFull } from \"./full\";\nconst tsParticles = new Engine();\ntsParticles.init();\nconst { particlesJS, pJSDom } = initPjs(tsParticles);\nloadFull(tsParticles);\nexport * from \"./Core\";\nexport * from \"./Core/Container\";\nexport * from \"./Enums\";\nexport * from \"./Plugins/Absorbers/Enums\";\nexport * from \"./Plugins/Emitters/Enums\";\nexport * from \"./Plugins/PolygonMask/Enums\";\nexport { Engine, Engine as Main };\nexport * from \"./Utils\";\nexport * from \"./Types\";\nexport { particlesJS, pJSDom, tsParticles };\n", "import { nextTick, openBlock, createElementBlock } from 'vue';\nimport { Options, Vue } from 'vue-class-component';\nimport { tsParticles } from 'tsparticles';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\n\nlet Particles = class Particles extends Vue {\n    mounted() {\n        nextTick(() => {\n            var _a;\n            if (!this.id) {\n                throw new Error(\"Prop 'id' is required!\");\n            }\n            tsParticles.init();\n            if (this.particlesInit) {\n                this.particlesInit(tsParticles);\n            }\n            const cb = (container) => {\n                this.container = container;\n                if (this.particlesLoaded && container) {\n                    this.particlesLoaded(container);\n                }\n            };\n            if (this.url) {\n                tsParticles\n                    .loadJSON(this.id, this.url)\n                    .then(cb);\n            }\n            else {\n                tsParticles\n                    .load(this.id, (_a = this.options) !== null && _a !== void 0 ? _a : {})\n                    .then(cb);\n            }\n        });\n    }\n    beforeDestroy() {\n        if (this.container) {\n            this.container.destroy();\n        }\n    }\n};\nParticles = __decorate([\n    Options({\n        props: {\n            id: {\n                type: String,\n                required: true\n            },\n            options: {\n                type: Object\n            },\n            url: {\n                type: String\n            },\n            particlesLoaded: {\n                type: Function\n            },\n            particlesInit: {\n                type: Function\n            }\n        }\n    })\n], Particles);\nvar script = Particles;\n\nconst _hoisted_1 = [\"id\"];\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (openBlock(), createElementBlock(\"div\", { id: _ctx.id }, null, 8 /* PROPS */, _hoisted_1))\n}\n\nscript.render = render;\nscript.__file = \"src/Particles/Particles.vue\";\n\nconst VueParticles = (app, options) => {\n    app.component(\"Particles\", script);\n};\n\nexport { script as ParticlesComponent, VueParticles as default };\n", "import d from \"./node_modules/particles.vue3/dist/particles.vue.js\";export default d;\nexport * from \"./node_modules/particles.vue3/dist/particles.vue.js\""],
  "mappings": "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",
  "names": []
}
